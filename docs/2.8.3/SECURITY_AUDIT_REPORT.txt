# ZION 2.8.3 Security Audit Report
# Date: St 29. října 2025, 14:39:38 CET

/home/zion/ZION/tests/test_full_compatibility.py:52:            'PRIVATE_KEY_IMPORT'
/home/zion/ZION/tests/test_advanced_features.py:54:    signed = sign_transaction(raw_tx, kp.private_key_hex)
/home/zion/ZION/tests/test_integration.py:324:                bridge_private_key=self.test_bridge_key,
/home/zion/ZION/docker-compose.production.yml:139:      - BRIDGE_PRIVATE_KEY=${BRIDGE_PRIVATE_KEY}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:302:a key pair or signing a message. Note: just loading the private key will cause
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:305:operation with a private key will be sufficient to completely
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:306:reconstruct the private key**.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:371:`"-----BEGIN EC PRIVATE KEY-----"` base64-encoded format, and the DER format
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:551:immediately reveal the private signing key). The `sk.sign()` method takes an
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:559:derived from the private key and the message being signed. Each time you sign
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:664:ecdh.generate_private_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/crackfortran.py:2225:            if b['name'] in maybe_private.keys():
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:61:PrivateKey = Union[
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:62:    "GenericPrivateKey",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:63:    "rsa.RSAPrivateKey",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:64:    "ec.EllipticCurvePrivateKey",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:65:    "ed25519.Ed25519PrivateKey",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:66:    "ed448.Ed448PrivateKey",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:478:    private_key: PrivateKey,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:489:    """Sign RRset using private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:495:    *private_key*, the private key to use for signing, a
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:496:    ``cryptography.hazmat.primitives.asymmetric`` private key class applicable
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:501:    *dnskey*, a ``DNSKEY`` matching ``private_key``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:589:    if isinstance(private_key, GenericPrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:590:        signing_key = private_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:593:            private_cls = get_algorithm_cls_from_dnskey(dnskey)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:594:            signing_key = private_cls(key=private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:955:    ksks: List[Tuple[PrivateKey, DNSKEY]],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:956:    zsks: List[Tuple[PrivateKey, DNSKEY]],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:977:    for private_key, dnskey in keys:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:980:            private_key=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:996:    keys: List[Tuple[PrivateKey, DNSKEY]] | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:1014:    *keys*, a list of (``PrivateKey``, ``DNSKEY``) tuples, to use for signing. KSK/ZSK
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssec.py:1206:    from dns.dnssecalgs.base import GenericPrivateKey, GenericPublicKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:5:from dns.dnssecalgs.base import GenericPrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:30:algorithms: Dict[Tuple[Algorithm, AlgorithmPrefix], Type[GenericPrivateKey]] = {}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:52:) -> Type[GenericPrivateKey]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:53:    """Get Private Key class from Algorithm.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:59:    Returns a ``dns.dnssecalgs.GenericPrivateKey``
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:70:def get_algorithm_cls_from_dnskey(dnskey: DNSKEY) -> Type[GenericPrivateKey]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:71:    """Get Private Key class from DNSKEY.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:77:    Returns a ``dns.dnssecalgs.GenericPrivateKey``
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:90:    algorithm_cls: Type[GenericPrivateKey],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:94:    """Register Algorithm Private Key class.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:98:    *algorithm_cls*: A `GenericPrivateKey` class.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/__init__.py:106:    if not issubclass(algorithm_cls, GenericPrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/rsa.py:8:from dns.dnssecalgs.cryptography import CryptographyPrivateKey, CryptographyPublicKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/rsa.py:53:class PrivateRSA(CryptographyPrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/rsa.py:54:    key: rsa.RSAPrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/rsa.py:55:    key_cls = rsa.RSAPrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/rsa.py:65:        """Sign using a private key per RFC 3110, section 3."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/rsa.py:76:            key=rsa.generate_private_key(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/dsa.py:7:from dns.dnssecalgs.cryptography import CryptographyPrivateKey, CryptographyPublicKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/dsa.py:66:class PrivateDSA(CryptographyPrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/dsa.py:67:    key: dsa.DSAPrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/dsa.py:68:    key_cls = dsa.DSAPrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/dsa.py:77:        """Sign using a private key per RFC 2536, section 3."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/dsa.py:99:            key=dsa.generate_private_key(key_size=key_size),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:5:from dns.dnssecalgs.base import GenericPrivateKey, GenericPublicKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:15:            raise TypeError("Undefined private key class")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:34:class CryptographyPrivateKey(GenericPrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:41:            raise TypeError("Undefined private key class")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:54:    ) -> "GenericPrivateKey":
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:55:        key = serialization.load_pem_private_key(private_pem, password=password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/ecdsa.py:5:from dns.dnssecalgs.cryptography import CryptographyPrivateKey, CryptographyPublicKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/ecdsa.py:45:class PrivateECDSA(CryptographyPrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/ecdsa.py:46:    key: ec.EllipticCurvePrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/ecdsa.py:47:    key_cls = ec.EllipticCurvePrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/ecdsa.py:56:        """Sign using a private key per RFC 6605, section 4."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/ecdsa.py:75:            key=ec.generate_private_key(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/eddsa.py:6:from dns.dnssecalgs.cryptography import CryptographyPrivateKey, CryptographyPublicKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/eddsa.py:29:class PrivateEDDSA(CryptographyPrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/eddsa.py:38:        """Sign using a private key per RFC 8080, section 4."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/eddsa.py:56:    key: ed25519.Ed25519PrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/eddsa.py:57:    key_cls = ed25519.Ed25519PrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/eddsa.py:68:    key: ed448.Ed448PrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/eddsa.py:69:    key_cls = ed448.Ed448PrivateKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/base.py:60:class GenericPrivateKey(ABC):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/base.py:84:    ) -> "GenericPrivateKey":
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/base.py:85:        """Create private key from PEM-encoded PKCS#8"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/base.py:89:        """Return private key as PEM-encoded PKCS#8"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:88:    # Generate private key x
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:119:        4. Private key (*x*). Optional.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:162:    :ivar x: Private key component
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:174:    #: A private key will also have:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:176:    #:  - **x**, the private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:191:            raise TypeError('Private key not available in this object')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:203:            raise TypeError('Private key not available in this object')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:226:        """Whether this is an ElGamal private key"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:88:            Mandatory for a private key one NIST P curves.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:91:            Mandatory for a private key on Ed25519 (32 bytes),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:94:            Mandatory for a public key. If provided for a private key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:236:            raise ValueError("This is not a private ECC key")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:242:            raise ValueError("This is not a private ECC key")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:330:        # ECPrivateKey ::= SEQUENCE {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:332:        #           privateKey     OCTET STRING,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:361:            private_key = DerOctetString(self._seed).encode()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:365:            private_key = self._export_rfc5915_private_der(include_ec_params=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:368:        result = PKCS8.wrap(private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:384:        return PEM.encode(encoded_der, "EC PRIVATE KEY", passphrase, **kwargs)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:390:        return PEM.encode(encoded_der, "PRIVATE KEY")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:399:        return PEM.encode(encoded_der, "ENCRYPTED PRIVATE KEY")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:403:            raise ValueError("Cannot export OpenSSH private keys")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:440:              For a private key, the ASN.1 ``ECPrivateKey`` structure defined
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:460:            (*Private keys only*) The passphrase to protect the
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:461:            private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:464:            (*Private keys only*)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:473:            When a private key is exported with password-protection
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:490:            When a private key is exported with password-protection
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:500:            If you don't provide a passphrase, the private key will be
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:504:            When exporting a private key with password-protection and `PKCS#8`_
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:554:                    raise ValueError("Private keys can only be encrpyted with DER using PKCS#8")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:560:                raise ValueError("Private keys cannot be exported "
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:583:    """Generate a new private key on the given curve.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:637:        Mandatory for a private key and a NIST P-curve (e.g., P-256).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:641:        Mandatory for a private key and curves Ed25519 (32 bytes),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:685:        # Validate that the private key matches the public one
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:690:                raise ValueError("Private and public ECC keys do not match")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:822:    # ECPrivateKey ::= SEQUENCE {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:824:    #           privateKey     OCTET STRING,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:829:    ec_private_key = DerSequence().decode(encoded, nr_elements=(2, 3, 4))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:830:    if ec_private_key[0] != 1:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:831:        raise ValueError("Incorrect ECC private key version")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:833:    scalar_bytes = DerOctetString().decode(ec_private_key[1]).payload
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:838:    if next_element < len(ec_private_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:840:            parameters = DerObjectId(explicit=0).decode(ec_private_key[next_element]).value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:859:        raise ValueError("Private key is too small")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:863:    if next_element < len(ec_private_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:865:            public_key_enc = DerBitString(explicit=1).decode(ec_private_key[next_element]).value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:880:    algo_oid, private_key, params = PKCS8.unwrap(encoded, passphrase)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:898:        return _import_rfc5915_der(private_key, passphrase, curve_oid)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:901:            raise ValueError("EdDSA ECC private key must not have parameters")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:903:        seed = DerOctetString().decode(private_key).payload
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:908:            raise ValueError("%s ECC private key must not have parameters" %
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:911:        seed = DerOctetString().decode(private_key).payload
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1032:        private_key, decrypted = read_bytes(decrypted)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1033:        d = Integer.from_bytes(private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1044:        private_public_key, decrypted = read_bytes(decrypted)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1045:        seed = private_public_key[:seed_len]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1216:        Supported formats for an ECC **private** key:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1218:        * A binary ``ECPrivateKey`` structure, as defined in `RFC5915`_ (DER).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1224:        Private keys can be in the clear or password-protected.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1229:        The passphrase to use for decrypting a private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1240:        To import EdDSA private and public keys, when encoded as raw ``bytes``, use:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1243:        * :func:`Crypto.Signature.eddsa.import_private_key`.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1247:        To import X25519/X448 private and public keys, when encoded as raw ``bytes``, use:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1250:        * :func:`Crypto.Protocol.DH.import_x25519_private_key`
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1252:        * :func:`Crypto.Protocol.DH.import_x448_private_key`
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1279:    if encoded.startswith(b'-----BEGIN OPENSSH PRIVATE KEY'):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/_openssh.py:68:    # https://coolaj86.com/articles/the-openssh-private-key-format/
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:95:    :ivar x: Private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:144:        """Whether this is a DSA private key"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:221:              Only suitable for public keys, not for private keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:224:            *Private keys only*. The pass phrase to protect the output.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:227:            *Private keys only*. If ``True`` (default), the key is encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:237:            the private DSA key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:260:            If you don't provide a pass phrase, the private key will be
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:300:                private_key = DerInteger(self.x).encode()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:302:                                private_key, oid, passphrase,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:313:                    raise ValueError("DSA private key cannot be encrypted")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:319:                raise ValueError("PKCS#8 is only meaningful for private keys")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:501:            5. Private key (*x*). Optional.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:547:        raise ValueError("DSA private key already comes with parameters")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:617:        The following formats are supported for a DSA **private** key:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:619:        - `PKCS#8`_ ``PrivateKeyInfo`` or ``EncryptedPrivateKeyInfo``
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:626:        In case of an encrypted private key, this is the pass phrase
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:91:            The private exponent. Only required for private keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:93:            The first factor of the modulus. Only required for private keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:95:            The second factor of the modulus. Only required for private keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:98:            private keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:124:            raise AttributeError("No private exponent available for public keys")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:186:            raise TypeError("This is not a private key")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:213:        """Whether this is an RSA private key"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:274:              Only suitable for public keys (not private keys).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:279:            (*Private keys only*) The passphrase to protect the
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:280:            private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:283:            (*Private keys only*) The standard to use for
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:286:            With ``pkcs=1`` (*default*), the private key is encoded with a
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:287:            simple `PKCS#1`_ structure (``RSAPrivateKey``). The key cannot be
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:290:            With ``pkcs=8``, the private key is encoded with a `PKCS#8`_ structure
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:291:            (``PrivateKeyInfo``). PKCS#8 offers the best ways to securely
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:300:            (*For private keys only*)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:301:            The encryption scheme to use for protecting the private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:319:            (*For private keys only*)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:340:            If you don't provide a pass phrase, the private key will be
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:379:                key_type = 'RSA PRIVATE KEY'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:381:                    raise ValueError("PKCS#1 private key cannot be encrypted")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:386:                    key_type = 'PRIVATE KEY'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:390:                    key_type = 'ENCRYPTED PRIVATE KEY'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:482:    Returns: an RSA key object (:class:`RsaKey`, with private key).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:545:    In case of a private key, the following equations must apply:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:684:    # RSAPrivateKey ::= SEQUENCE {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:699:        raise ValueError("No PKCS#1 encoding of an RSA private key")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:796:        The following formats are supported for an RSA **private key**:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:798:        - PKCS#1 ``RSAPrivateKey`` DER SEQUENCE (binary or PEM encoding)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:799:        - `PKCS#8`_ ``PrivateKeyInfo`` or ``EncryptedPrivateKeyInfo``
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:806:        For private keys only, the pass phrase that encrypts the key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:828:    if extern_key.startswith(b'-----BEGIN OPENSSH PRIVATE KEY'):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:127:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:171:        private_key = ECC.construct(seed=b'H'*32, curve="Curve25519")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:172:        private_key2 = ECC.construct(seed=b'H'*32, curve="curve25519")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:173:        private_key3 = ECC.construct(seed=b'C'*32, curve="Curve25519")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:175:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:176:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:177:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:179:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:180:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:185:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:220:        # Private key only
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve25519.py:230:        # Private and public key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:213:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:253:        private_key = ECC.construct(seed=b'H'*32, curve="Ed25519")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:254:        private_key2 = ECC.construct(seed=b'H'*32, curve="ed25519")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:255:        private_key3 = ECC.construct(seed=b'C'*32, curve="Ed25519")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:257:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:258:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:259:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:261:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:262:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:267:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:303:        # Private key only
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed25519.py:313:        # Private and public key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:208:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:248:        private_key = ECC.construct(seed=b'H'*57, curve="Ed448")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:249:        private_key2 = ECC.construct(seed=b'H'*57, curve="ed448")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:250:        private_key3 = ECC.construct(seed=b'C'*57, curve="Ed448")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:252:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:253:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:254:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:256:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:257:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:262:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:298:        # Private key only
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Ed448.py:308:        # Private and public key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_DSA.py:81:        self._check_private_key(dsaObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_DSA.py:88:        self._check_private_key(dsaObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_DSA.py:124:    def _check_private_key(self, dsaObj):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:108:        # Private key with X448 Object ID but X25519 key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:118:        self.ref_private, self.ref_public = create_ref_keys_x25519()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:136:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:139:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:145:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:148:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:154:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:160:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:163:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:184:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:191:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:194:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:207:        self.ref_private, self.ref_public = create_ref_keys_x25519()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:229:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:232:        self.assertRaises(ValueError, self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:247:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:255:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:269:        encoded = self.ref_private.export_key(format="PEM").strip()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:273:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:280:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:292:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:296:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:303:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:307:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:315:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:319:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:325:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:330:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:335:        # No private keys with OpenSSH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:337:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ElGamal.py:168:        self._check_private_key(elgObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ElGamal.py:174:    def _check_private_key(self, elgObj):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:101:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:146:        private_key = ECC.construct(seed=b'H'*56, curve="Curve448")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:147:        private_key2 = ECC.construct(seed=b'H'*56, curve="curve448")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:148:        private_key3 = ECC.construct(seed=b'C'*56, curve="Curve448")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:150:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:151:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:152:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:154:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:155:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:160:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:195:        # Private key only
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_Curve448.py:205:        # Private and public key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_RSA.py:107:        self._check_private_key(rsaObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_RSA.py:116:        self._check_private_key(rsaObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_RSA.py:124:        self._check_private_key(rsaObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_RSA.py:152:        self._check_private_key(rsaObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_RSA.py:159:        self._check_private_key(rsaObj)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_RSA.py:229:    def _check_private_key(self, rsaObj):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:81:    rsaKeyPEM = u'''-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:89:-----END RSA PRIVATE KEY-----'''
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:92:    rsaKeyPEM8 = u'''-----BEGIN PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:101:-----END PRIVATE KEY-----'''
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:103:    # The same RSA private key as in rsaKeyPEM, but now encrypted
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:108:        ('test', u'''-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:119:-----END RSA PRIVATE KEY-----'''),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:122:        ('winter', u'''-----BEGIN ENCRYPTED PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:132:-----END ENCRYPTED PRIVATE KEY-----'''
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:144:    # The private key, in PKCS#1 format encoded with DER
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:159:    # The private key, in unencrypted PKCS#8 format encoded with DER
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:194:        """Verify import of RSAPrivateKey DER SEQUENCE"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:211:        """Verify import of RSAPrivateKey DER SEQUENCE, encoded with PEM as unicode"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:221:        """Verify import of RSAPrivateKey DER SEQUENCE, encoded with PEM as byte string"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:231:        """Verify import of RSAPrivateKey DER SEQUENCE, encoded with PEM as unicode"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:263:        """Verify import of encrypted PrivateKeyInfo DER SEQUENCE"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:274:        """Verify import of unencrypted PrivateKeyInfo DER SEQUENCE"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:284:        """Verify import of unencrypted PrivateKeyInfo DER SEQUENCE, encoded with PEM"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:368:        self.assertTrue(tostr(outkey).find('BEGIN RSA PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:380:        self.assertTrue(tostr(outkey).find('BEGIN RSA PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:392:        self.assertTrue(tostr(outkey).find('BEGIN PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:405:        self.assertTrue(tostr(outkey).find('BEGIN ENCRYPTED PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:436:        self.assertTrue(tostr(outkey).find('BEGIN ENCRYPTED PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:146:-----BEGIN DSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:157:-----END DSA PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:208:-----BEGIN PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:216:-----END PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:256:-----BEGIN DSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:270:-----END DSA PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:296:-----BEGIN ENCRYPTED PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:305:-----END ENCRYPTED PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:81:        # Private key with X448 Object ID but X448 key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:91:        self.ref_private, self.ref_public = create_ref_keys_x448()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:109:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:112:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:118:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:121:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:127:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:133:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:136:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:157:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:164:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:167:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:180:        self.ref_private, self.ref_public = create_ref_keys_x448()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:202:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:205:        self.assertRaises(ValueError, self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:220:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:228:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:242:        encoded = self.ref_private.export_key(format="PEM").strip()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:246:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:253:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:265:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:269:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:276:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:280:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:288:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:292:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:298:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:303:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:308:        # No private keys with OpenSSH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:310:                          self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:879:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:921:        private_key = ECC.construct(d=3, curve="P-192")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:922:        private_key2 = ECC.construct(d=3, curve="P-192")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:923:        private_key3 = ECC.construct(d=4, curve="P-192")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:925:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:926:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:927:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:929:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:930:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:935:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:946:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:988:        private_key = ECC.construct(d=3, curve="P-224")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:989:        private_key2 = ECC.construct(d=3, curve="P-224")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:990:        private_key3 = ECC.construct(d=4, curve="P-224")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:992:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:993:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:994:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:996:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:997:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1002:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1013:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1057:        private_key = ECC.construct(d=3, curve="P-256")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1058:        private_key2 = ECC.construct(d=3, curve="P-256")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1059:        private_key3 = ECC.construct(d=4, curve="P-256")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1061:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1062:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1063:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1065:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1066:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1071:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1082:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1128:        private_key = ECC.construct(d=3, curve="P-384")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1129:        private_key2 = ECC.construct(d=3, curve="P-384")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1130:        private_key3 = ECC.construct(d=4, curve="P-384")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1132:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1133:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1134:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1136:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1137:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1142:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1153:    def test_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1199:        private_key = ECC.construct(d=3, curve="P-521")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1200:        private_key2 = ECC.construct(d=3, curve="P-521")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1201:        private_key3 = ECC.construct(d=4, curve="P-521")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1203:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1204:        public_key2 = private_key2.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1205:        public_key3 = private_key3.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1207:        self.assertEqual(private_key, private_key2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1208:        self.assertNotEqual(private_key, private_key3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_ECC_NIST.py:1213:        self.assertNotEqual(public_key, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:92:    private_key_d = bytes_to_long(compact(key_lines[2:4]))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:98:    return (ECC.construct(curve="P-192", d=private_key_d),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:105:    private_key_d = bytes_to_long(compact(key_lines[2:4]))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:111:    return (ECC.construct(curve="P-224", d=private_key_d),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:118:    private_key_d = bytes_to_long(compact(key_lines[2:5]))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:124:    return (ECC.construct(curve="P-256", d=private_key_d),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:131:    private_key_d = bytes_to_long(compact(key_lines[2:6]))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:137:    return (ECC.construct(curve="P-384", d=private_key_d),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:144:    private_key_d = bytes_to_long(compact(key_lines[2:7]))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:150:    return (ECC.construct(curve="P-521", d=private_key_d),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:169:# ref_private, ref_public = create_ref_keys_p521()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:189:        # The private key does not match the public key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:190:        mismatch = """-----BEGIN PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:195:-----END PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:199:        # ECPrivateKey with a P256 private key, without [0] and [1]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:205:        # ECPrivateKey with a P256 private key, with [0] only
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:211:        # ECPrivateKey with a P256 private key, with [1] only
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:220:        self.ref_private, self.ref_public = create_ref_keys_p192()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:250:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:253:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:256:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:262:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:265:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:271:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:277:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:280:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:286:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:307:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:314:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:317:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:330:        self.ref_private, self.ref_public = create_ref_keys_p224()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:360:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:363:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:366:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:372:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:375:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:381:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:387:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:390:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:396:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:402:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:405:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:426:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:433:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:436:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:449:        self.ref_private, self.ref_public = create_ref_keys_p256()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:479:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:482:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:485:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:491:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:494:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:500:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:506:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:509:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:515:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:521:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:524:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:545:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:557:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:560:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:598:        self.ref_private, self.ref_public = create_ref_keys_p384()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:628:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:631:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:634:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:640:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:643:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:649:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:655:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:658:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:664:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:670:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:673:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:694:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:701:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:704:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:742:        self.ref_private, self.ref_public = create_ref_keys_p521()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:772:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:775:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:778:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:784:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:787:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:793:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:799:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:802:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:808:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:814:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:817:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:838:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:845:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:848:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:886:        self.ref_private, self.ref_public = create_ref_keys_p192()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:931:        encoded = self.ref_private.export_key(format="DER", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:942:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:957:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:965:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1003:        encoded = self.ref_private.export_key(format="PEM", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1012:        assert "EC PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1019:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1034:        encoded = self.ref_private.export_key(format="PEM")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1045:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1052:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1060:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1064:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1072:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1076:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1083:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1087:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1095:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1098:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1100:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1104:        self.assertRaises(ValueError, self.ref_private.export_key, format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1114:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1116:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1123:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1127:        -----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1130:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1134:        -----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1149:        self.ref_private, self.ref_public = create_ref_keys_p224()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1194:        encoded = self.ref_private.export_key(format="DER", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1205:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1220:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1258:        encoded = self.ref_private.export_key(format="PEM", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1267:        assert "EC PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1274:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1289:        encoded = self.ref_private.export_key(format="PEM")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1300:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1307:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1315:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1319:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1327:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1331:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1338:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1342:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1350:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1353:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1355:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1359:        self.assertRaises(ValueError, self.ref_private.export_key, format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1369:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1371:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1378:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1382:        -----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1385:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1389:        -----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1404:        self.ref_private, self.ref_public = create_ref_keys_p256()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1449:        encoded = self.ref_private.export_key(format="DER", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1460:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1475:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1483:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1521:        encoded = self.ref_private.export_key(format="PEM", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1530:        assert "EC PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1537:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1552:        encoded = self.ref_private.export_key(format="PEM")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1563:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1570:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1600:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1604:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1612:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1616:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1623:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1627:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1635:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1638:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1640:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1644:        self.assertRaises(ValueError, self.ref_private.export_key, format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1654:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1656:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1660:        # No private keys with OpenSSH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1661:        self.assertRaises(ValueError, self.ref_private.export_key, format="OpenSSH",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1668:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1671:        -----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1674:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1677:        -----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1692:        self.ref_private, self.ref_public = create_ref_keys_p384()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1737:        encoded = self.ref_private.export_key(format="DER", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1748:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1763:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1771:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1809:        encoded = self.ref_private.export_key(format="PEM", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1818:        assert "EC PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1825:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1840:        encoded = self.ref_private.export_key(format="PEM")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1851:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1858:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1888:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1892:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1900:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1904:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1911:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1915:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1923:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1926:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1928:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1932:        self.assertRaises(ValueError, self.ref_private.export_key, format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1942:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1944:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1948:        # No private keys with OpenSSH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1949:        self.assertRaises(ValueError, self.ref_private.export_key, format="OpenSSH",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1957:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1962:-----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1965:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1970:-----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1985:        self.ref_private, self.ref_public = create_ref_keys_p521()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2036:        encoded = self.ref_private.export_key(format="DER", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2047:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2062:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2070:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2108:        encoded = self.ref_private.export_key(format="PEM", use_pkcs8=False)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2117:        assert "EC PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2124:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2139:        encoded = self.ref_private.export_key(format="PEM")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2150:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2157:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2187:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2191:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2199:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2203:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2210:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2214:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2222:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2225:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2227:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2231:        self.assertRaises(ValueError, self.ref_private.export_key, format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2241:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2243:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2247:        # No private keys with OpenSSH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2248:        self.assertRaises(ValueError, self.ref_private.export_key, format="OpenSSH",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2256:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2262:-----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2265:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2271:-----END EC PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2286:        self.ref_private, self.ref_public = create_ref_keys_ed25519()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2304:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2307:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2313:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2316:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2322:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2328:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2331:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2352:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2359:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2362:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2390:        self.ref_private, self.ref_public = create_ref_keys_ed25519()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2415:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2418:        self.assertRaises(ValueError, self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2433:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2441:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2455:        encoded = self.ref_private.export_key(format="PEM").strip()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2459:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2466:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2488:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2492:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2499:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2503:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2511:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2514:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2518:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2520:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2524:        # No private keys with OpenSSH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2525:        self.assertRaises(ValueError, self.ref_private.export_key, format="OpenSSH",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2533:        self.ref_private, self.ref_public = create_ref_keys_ed448()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2551:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2554:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2560:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2563:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2569:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2575:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2578:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2599:        self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2606:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2609:            self.assertEqual(self.ref_private, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2622:        self.ref_private, self.ref_public = create_ref_keys_ed448()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2647:        encoded = self.ref_private.export_key(format="DER")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2650:        self.assertRaises(ValueError, self.ref_private.export_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2665:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2673:        encoded = self.ref_private.export_key(format="DER",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2688:        encoded = self.ref_private.export_key(format="PEM").strip()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2692:        encoded = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2699:        assert "ENCRYPTED PRIVATE KEY" in encoded
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2714:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2718:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2725:        encoded1 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2729:        encoded2 = self.ref_private.export_key(format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2737:        self.assertRaises(ValueError, self.ref_private.export_key, format="XXX")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2740:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2744:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2746:        self.assertRaises(ValueError, self.ref_private.export_key, format="PEM",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2750:        # No private keys with OpenSSH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2751:        self.assertRaises(ValueError, self.ref_private.export_key, format="OpenSSH",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_dss.py:152:        self.assertTrue("Private key is needed" in msg)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_dss.py:275:        self.assertTrue("Private key is needed" in msg)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:65:    rsa_key = b'-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAsvI34FgiTK8+txBvmooNGpNwk23YTU51dwNZi5yha3W4lA/Q\nvcZrDalkmD7ekWQwnduxVKa6pRSI13KBgeUOIqJoGXSWhntEtY3FEwvWOHW5AE7Q\njUzTzCiYT6TVaCcpa/7YLai+p6ai2g5f5Zfh4jSawa9uYeuggFygQq4IVW796MgV\nyqxYMM/arEj+/sKz3Viua9Rp9fFosertCYCX4DUTgW0mX9bwEnEOgjSI3pLOPXz1\n8vx+DRZS5wMCmwCUa0sKonLn3cAUPq+sGix7+eo7T0Z12MU8ud7IYVX/75r3cXiF\nPaYE2q8Le0kgOApIXbb+x74x0rNgyIh1yGygkwIDAQABAoIBABz4t1A0pLT6qHI2\nEIOaNz3mwhK0dZEqkz0GB1Dhtoax5ATgvKCFB98J3lYB08IBURe1snOsnMpOVUtg\naBRSM+QqnCUG6bnzKjAkuFP5liDE+oNQv1YpKp9CsUovuzdmI8Au3ewihl+ZTIN2\nUVNYMEOR1b5m+z2SSwWNOYsiJwpBrT7zkpdlDyjat7FiiPhMMIMXjhQFVxURMIcB\njUBtPzGvV/PG90cVDWi1wRGeeP1dDqti/jsnvykQ15KW1MqGrpeNKRmDdTy/Ucl1\nWIoYklKw3U456lgZ/rDTDB818+Tlnk35z4yF7d5ANPM8CKfqOPcnO1BCKVFzf4eq\n54wvUtkCgYEA1Zv2lp06l7rXMsvNtyYQjbFChezRDRnPwZmN4NCdRtTgGG1G0Ryd\nYz6WWoPGqZp0b4LAaaHd3W2GTcpXF8WXMKfMX1W+tMAxMozfsXRKMcHoypwuS5wT\nfJRXJCG4pvd57AB0iVUEJW2we+uGKU5Zxcx//id2nXGCpoRyViIplQsCgYEA1nVC\neHupHChht0Fh4N09cGqZHZzuwXjOUMzR3Vsfz+4WzVS3NvIgN4g5YgmQFOeKwo5y\niRq5yvubcNdFvf85eHWClg0zPAyxJCVUWigCrrOanGEhJo6re4idJvNVzu4Ucg0v\n6B3SJ1HsCda+ZSNz24bSyqRep8A+RoAaoVSFx5kCgYEAn3RvXPs9s+obnqWYiPF3\nRe5etE6Vt2vfNKwFxx6zaR6bsmBQjuUHcABWiHb6I71S0bMPI0tbrWGG8ibrYKl1\nNTLtUvVVCOS3VP7oNTWT9RTFTAnOXU7DFSo+6o/poWn3r36ff6zhDXeWWMr2OXtt\ndEQ1/2lCGEGVv+v61eVmmQUCgYABFHITPTwqwiFL1O5zPWnzyPWgaovhOYSAb6eW\n38CXQXGn8wdBJZL39J2lWrr4//l45VK6UgIhfYbY2JynSkO10ZGow8RARygVMILu\nOUlaK9lZdDvAf/NpGdUAvzTtZ9F+iYZ2OsA2JnlzyzsGM1l//3vMPWukmJk3ral0\nqoJJ8QKBgGRG3eVHnIegBbFVuMDp2NTcfuSuDVUQ1fGAwtPiFa8u81IodJnMk2pq\niXu2+0ytNA/M+SVrAnE2AgIzcaJbtr0p2srkuVM7KMWnG1vWFNjtXN8fAhf/joOv\nD+NmPL/N4uE57e40tbiU/H7KdyZaDt+5QiTmdhuyAe6CBjKsF2jy\n-----END RSA PRIVATE KEY-----'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:160:        test_private_key = RSA.generate(1024)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:161:        signer = pss.new(test_private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:186:        private_key = RSA.construct([bytes_to_long(x) for x in (modulus, tv.e, tv.d)])  # type: ignore
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:193:        signer = pss.new(private_key, salt_bytes=len(tv.saltval), rand_func=prng)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:195:        signer = pss.new(private_key, salt_bytes=0)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pkcs1_15.py:108:        test_private_key = RSA.generate(1024)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pkcs1_15.py:109:        signer = pkcs1_15.new(test_private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pkcs1_15.py:134:        private_key = RSA.construct([bytes_to_long(x) for x in (modulus, tv.e, tv.d)]) # type: ignore
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pkcs1_15.py:135:        signer = pkcs1_15.new(private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pkcs1_15.py:152:    rsakey = """-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pkcs1_15.py:160:            -----END RSA PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_eddsa.py:412:            key = eddsa.import_private_key(sk)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_eddsa.py:567:        key = eddsa.import_private_key(tv.sk)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_15.py:70:                # Private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_15.py:71:                '''-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_15.py:85:-----END RSA PRIVATE KEY-----''',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_15.py:222:            return RSA.import_key(group['privateKeyPem'])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_oaep.py:73:                # Private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_oaep.py:118:                # Private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_oaep.py:162:                # Private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_oaep.py:207:                # Private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_oaep.py:398:            return RSA.import_key(group['privateKeyPem'])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:77:    def test_neg_too_many_private_keys(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:82:        self.assertIn("Exactly 1 private key", str(cm.exception))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:154:        keyR = DH.import_x25519_private_key(bytes.fromhex(keyR_hex))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:194:        keyR = DH.import_x25519_private_key(bytes.fromhex(keyR_hex))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:241:        keyR = DH.import_x25519_private_key(bytes.fromhex(keyR_hex))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:244:        keyS = DH.import_x25519_private_key(bytes.fromhex(keyS_hex))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:285:        keyR = DH.import_x25519_private_key(bytes.fromhex(keyR_hex))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:288:        keyS = DH.import_x25519_private_key(bytes.fromhex(keyS_hex))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:346:    def import_private_key(self, key_hex, kem_id):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:358:            return DH.import_x25519_private_key(key_bin)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:360:            return DH.import_x448_private_key(key_bin)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:392:                receiver_pub = self.import_private_key(vector["skRm"],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:397:                    sender_priv = self.import_private_key(vector["skSm"],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:400:                encap_key = self.import_private_key(vector["skEm"], kem_id)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:442:                receiver_priv = self.import_private_key(vector["skRm"],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:447:                    sender_priv = self.import_private_key(vector["skSm"],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:16:                                import_x25519_private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:18:                                import_x448_private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:49:    private_key = ECC.construct(curve=curve_name,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:56:                  private_key=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:60:                static_priv=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:66:                      private_key=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:70:                static_priv=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:131:        private_key = ECC.construct(curve=tv.curve, d=tv.private)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:135:                              static_priv=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:154:    static_priv = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg9VHFVKh2a1aVFifH\n+BiyNaRa2kttEg3165Ye/dJxJ7KhRANCAARImIEXro5ZOcyWU2mq/+d79FEZXtTA\nbKkz1aICQXihQdCMzRNbeNtC9LFLzhu1slRKJ2xsDAlw9r6w6vwtkRzr\n-----END PRIVATE KEY-----')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:155:    static_pub = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgHhmv8zmZ+Nw8fsZd\ns8tlZflyfw2NE1CRS9DWr3Y3O46hRANCAAS3hZVUCbk+uk3w4S/YOraEVGG+WYpk\nNO/vrwzufUUks2GV2OnBQESe0EBk4Jq8gn4ij8Lvs3rZX2yT+XfeATYd\n-----END PRIVATE KEY-----').public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:157:    eph_priv = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgGPdJmFFFKzLPspIr\nE1T2cEjeIf4ajS9CpneP0e2b3AyhRANCAAQBexAA5BYDcXHs2KOksTYUsst4HhPt\nkp0zkgI2virc3OGJFNGPaCCPfFCQJHwLRaEpiq3SoQlgoBwSc8ZPsl3y\n-----END PRIVATE KEY-----')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:159:    eph_pub = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQghaVZXElSEGEojFKF\nOU0JCpxWUWHvWQUR81gwWrOp76ShRANCAATi1Ib2K+YR3AckD8wxypWef7pw5PRw\ntBaB3RDPyE7IjHZC6yu1DbcXoCdtaw+F5DM+4zpl59n5ZaIy/Yl1BdIy\n-----END PRIVATE KEY-----')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:256:        # No private (local) keys
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:294:            priv_key = DH.import_x25519_private_key(unhexlify(tv1))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:304:        priv_key = DH.import_x25519_private_key(k)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:315:            priv_key = DH.import_x25519_private_key(result)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:334:        alice_priv_key = DH.import_x25519_private_key(unhexlify(tv1))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:336:        bob_priv_key = DH.import_x25519_private_key(unhexlify(tv3))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:389:            priv_key = DH.import_x448_private_key(unhexlify(tv1))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:399:        priv_key = DH.import_x448_private_key(k)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:410:            priv_key = DH.import_x448_private_key(result)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:429:        alice_priv_key = DH.import_x448_private_key(unhexlify(tv1))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:431:        bob_priv_key = DH.import_x448_private_key(unhexlify(tv3))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:525:            private_key = import_x25519_private_key(tv.private)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:529:                private_key = ECC.import_key(tv.private)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:567:                private_key = import_x25519_private_key(jwk_private)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:584:                              static_priv=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:669:            private_key = import_x448_private_key(tv.private)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:673:                private_key = ECC.import_key(tv.private)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:711:                private_key = import_x448_private_key(jwk_private)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:732:                              static_priv=private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:93:            raise TypeError("Private key is needed to sign")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:170:    def __init__(self, key, encoding, order, private_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:172:        self._private_key = private_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:216:                               self._int2octets(self._private_key) +
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:320:            The key to use for computing the signature (*private* keys only)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:381:        private_key_attr = 'd'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:386:        private_key_attr = 'x'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:391:        private_key = getattr(key, private_key_attr)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:393:        private_key = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.py:396:        return DeterministicDsaSigScheme(key, encoding, order, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/pkcs1_15.py:84:            raise ValueError("Fault detected in RSA private key operation")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/pkcs1_15.py:217:      Signing is only possible when ``rsa_key`` is a **private** RSA key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.pyi:12:def import_private_key(encoded: bytes) -> EccKey: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.py:69:def import_private_key(encoded):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.py:70:    """Create a new Ed25519 or Ed448 private key object,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.py:76:        The EdDSA private key to import.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.py:91:        raise ValueError("Incorrect length. Only EdDSA private keys are supported.")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.py:93:    # Note that the private key is truly a sequence of random bytes,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.py:139:            raise TypeError("Private key is needed to sign")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/eddsa.py:319:            The key to use for computing the signature (*private* keys only)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/pss.py:114:            raise ValueError("Fault detected in RSA private key operation")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/pss.py:336:      Signing is only possible when ``rsa_key`` is a **private** RSA key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Signature/DSS.pyi:19:    def __init__(self, key, encoding, order, private_key) -> None: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.pyi:8:def wrap(private_key: bytes,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.pyi:17:def unwrap(p8_private_key: bytes, passphrase: Optional[Union[bytes, str]] = ...) -> Tuple[str, bytes, Optional[bytes]]: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:72:# EncryptedPrivateKeyInfo ::= SEQUENCE {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:147:        enc_private_key_info = DerSequence().decode(data)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:148:        encrypted_algorithm = DerSequence().decode(enc_private_key_info[0])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:149:        encrypted_data = DerOctetString().decode(enc_private_key_info[1]).payload
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:381:        enc_private_key_info = DerSequence([
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:392:        return enc_private_key_info.encode()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:409:        enc_private_key_info = DerSequence().decode(data, nr_elements=2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:410:        enc_algo = DerSequence().decode(enc_private_key_info[0])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/_PBES.py:411:        encrypted_data = DerOctetString().decode(enc_private_key_info[1]).payload
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:50:def wrap(private_key, key_oid, passphrase=None, protection=None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:52:    """Wrap a private key into a PKCS#8 blob (clear or encrypted).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:56:      private_key (bytes):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:57:        The private key encoded in binary form. The actual encoding is
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:61:        The object identifier (OID) of the private key to wrap.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:92:      bytes: The PKCS#8-wrapped private key (possibly encrypted).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:96:    #   PrivateKeyInfo ::= SEQUENCE {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:98:    #       privateKeyAlgorithm     PrivateKeyAlgorithmIdentifier,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:99:    #       privateKey              PrivateKey,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:111:                DerOctetString(private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:129:def unwrap(p8_private_key, passphrase=None):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:130:    """Unwrap a private key from a PKCS#8 blob (clear or encrypted).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:133:      p8_private_key (bytes):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:134:        The private key wrapped into a PKCS#8 container, DER encoded.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:144:       #. the private key (bytes, DER encoded)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:156:            p8_private_key = PBES1.decrypt(p8_private_key, passphrase)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:165:                p8_private_key = PBES2.decrypt(p8_private_key, passphrase)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:175:    pk_info = DerSequence().decode(p8_private_key, nr_elements=(2, 3, 4, 5))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:182:    #   PrivateKeyInfo ::= SEQUENCE {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:184:    #       privateKeyAlgorithm     PrivateKeyAlgorithmIdentifier,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:185:    #       privateKey              PrivateKey,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:193:    #       privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:194:    #       privateKey                PrivateKey,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:203:            raise ValueError("Not a valid PrivateKeyInfo SEQUENCE")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:206:            raise ValueError("Not a valid PrivateKeyInfo SEQUENCE")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:208:        raise ValueError("Not a valid PrivateKeyInfo SEQUENCE")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:221:    # PrivateKey ::= OCTET STRING
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:222:    private_key = DerOctetString().decode(pk_info[2]).payload
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:226:    return (algo_oid, private_key, algo_params)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/PKCS1_OAEP.py:202:      Decryption is only possible with a private RSA key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/PKCS1_v1_5.py:176:      Decryption is only possible if *key* is a private RSA key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.pyi:16:def import_x25519_private_key(encoded: bytes) -> EccKey: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.pyi:18:def import_x448_private_key(encoded: bytes) -> EccKey: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:403:        If this is a **private** key, the HPKE context can only be used to
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:425:        private key, and vice versa.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:445:        unsealing (if ``receiver_key`` is a private key).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:460:        count_private_keys = int(receiver_key.has_private()) + \
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:462:        if count_private_keys != 1:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:463:            raise ValueError("Exactly 1 private key required")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:44:def import_x25519_private_key(encoded):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:45:    """Create a new X25519 private key object,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:51:        The X25519 private key to import.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:85:def import_x448_private_key(encoded):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:86:    """Create a new X448 private key object,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:92:        The X448 private key to import.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:113:        The local static private key. Optional.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:117:        The local ephemeral private key, generated for this session. Optional.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:121:    At least two keys must be passed, of which one is a private key and one
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:144:        if private and not key.has_private():
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:145:            raise TypeError("'%s' must be a private ECC key" % name)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/eventlet/convenience.py:182:                context.use_privatekey_file(keyfile)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/util/ssl_.py:470:        raise SSLError("Client private key is encrypted, password is required")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/pyopenssl.py:492:            self._ctx.use_privatekey_file(keyfile or certfile)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/util/ssl_.py:423:        raise SSLError("Client private key is encrypted, password is required")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/_securetransport/low_level.py:320:    # private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/pyopenssl.py:479:        self._ctx.use_privatekey_file(keyfile or certfile)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/cli/cmdoptions.py:351:    "private key and the certificate in PEM format.",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/serving.py:91:        RSAPrivateKeyWithSerialization,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/serving.py:506:) -> tuple[Certificate, RSAPrivateKeyWithSerialization]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/serving.py:519:    pkey = rsa.generate_private_key(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/serving.py:630:    """Loads SSL context from cert/private key files and optional protocol.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/serving.py:635:    :param pkey_file: Path of the private key to use. If not given, the key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/serving.py:1063:        private key files.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/prometheus_client/exposition.py:218:                       f"its private key file {keyfile!r}: {msg}")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/ada.py:53:            (r'generic|private', Keyword.Declaration),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/foxpro.py:379:             r'POP\s*POPUP|PRIVATE|PROCEDURE|PUBLIC|PUSH\s*KEY|'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/verifpal.py:35:            (r'(knows)( +)(private|public)( +)', bygroups(Name.Builtin, Whitespace, Keyword.Constant, Whitespace), 'shared'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_tsql_builtins.py:821:    'certprivatekey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/factor.py:281:            (r'(<PRIVATE|PRIVATE>)(\s)', bygroups(Keyword.Namespace, Whitespace)),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/urbi.py:84:            (r'(private|protected|public)\b', Keyword),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_lasso_builtins.py:1079:        'io_net_ssl_useprivatekeyfile',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/int_fiction.py:328:            (r'(class|has|private|with)\b', Keyword.Declaration, '#pop'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/int_fiction.py:336:            (r'(has|private|with)\b', Keyword.Declaration),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/prolog.py:266:            (r'(public|protected|private)(?=[(])', Keyword, 'root'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/haxe.py:91:            (r'(?:extern|private)\b', Keyword.Declaration),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/haxe.py:493:            (r'(?:extern|private)\b', Keyword.Declaration),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/fantom.py:95:            (r'\b(public|protected|private|internal)\b', Keyword),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:1765:             'openssl_get_privatekey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:1797:             'openssl_x509_check_private_key',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/asc.py:29:        'id_rsa',  # SSH private keys
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/main.py:251:        exclude_from_namespace = fields | private_attributes.keys() | {'__slots__'}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/main.py:276:            '__slots__': slots | private_attributes.keys(),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/main.py:1667:        'The private method `_calculate_keys` will be removed and should no longer be used.',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/main.py:1672:            'The private method `_calculate_keys` will be removed and should no longer be used.',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ssh.py:42:        return der.topem(self.bytes, "OPENSSH PRIVATE KEY")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:746:    Class for handling keys that can create signatures (private keys).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:752:    :ivar int baselen: the length of a :term:`raw encoding` of private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:754:        associated with this private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:755:    :ivar `~ecdsa.ecdsa.Private_key` privkey: the actual private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:784:        """Generate a private key on a Twisted Edwards curve."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:788:        private_key = eddsa.PrivateKey(curve.generator, random)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:789:        public_key = private_key.public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:799:        self.privkey = private_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:805:        """Generate a private key on a Weierstrass curve."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:812:        Generate a random private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:817:        :param entropy: Source of randomness for generating the private keys,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:836:        Create a private key from a random integer.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:839:        :func:`~SigningKey.generate` method to create private keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:841:        :param int secexp: secret multiplier (the actual private key in ECDSA).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:880:        self.privkey = ecdsa.Private_key(pubkey, secexp)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:887:        Decode the private key from :term:`raw encoding`.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:893:        :param string: the raw encoding of the private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:914:                "Invalid length of private key, received {0}, "
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:922:            self.privkey = eddsa.PrivateKey(curve.generator, string)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:940:        ``BEGIN EC PRIVATE KEY``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:941:        PKCS#8 files have the header ``BEGIN PRIVATE KEY``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:949:        :param string: text with PEM-encoded private ECDSA key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:970:        # "EC PARAMETERS", we need just "EC PRIVATE KEY". PKCS#8 should not
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:971:        # have the "EC PARAMETERS" section; it's just "PRIVATE KEY".
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:972:        private_key_index = string.find(b"-----BEGIN EC PRIVATE KEY-----")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:973:        if private_key_index == -1:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:974:            private_key_index = string.index(b"-----BEGIN PRIVATE KEY-----")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:977:            der.unpem(string[private_key_index:]),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:994:            ECPrivateKey ::= SEQUENCE {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:996:              privateKey     OCTET STRING,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1008:        is part of the PrivateKeyAlgorithmIdentifier.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1010:        The PKCS #8 format includes an ECPrivateKey object as the `privateKey`
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1015:                privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1016:                privateKey                PrivateKey,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1026:        :param string: binary string with DER-encoded private ECDSA key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1077:                # Privatekey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1082:                #         "trailing junk inside the privateKey"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1087:                        "trailing junk after the encoded private key"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1105:            # Up next is an octet string containing an ECPrivateKey. Ignore
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1109:            # Unpack the ECPrivateKey to get to the key data octet string,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1120:        # The version of the ECPrivateKey must be 1.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1158:        Convert the private key to :term:`raw encoding`.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1164:        :return: raw encoding of private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1168:            return bytes(self.privkey.private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1180:        Convert the private key to the :term:`PEM` format.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1187:        The PEM header will specify ``BEGIN EC PRIVATE KEY`` or
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1188:        ``BEGIN PRIVATE KEY``, depending on the desired format.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1198:        :return: PEM encoded private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1206:        header = "EC PRIVATE KEY" if format == "ssleay" else "PRIVATE KEY"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1214:        ec_private_key = der.encode_octet_string(self.to_string())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1218:            der.encode_octet_string(ec_private_key),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1228:        Convert the private key to the :term:`DER` format.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1246:        :return: DER encoded private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1274:        ec_private_key = der.encode_sequence(*priv_key_elems)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1277:            return ec_private_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1287:                der.encode_octet_string(ec_private_key),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1292:        Convert the private key to the SSH format.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1294:        :return: SSH encoded private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1305:        Return the VerifyingKey associated with this private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/rfc6979.py:48:    :param int secexp: secure exponent (private key) in numeric form
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:194:        # the private key depends upon using different random numbers for
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:245:        self.assertTrue(s1.startswith(b"-----BEGIN EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:246:        self.assertTrue(s1.strip().endswith(b"-----END EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:258:        self.assertTrue(s1.startswith(b"-----BEGIN EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:259:        self.assertTrue(s1.strip().endswith(b"-----END EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:272:        self.assertTrue(s1.startswith(b"-----BEGIN EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:273:        self.assertTrue(s1.strip().endswith(b"-----END EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:50:    ecdh2.generate_private_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:52:    ecdh2.load_received_public_key(ecdh1.generate_private_key())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:64:    ecdh2 = ECDH(private_key=key2, public_key=key1.verifying_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:78:    ecdh1.generate_private_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:92:            ecdh1.load_private_key(key1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:100:            ecdh1.generate_private_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:108:            ecdh1.load_private_key_bytes(b"\x01" * 32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:124:    ecdh1.generate_private_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:126:    ecdh2.generate_private_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:146:    ecdh1.generate_private_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:152:    ecdh1.private_key.privkey.secret_multiplier = ecdh1.private_key.curve.order
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:162:    "curve,privatekey,pubkey,secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:294:def test_ecdh_NIST(curve, privatekey, pubkey, secret):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:296:    ecdh.load_private_key_bytes(unhexlify(privatekey))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:304:pem_local_private_key = (
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:305:    "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:309:    "-----END EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:311:der_local_private_key = (
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:331:    ecdh.load_private_key_pem(pem_local_private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:341:    ecdh.load_private_key_der(unhexlify(der_local_private_key))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:413:    ecdh1.load_private_key_pem(key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:416:    ecdh2.load_private_key_pem(key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/errors.py:2:    """Raised in case the encoding of private or public key is malformed."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:15:private keys, public keys, signatures,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:27:   # Generate a public/private key pair using the NIST Curve P-192:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:33:   privkey = Private_key( pubkey, secret )
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:210:class Private_key(object):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:211:    """Private key for ECDSA."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:223:        if isinstance(other, Private_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:238:        an attacker can guess random_k, he can compute our private key from a
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:12:    Private_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:52:        cls.privk = Private_key(cls.pubk, cls.d)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:241:class TestPrivateKey(unittest.TestCase):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:250:    def test_equality_private_keys(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:251:        pr_key1 = Private_key(self.pub_key, 100)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:252:        pr_key2 = Private_key(self.pub_key, 100)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:255:    def test_inequality_private_keys(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:256:        pr_key1 = Private_key(self.pub_key, 100)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:257:        pr_key2 = Private_key(self.pub_key, 200)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:260:    def test_inequality_private_keys_not_implemented(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:261:        pr_key = Private_key(self.pub_key, 100)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdsa.py:680:    privkey = Private_key(pubkey, sec_mult)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:144:            "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:148:            "-----END EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:527:            "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:531:            "-----END EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:536:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:540:            "-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:545:            "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:549:            "-----END EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:566:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:575:            "-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:591:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:600:            "-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:658:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:660:            "-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:698:            "trailing junk after the encoded private key", str(e.exception)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:754:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:756:            "-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:774:            b"-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:776:            b"-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:789:            b"-----BEGIN OPENSSH PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:795:            b"-----END OPENSSH PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:820:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:823:            "-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:846:            b"-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:849:            b"-----END PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:919:    "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:923:    "-----END EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1031:    "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1035:    "-----END EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1132:    pem = """-----BEGIN PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1135:    -----END PRIVATE KEY-----"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:18:    PrivateKey,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:564:    def test_equal_private_keys(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:565:        key1 = PrivateKey(generator_ed25519, b"\x01" * 32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:566:        key2 = PrivateKey(generator_ed25519, b"\x01" * 32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:572:    def test_unequal_private_keys(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:573:        key1 = PrivateKey(generator_ed25519, b"\x01" * 32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:574:        key2 = PrivateKey(generator_ed25519, b"\x02" * 32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:580:    def test_unequal_privatekey_to_string(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:581:        key1 = PrivateKey(generator_ed25519, b"\x01" * 32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:586:    def test_unequal_privatekey_curves(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:587:        key1 = PrivateKey(generator_ed25519, b"\x01" * 32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:588:        key2 = PrivateKey(generator_ed448, b"\x01" * 57)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:594:    def test_wrong_length_of_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:596:            PrivateKey(generator_ed25519, b"\x01" * 31)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:613:            PrivateKey(fake_gen, g.to_bytes())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:1106:    "generator,private_key,public_key,message,signature",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:1109:def test_vectors(generator, private_key, public_key, message, signature):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:1110:    private_key = a2b_hex(private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_eddsa.py:1115:    sig_key = PrivateKey(generator, private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:162:class PrivateKey(object):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:163:    """Private key for the Edwards Digital Signature Algorithm."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:165:    def __init__(self, generator, private_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:170:        if len(private_key) != self.baselen:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:172:                "Incorrect size of private key, expected: {0} bytes".format(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:176:        self.__private_key = bytes(private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:177:        self.__h = bytearray(self.curve.hash_func(private_key))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:186:    def private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:187:        return self.__private_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:190:        if isinstance(other, PrivateKey):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:193:                and self.__private_key == other.__private_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/eddsa.py:221:        """Generate the public key based on the included private key"""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:33:    ECDH. Raised in case the public and private keys use different curves.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:49:    Allows two parties, each having an elliptic-curve public-private key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:53:    def __init__(self, curve=None, private_key=None, public_key=None):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:64:        :param private_key: `my` private key for ECDH
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:65:        :type private_key: SigningKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:70:        self.private_key = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:72:        if private_key:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:73:            self.load_private_key(private_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:78:        if not self.private_key:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:80:                "Private key needs to be set to create shared secret"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:87:            self.private_key.curve == self.curve == remote_public_key.curve
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:90:                "Curves for public key and private key is not equal."
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:93:        # shared secret = PUBKEYtheirs * PRIVATEKEYours
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:96:            * self.private_key.privkey.secret_multiplier
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:112:    def generate_private_key(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:114:        Generate local private key for ecdh operation with curve that was set.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:118:        :return: public (verifying) key from this private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:123:        return self.load_private_key(SigningKey.generate(curve=self.curve))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:125:    def load_private_key(self, private_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:127:        Load private key from SigningKey (keys.py) object.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:132:        :param private_key: Initialised SigningKey class
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:133:        :type private_key: SigningKey
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:135:        :raises InvalidCurveError: private_key curve not the same as self.curve
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:137:        :return: public (verifying) key from this private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:141:            self.curve = private_key.curve
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:142:        if self.curve != private_key.curve:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:144:        self.private_key = private_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:145:        return self.private_key.get_verifying_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:147:    def load_private_key_bytes(self, private_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:149:        Load private key from byte string.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:155:        :param private_key: private key in bytes string format
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:156:        :type private_key: :term:`bytes-like object`
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:160:        :return: public (verifying) key from this private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:165:        return self.load_private_key(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:166:            SigningKey.from_string(private_key, curve=self.curve)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:169:    def load_private_key_der(self, private_key_der):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:171:        Load private key from DER byte string.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:179:        :param private_key_der: string with the DER encoding of private ECDSA
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:181:        :type private_key_der: string
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:183:        :raises InvalidCurveError: private_key curve not the same as self.curve
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:185:        :return: public (verifying) key from this private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:188:        return self.load_private_key(SigningKey.from_der(private_key_der))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:190:    def load_private_key_pem(self, private_key_pem):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:192:        Load private key from PEM string.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:199:        it needs to have `EC PRIVATE KEY` section
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:201:        :param private_key_pem: string with PEM-encoded private ECDSA key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:202:        :type private_key_pem: string
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:204:        :raises InvalidCurveError: private_key curve not the same as self.curve
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:206:        :return: public (verifying) key from this private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:209:        return self.load_private_key(SigningKey.from_pem(private_key_pem))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:213:        Provides a public key that matches the local private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:217:        :return: public (verifying) key from local private key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:220:        return self.private_key.get_verifying_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:304:        Generate shared secret from local private key and remote public key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:306:        The objects needs to have both private key and received public key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:310:        :raises NoKeyError: public_key or private_key is not set
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:316:            self.generate_sharedsecret(), self.private_key.curve.curve.p()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:321:        Generate shared secret from local private key and remote public key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:323:        The objects needs to have both private key and received public key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:327:        shared secret(local private key, remote public key) ==
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:328:        shared secret(local public key, remote private key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:331:        :raises NoKeyError: public_key or private_key is not set
/home/zion/ZION/docs/CORE/MINING_STARTUP_LOG.md:32:- **Private keys**: Bezpečně šifrované a zálohované
/home/zion/ZION/docs/CORE/MINING_STARTUP_LOG.md:75:- ⚠️ **PRIVATE KEYS**: Nikdy necommitovat do gitu!
/home/zion/ZION/docs/CORE/NEXT-STEPS.md:245:- [ ] Wallet private key encryption
/home/zion/ZION/docs/CORE/SECURITY_WHITELIST.md:20:- **Security**: Deterministic genesis address, private keys derivable from genesis config
/home/zion/ZION/docs/CORE/SECURITY_WHITELIST.md:35:- **Status**: ✅ SECURE - No private keys in plain text
/home/zion/ZION/docs/MULTI_CHAIN_TECHNICAL_ROADMAP.md:438:      privateKey: string;
/home/zion/ZION/docs/MAINNET_LAUNCH.md:24:- [ ] Private keys stored offline
/home/zion/ZION/docs/runtime/20250923T/WALLET_BACKUP_QUICK_GUIDE.md:38:Keep passphrases and private keys in a password manager; store encrypted backups offsite with versioning.
/home/zion/ZION/docs/ZION_2.6.75_COMPLETE_IMPLEMENTATION_REPORT.md:237:        'private_key': kyber_private_key,
/home/zion/ZION/docs/ZION_2.6.75_COMPLETE_IMPLEMENTATION_REPORT.md:244:def sign_dilithium(message: bytes, private_key: bytes) -> bytes:
/home/zion/ZION/docs/ZION_2.6.75_COMPLETE_IMPLEMENTATION_REPORT.md:264:| **Private Key Recovery** | RSA 2048-bit | Shor's Algorithm | CRYSTALS-Kyber |
/home/zion/ZION/docs/MULTI_CHAIN_FUNCTIONAL_DEPLOYMENT_PLAN_2025-09-30.md:189:    private zionTokenMint: PublicKey;
/home/zion/ZION/docs/MULTI_CHAIN_FUNCTIONAL_DEPLOYMENT_PLAN_2025-09-30.md:369:TRON_PRIVATE_KEY_PATH=/app/keys/tron-private.key
/home/zion/ZION/docs/roadmaps/MULTI_CHAIN_TECHNICAL_ROADMAP.md:438:      privateKey: string;
/home/zion/ZION/docs/MINING_STARTUP_LOG.md:32:- **Private keys**: Bezpečně šifrované a zálohované
/home/zion/ZION/docs/MINING_STARTUP_LOG.md:75:- ⚠️ **PRIVATE KEYS**: Nikdy necommitovat do gitu!
/home/zion/ZION/docs/COMMUNITY_LAUNCH_MATERIALS.md:570:   - ✅ Private key (NIKDY nesdílej!)
/home/zion/ZION/docs/COMMUNITY_LAUNCH_MATERIALS.md:917:- [ ] Private key zálohován (3 kopie!)
/home/zion/ZION/docs/SACRED_TRINITY/11_ARJUNA_BROTHER.md:168:  - Private key split into 108 pieces (sacred number - 108 Upanishads)
/home/zion/ZION/docs/SACRED_TRINITY/11_ARJUNA_BROTHER.md:192:  - Reconstructs private key
/home/zion/ZION/docs/GOLDEN_EGG_GAME/THREE_MASTER_KEYS.md:149:- Convert to blockchain address format → Part of private key!
/home/zion/ZION/docs/GOLDEN_EGG_GAME/THREE_MASTER_KEYS.md:952:# Step 4: Extract the private key
/home/zion/ZION/docs/GOLDEN_EGG_GAME/THREE_MASTER_KEYS.md:954:PRIVATE_KEY = MASTER_KEY[32:96]  # Last 64 chars = private key
/home/zion/ZION/docs/GOLDEN_EGG_GAME/THREE_MASTER_KEYS.md:1072:**A:** The private key is **mathematically impossible to crack** without solving all 108 clues + consciousness tests. Even quantum computers would need millions of years (post-quantum cryptography used).
/home/zion/ZION/docs/GOLDEN_EGG_GAME/EKAM_SACRED_ARCHITECTURE.md:517:BLOCKCHAIN PRIVATE KEY FRAGMENT:
/home/zion/ZION/docs/ESTRELLA_SOLAR_SYSTEM_COMPLETE_ANALYSIS.md:243:1. **KeyGen Moon** - Private key generation
/home/zion/ZION/docs/NEXT-STEPS.md:245:- [ ] Wallet private key encryption
/home/zion/ZION/docs/AI_SAFETY_PROTOCOLS.md:208:  ❌ Plain text storage (hesla, private keys)
/home/zion/ZION/docs/SECURITY_WHITELIST.md:20:- **Security**: Deterministic genesis address, private keys derivable from genesis config
/home/zion/ZION/docs/SECURITY_WHITELIST.md:35:- **Status**: ✅ SECURE - No private keys in plain text
/home/zion/ZION/docs/WHITEPAPER_2025/04_ECONOMIC_MODEL.md:463:2. **Lost Wallets** (forgotten private keys)
/home/zion/ZION/docs/WHITEPAPER_2025/02_TECHNICAL_ARCHITECTURE.md:569:→ Generates key_image_X (deterministic from private key)
/home/zion/ZION/docs/WHITEPAPER_2025/10_SECURITY_COMPLIANCE.md:102:    - Only receiver can decrypt (using private view key)
/home/zion/ZION/docs/WHITEPAPER_2025/10_SECURITY_COMPLIANCE.md:214:    ✓ Key management (never log private keys)
/home/zion/ZION/docs/WHITEPAPER_2025/10_SECURITY_COMPLIANCE.md:266:    Critical (private key leak, consensus break, bridge theft):
/home/zion/ZION/docs/WHITEPAPER_2025/10_SECURITY_COMPLIANCE.md:362:    - Maximum security (private keys never online)
/home/zion/ZION/docs/2.8.2/PROJECT_SUMMARY_2025.md:277:- Private key validation
/home/zion/ZION/docs/ESTRELLA_SOLAR_SYSTEM_TECHNICAL_SPEC.md:315:1. **Key_Generation** - Private/public key creation
/home/zion/ZION/docs/2.7.5/ZION_SSH_DASHBOARD_DEBUG_REPORT.md:289:1. **Never share private keys**
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:39:def _encrypt_private_key(self, private_key: str) -> str:
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:40:    """Encrypt private key"""
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:42:        return private_key  # ❌ RETURNS PLAIN TEXT IF NO KEY!
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:46:        return f.encrypt(private_key.encode()).decode()
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:48:        return private_key  # ❌ FALLBACK TO PLAIN TEXT ON ERROR!
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:52:- Private keys are returned UNENCRYPTED if `encryption_key` is not set
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:55:- All existing wallets may have plain text private keys
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:61:# wallet.private_key is now in PLAIN TEXT
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:72:def _encrypt_private_key(self, private_key: str) -> str:
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:73:    """Encrypt private key - MANDATORY"""
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:80:        return f.encrypt(private_key.encode()).decode()
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:90:### REAL-CRIT-002: Multiple Files - Private Keys in Plain Dataclass
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:103:    private_key_hex: str  # ❌ STORED AS PLAIN STRING
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:108:- Private keys stored as plain string attributes
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:109:- Accessible via `keypair.private_key_hex`
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:119:# Any code can access private key
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:121:stolen_key = keypair.private_key_hex  # ❌ Direct access
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:124:logger.debug(f"Keypair: {keypair}")  # ❌ Prints private key!
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:128:    sign_transaction(tx, keypair.private_key_hex)
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:134:- 🔴 Private keys can leak through any code path
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:142:    _private_key_encrypted: bytes  # Encrypted storage
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:146:    def decrypt_private_key(self, password: str) -> str:
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:147:        """Only way to access private key"""
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:170:    'private_key': private_key,  # ❌ PLAIN TEXT IN JSON FILE!
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:175:- Wallet files saved as JSON with plain text private keys
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:186:#   "private_key": "5fdb995947a553d7..."  ← ALL FUNDS STOLEN
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:288:- 🔴 Attacker can create transactions without private key
/home/zion/ZION/docs/2.7.5/MAINNET_READINESS_REPORT.md:240:- ❌ NO private keys exist
/home/zion/ZION/docs/2.7.5/MAINNET_READINESS_REPORT.md:539:| Private key loss | Medium | Critical | 🔴 P0 | Multi-sig, hardware wallets, backups |
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:26:### CRIT-001: Private Keys Not Encrypted at Rest
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:35:    private_key_hex: str  # ❌ Stored as plain hex string!
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:40:- Private keys jsou stored jako plain text hex strings
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:43:- Porušuje best practice: "Private keys should NEVER be in plain text"
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:48:- Pokud RAM dump → private keys odhaleny
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:49:- Pokud disk backup → private keys v backupu
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:58:    encrypted_private_key: bytes  # ✅ Encrypted with user password
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:61:    def decrypt_private_key(self, password: str) -> str:
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:62:        """Decrypt private key with user password"""
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:71:        return f.decrypt(self.encrypted_private_key).decode()
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:131:### CRIT-003: Plain Text Private Keys in wallet_endpoints.py
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:140:    'private_key': private_key,  # ❌ PLAIN TEXT!
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:145:- Private keys stored in plain JSON files
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:158:- Encrypt all private keys
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:456:- ❌ Private keys not encrypted at rest (CRIT-001)
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:461:1. Implement private key encryption
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:522:1. **CRIT-001**: Implement private key encryption ⏰ 2 days
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:546:2. Begin fixing CRIT-001 (private key encryption)
/home/zion/ZION/docs/2.7.5/DALSI_POSTUP_VYVOJE.md:256:      bytes32 private masterKeyHash = sha256(
/home/zion/ZION/docs/2.7.5/DALSI_POSTUP_VYVOJE.md:941:- [ ] Encrypted storage (wallet private keys)
/home/zion/ZION/docs/2.7.5/GRAND_PRIZE_OASIS_EVENT.md:238:├─ Final answer is a wallet private key
/home/zion/ZION/docs/2.7.5/NEXT_STEPS_ROADMAP_2025-10-10.md:276:- Private key storage
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:64:- [ ] Jsou private keys šifrovány at rest?
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:70:- [ ] Logujeme sensitive data? (private keys in logs?)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:76:private_key = random.randint(0, 2**256)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:80:private_key = secrets.token_bytes(32)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:89:logger.info(f"Private key: {private_key}")
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:509:- [ ] No private keys v logs
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:662:- [ ] Wallet private key encryption
/home/zion/ZION/docs/2.7.5/ZION_2.8_ROUND_TABLE_COMPLETE_REPORT.md:77:  - Private Key Protection
/home/zion/ZION/docs/2.7.5/WEEK1_COMPLETE_SUMMARY.md:571:- ❌ Private keys not secured
/home/zion/ZION/docs/2.7.5/PRODUCTION_DEPLOYMENT_CHECKLIST.md:270:  - Real ED25519/ECDSA private keys
/home/zion/ZION/docs/2.7.5/PRODUCTION_DEPLOYMENT_CHECKLIST.md:565:  - [ ] Private keys NEVER on servers
/home/zion/ZION/docs/2.7.5/HIRANYAGARBHA_GOLDEN_EGG.md:294:├─ Private key appears in vision
/home/zion/ZION/docs/2.7.5/PLAN_V2.8_UNIFICATION.md:172:    Generates real cryptographic wallets with private keys
/home/zion/ZION/docs/2.7.5/PLAN_V2.8_UNIFICATION.md:178:    - Encrypted private key storage
/home/zion/ZION/docs/2.7.5/PLAN_V2.8_UNIFICATION.md:327:        - private_keys (encrypted)
/home/zion/ZION/docs/2.7.5/PLAN_V2.8_UNIFICATION.md:340:- [ ] All private keys encrypted at rest
/home/zion/ZION/docs/2.7.5/PLAN_V2.8_UNIFICATION.md:438:3. **Security Risk:** Private key management for 14.34B ZION
/home/zion/ZION/docs/2.7.5/ZION_PROJECT_COMPLETE_ANALYSIS.md:611:   - Private key isolation
/home/zion/ZION/docs/2.7.5/TEST_RESULTS_2025-10-15.md:269:    "Private Key Protection",
/home/zion/ZION/docs/2.7.5/TEST_RESULTS_2025-10-15.md:1349:    private_key=sender.private_key
/home/zion/ZION/docs/2.7.5/TEST_RESULTS_2025-10-15.md:1655:❌ NO cryptographic private keys
/home/zion/ZION/docs/2.7.5/TEST_RESULTS_2025-10-15.md:1674:- [ ] Build secure private key storage (encrypted)
/home/zion/ZION/docs/2.7.5/TEST_RESULTS_2025-10-15.md:1716:- [ ] Private key generation entropy
/home/zion/ZION/docs/2.7.5/WEEK2_DAY1_SECURITY_AUDIT_REPORT.md:40:### 2. ✅ CRIT-001 FIXED: Private Key Encryption
/home/zion/ZION/docs/2.7.5/WEEK2_DAY1_SECURITY_AUDIT_REPORT.md:61:- Private keys nikdy v plain text
/home/zion/ZION/docs/2.7.5/WEEK2_DAY1_SECURITY_AUDIT_REPORT.md:107:- ✅ CRIT-001: Private key encryption
/home/zion/ZION/docs/2.7.5/WEEK2_DAY1_SECURITY_AUDIT_REPORT.md:145:  - Private keys now encrypted
/home/zion/ZION/docs/2.7.5/WEEK2_DAY1_SECURITY_AUDIT_REPORT.md:230:- [x] CRIT-001 fixed (private keys)
/home/zion/ZION/docs/2.7.4/docs/plans/NEW_BLOCKCHAIN_README.md:89:- Všechne private keys jsou uloženy v externích šifrovaných zálohách
/home/zion/ZION/docs/2.7.4/docs/plans/NEW_BLOCKCHAIN_README.md:90:- Git repository obsahuje pouze výsledné adresy (žádné private keys)
/home/zion/ZION/docs/2.7.4/docs/plans/NEW_BLOCKCHAIN_README.md:107:| `secure_premine_generator.py` | Bezpečný generátor private keys |
/home/zion/ZION/docs/2.7.4/ZION_2.7_WALLET_INTEGRATION_ANALYSIS.md:275:✅ Private Key Security:
/home/zion/ZION/docs/2.7.4/ZION_2.7_WALLET_INTEGRATION_ANALYSIS.md:293:├── Encrypted private key storage ✅
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:5:Skutečné pre-mine adresy a private keys jsou uloženy v externí zabezpečené záloze.
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:6:**NIKDY NEUKLÁDEJTE SKUTEČNÉ PRIVATE KEYS DO GIT REPOZITÁŘE!**
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:74:- [ ] Export private keys z genesis block creation
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:116:    # Derive private key
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:117:    private_key = hashlib.sha256(entropy).hexdigest()
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:121:        'private_key': private_key,
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:145:    def sign_transaction(self, tx_id, private_key):
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:194:1. **NEVER store private keys in plain text**
/home/zion/ZION/docs/2.7.1/BACKUP_COMPLETED.md:59:1. **Okamžitě vytvořit real private keys** pro všechny pre-mine adresy
/home/zion/ZION/docs/2.7.1/BACKUP_COMPLETED.md:85:1. ⚠️  **Vygenerovat real private keys** pro všechny adresy
/home/zion/ZION/docs/2.7.1/BACKUP_COMPLETED.md:93:- [ ] Generování production private keys
/home/zion/ZION/docs/2.7.1/BACKUP_COMPLETED.md:123:*Next: Real private key generation & multi-signature implementation*
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:26:- ❌ **NIKDY nezveřejnit premine adresy a private keys**
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:48:│   ├── crypto_utils.py                 # ❌ PRIVATE - Key generation
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:107:- ❌ Žádné premine adresy nebo private keys
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:186:    No private keys, no premine access, no genesis creation
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:512:# NEVER store private keys in config files
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:675:- ⚠️ NEVER expose private keys via RPC
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:713:**Důvod:** Kdyby útočník získal private keys k těmto adresám, mohl by ukrást celý premine fond.
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:1067:- ✅ Private keys v cold storage (hardware wallet)
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:1117:- [ ] Private keys in cold storage
/home/zion/ZION/docs/2.8.3/PREPARATION_CHECKLIST.md:20:- [ ] **Private Keys Security**
/home/zion/ZION/docs/2.8.3/PREPARATION_CHECKLIST.md:78:  - [ ] Remove all private key references
/home/zion/ZION/docs/2.8.3/PREPARATION_CHECKLIST.md:216:  - [ ] No private keys leaked
/home/zion/ZION/docs/2.8.3/PHASE_1_STATUS_REPORT.md:166:- [ ] No private keys in git history
/home/zion/ZION/docs/2.8.3/PHASE_1_2_COMPLETION_SUMMARY.md:101:- ✅ Git Security (No private keys in repo)
/home/zion/ZION/docs/2.8.3/PHASE_2_PREPARATION_GUIDE.md:261:# Private key
/home/zion/ZION/wallet/__init__.py:24:    """Wallet address with private/public key pair"""
/home/zion/ZION/wallet/__init__.py:27:    private_key: str  # Encrypted in production
/home/zion/ZION/wallet/__init__.py:30:    encrypted: bool = False  # Whether private key is encrypted
/home/zion/ZION/wallet/__init__.py:36:            'private_key': self.private_key,
/home/zion/ZION/wallet/__init__.py:47:            private_key=data['private_key'],
/home/zion/ZION/wallet/__init__.py:107:    def _encrypt_private_key(self, private_key: str) -> str:
/home/zion/ZION/wallet/__init__.py:108:        """Encrypt private key - MANDATORY ENCRYPTION
/home/zion/ZION/wallet/__init__.py:118:                "Cannot store private keys without encryption.\n"
/home/zion/ZION/wallet/__init__.py:124:            return f.encrypt(private_key.encode()).decode()
/home/zion/ZION/wallet/__init__.py:128:                f"CRITICAL SECURITY ERROR: Private key encryption failed!\n"
/home/zion/ZION/wallet/__init__.py:133:    def _decrypt_private_key(self, encrypted_key: str, encrypted: bool = False) -> str:
/home/zion/ZION/wallet/__init__.py:134:        """Decrypt private key - SECURE DECRYPTION ONLY
/home/zion/ZION/wallet/__init__.py:159:                f"SECURITY ERROR: Private key decryption failed!\n"
/home/zion/ZION/wallet/__init__.py:176:            # Try to decrypt first encrypted private key
/home/zion/ZION/wallet/__init__.py:180:                f.decrypt(encrypted_addresses[0].private_key.encode())
/home/zion/ZION/wallet/__init__.py:195:        private_key_plain = hashlib.sha256(random_bytes + b"private").hexdigest()
/home/zion/ZION/wallet/__init__.py:197:        # Encrypt private key if encryption is enabled
/home/zion/ZION/wallet/__init__.py:198:        private_key = self._encrypt_private_key(private_key_plain)
/home/zion/ZION/wallet/__init__.py:204:            private_key=private_key,
/home/zion/ZION/wallet/__init__.py:215:            print("🔐 Private key encrypted")
/home/zion/ZION/wallet/__init__.py:267:                # Decrypt private keys if we have the password
/home/zion/ZION/wallet/__init__.py:269:                    addr.private_key = self._decrypt_private_key(addr.private_key, addr.encrypted)
/home/zion/ZION/wallet/__init__.py:281:        """Export private keys (requires password confirmation)"""
/home/zion/ZION/wallet/__init__.py:298:                # Decrypt private key for export
/home/zion/ZION/wallet/__init__.py:299:                decrypted_key = self._decrypt_private_key(addr.private_key, addr.encrypted)
/home/zion/ZION/wallet/__init__.py:302:                    'private_key': decrypted_key,
/home/zion/ZION/wallet/__init__.py:309:            print(f"🔑 Private keys exported to: {export_file}")
/home/zion/ZION/wallet/__init__.py:317:        """Import private keys from export file"""
/home/zion/ZION/wallet/__init__.py:333:                    public_key="",  # Will be derived from private key in production
/home/zion/ZION/wallet/__init__.py:334:                    private_key=self._encrypt_private_key(addr_data['private_key']),
/home/zion/ZION/wallet/__init__.py:389:        # Find private key
/home/zion/ZION/wallet/__init__.py:393:                return hashlib.sha256(f"{addr.private_key}{message}".encode()).hexdigest()
/home/zion/ZION/api/wallet_endpoints.py:51:    Uses ZionWallet class with mandatory encryption for all private keys.
/home/zion/ZION/api/wallet_endpoints.py:53:    - All private keys encrypted with user password
/home/zion/ZION/api/wallet_endpoints.py:70:        - All private keys are encrypted with password
/home/zion/ZION/api/wallet_endpoints.py:175:        Unlock wallet for use (decrypt private keys)
/home/zion/ZION/api/wallet_endpoints.py:177:        SECURITY: Password required to decrypt private keys.
/home/zion/ZION/api/wallet_endpoints.py:232:            # Get addresses (without private keys for security)
/home/zion/ZION/api/__init__.py:528:    """Export private keys (requires password)"""
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_rpc_server.py:613:            'private_key': kp.private_key_hex  # NOTE: For real deployment do NOT expose like this
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:5:SECURITY NOTE: KeyPair uses memory-safe private key handling.
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:26:    - Private key stored separately (not in dataclass fields)
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:30:    _private_key_hex: str = field(repr=False, default="")
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:33:        """Prevent accidental private key exposure in logs/debugging"""
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:37:        """User-friendly representation without private key"""
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:41:    def private_key_hex(self) -> str:
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:43:        Access private key (use with caution!)
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:48:        if not self._private_key_hex:
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:49:            raise ValueError("SECURITY ERROR: Private key not available or has been cleared!")
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:50:        return self._private_key_hex
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:52:    def clear_private_key(self):
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:53:        """Clear private key from memory (for hot/cold wallet separation)"""
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:54:        self._private_key_hex = ""
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:69:        _private_key_hex=sk.to_string().hex()
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:73:def sign_message(private_key_hex: str, message: bytes) -> str:
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:74:    sk = SigningKey.from_string(bytes.fromhex(private_key_hex), curve=SECP256k1)
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:109:def sign_transaction(tx: dict, private_key_hex: str) -> dict:
/home/zion/ZION/backups/ssh_backup_20251021_215309/crypto_utils.py:111:    sig = sign_message(private_key_hex, h.encode())
/home/zion/ZION/src/integrations/zion_round_table_council.py:480:                    "Private Key Protection",
/home/zion/ZION/src/core/zion_rpc_server.py:794:            'private_key': kp.private_key_hex  # NOTE: For real deployment do NOT expose like this
/home/zion/ZION/src/core/zion_warp_engine_core.py:505:                 bridge_private_key: Optional[str] = None):
/home/zion/ZION/src/core/zion_warp_engine_core.py:550:        if enable_bridge and bridge_private_key and BRIDGE_AVAILABLE:
/home/zion/ZION/src/core/zion_warp_engine_core.py:553:                bridge_private_key=bridge_private_key,
/home/zion/ZION/src/core/zion_warp_engine_core.py:915:                          private_key: str, fee: float = 0.0) -> Optional[str]:
/home/zion/ZION/src/core/zion_warp_engine_core.py:917:        return self.blockchain.create_transaction(sender, receiver, amount, private_key, fee)
/home/zion/ZION/src/core/zion_warp_engine_core.py:938:        logger.warning("⚠️  Bridge mode enabled - requires bridge private key")
/home/zion/ZION/src/core/zion_warp_engine_core.py:946:        bridge_private_key=bridge_key
/home/zion/ZION/src/core/crypto_utils.py:5:SECURITY NOTE: KeyPair uses memory-safe private key handling.
/home/zion/ZION/src/core/crypto_utils.py:26:    - Private key stored separately (not in dataclass fields)
/home/zion/ZION/src/core/crypto_utils.py:30:    _private_key_hex: str = field(repr=False, default="")
/home/zion/ZION/src/core/crypto_utils.py:33:        """Prevent accidental private key exposure in logs/debugging"""
/home/zion/ZION/src/core/crypto_utils.py:37:        """User-friendly representation without private key"""
/home/zion/ZION/src/core/crypto_utils.py:41:    def private_key_hex(self) -> str:
/home/zion/ZION/src/core/crypto_utils.py:43:        Access private key (use with caution!)
/home/zion/ZION/src/core/crypto_utils.py:48:        if not self._private_key_hex:
/home/zion/ZION/src/core/crypto_utils.py:49:            raise ValueError("SECURITY ERROR: Private key not available or has been cleared!")
/home/zion/ZION/src/core/crypto_utils.py:50:        return self._private_key_hex
/home/zion/ZION/src/core/crypto_utils.py:52:    def clear_private_key(self):
/home/zion/ZION/src/core/crypto_utils.py:53:        """Clear private key from memory (for hot/cold wallet separation)"""
/home/zion/ZION/src/core/crypto_utils.py:54:        self._private_key_hex = ""
/home/zion/ZION/src/core/crypto_utils.py:69:        _private_key_hex=sk.to_string().hex()
/home/zion/ZION/src/core/crypto_utils.py:73:def sign_message(private_key_hex: str, message: bytes) -> str:
/home/zion/ZION/src/core/crypto_utils.py:74:    sk = SigningKey.from_string(bytes.fromhex(private_key_hex), curve=SECP256k1)
/home/zion/ZION/src/core/crypto_utils.py:109:def sign_transaction(tx: dict, private_key_hex: str) -> dict:
/home/zion/ZION/src/core/crypto_utils.py:111:    sig = sign_message(private_key_hex, h.encode())
/home/zion/ZION/test_wallets/test1.zwallet:4:  "encrypted_private_key": "gAAAAABo7YKizuk8LdNGjQ-3rS_nCG_kEI1O4KpC-9YChru5MJ7VWpsJzlmNHlkpFPJq0hYTi0Y9J6rzEeHzPe4KoaZ0oy3U2eCDMaO0rYR2oXW7dPOfqP4X7D1ghkokpKld0rln-JrFZ5q2Q_oI-VkP_3BJnQcwThsNzKw_2YcqzdGcjOd_kFo=",
/home/zion/ZION/test_wallets/test3.zwallet:4:  "encrypted_private_key": "gAAAAABo7YKjxNwU7RV53c_VuVWXOHf-Ude4C06UqYN_Hr-8PBBZ2hX3fEbTkT62Z5U3NDVNoyzLcrWaIf9imP4P5Fak8vrk6EO_hwldb-DZhLLrkD257EKNloQhYDv_Fdb1TbW65uTmXMlEu60L5qkpPcDUg_eiCwSFSOwvPLhLD3dRj91XmmU=",
/home/zion/ZION/test_wallets/test2.zwallet:4:  "encrypted_private_key": "gAAAAABo7YKj4onzEJVIFsu4Ua0BAy4pmWcm9T8vWO0oDFTA8AyDXlK65C4kkXFoR-CkBI3CXFeoqxC8FVlzrLk7DcZM8AN3ctkhe-EZidFk2IYDY8jrDfl_BHHi796kqFwxmzYtHiK3OCC65KINgUNknOHiEcN9hteJTf8QSC3_2bZyFYlHOVg=",
/home/zion/ZION/test_wallets/test_crit001.json:7:      "private_key": "gAAAAABo7YcPocVfAqm5UC6VwGBUXiTBddjUOiMoG2p-uHFZ8EoNKbmYm-HXz9j0n2L-xZXJetuqegbQAEuerbH_K6axqZAm6F6U9DTexZPCYoJL5bSfX4N-ZAesSS_kTiAcWkf8h3veaX-dnRsZyb4TDLUjpbJ6i1kjgdmDH26i6cuqb4YRaOA=",
/home/zion/ZION/.gitignore:1:# BEZPEČNOSTNÍ ZÁKAZ - PRIVATE KEYS A ZÁLOHY
/home/zion/ZION/.gitignore:4:# Všechny private keys a mnemonic zálohy
/home/zion/ZION/.gitignore:5:*private_key*
/home/zion/ZION/.gitignore:15:# Wallet soubory s private keys
/home/zion/ZION/config/ssh_config.json:7:  "key_content": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAgEAu395fuIKFgIu1pmZ15dHqMHH7dvr2uZSgFChm0Aeimw4e/ptV868\nK4/syiX5RS9GZ9gcZdcsdnPXzHLD90oyE0nMqolGsQEUzJwy57odzsbw24Oh/bk2+7Q7DG\nDH/OFWWEn0P89MGKMAdn1cs/a8gGjjVnJbSxj+R22PrrNvhlqfd5YD0zqIrdXy7TnfqZ1p\nzwUtUH5Ex6bN5nggBteZB60s5XJ31cJm/VB3pK2Irvx9nbTU7/G0yXXWAUKH72XqgGbUG0\nZ1tgbSWUE8bOPxX3UcqRWvRAYS/FNCgLa19B0Oz7fuTPln+3X/0/KRdh8/OczP9GDwlHL+\nzdeKODEmShx6eGswjK0ZE5F9h280b6nNGJioxZrVdtjRlK4xanpC1r6oMRwseQONP7XFUh\nrie7x7DfSnLxPDE2EbUfDRG22duMbfkaEHH6XYdFpMwXtC0C++r5kRxCoo/mz1iCh6JUnZ\ncvkGYX2UZhMsLwwBjkfSHXDuR4AphxNAZsKnGV3aCKzuhEo0Lb+tEp92AKMbnn9bJB0uOr\ne0WdAz2DMd+49cmFTdkAIhUx0ItJRRzXOFDtY0fMQNoOd3WQRo/M4iWe8jQ7j8aYz7r6Be\nmgMj2LDglm7XNWa5Szf+E9CSaoM3bKfSStQMCdbc4peOSlnd5VPG6xzZ8UXGa07ZeDEENr\nEAAAdQqhCXRaoQl0UAAAAHc3NoLXJzYQAAAgEAu395fuIKFgIu1pmZ15dHqMHH7dvr2uZS\ngFChm0Aeimw4e/ptV868K4/syiX5RS9GZ9gcZdcsdnPXzHLD90oyE0nMqolGsQEUzJwy57\nodzsbw24Oh/bk2+7Q7DGDH/OFWWEn0P89MGKMAdn1cs/a8gGjjVnJbSxj+R22PrrNvhlqf\nd5YD0zqIrdXy7TnfqZ1pzwUtUH5Ex6bN5nggBteZB60s5XJ31cJm/VB3pK2Irvx9nbTU7/\nG0yXXWAUKH72XqgGbUG0Z1tgbSWUE8bOPxX3UcqRWvRAYS/FNCgLa19B0Oz7fuTPln+3X/\n0/KRdh8/OczP9GDwlHL+zdeKODEmShx6eGswjK0ZE5F9h280b6nNGJioxZrVdtjRlK4xan\npC1r6oMRwseQONP7XFUhrie7x7DfSnLxPDE2EbUfDRG22duMbfkaEHH6XYdFpMwXtC0C++\nr5kRxCoo/mz1iCh6JUnZcvkGYX2UZhMsLwwBjkfSHXDuR4AphxNAZsKnGV3aCKzuhEo0Lb\n+tEp92AKMbnn9bJB0uOre0WdAz2DMd+49cmFTdkAIhUx0ItJRRzXOFDtY0fMQNoOd3WQRo\n/M4iWe8jQ7j8aYz7r6BemgMj2LDglm7XNWa5Szf+E9CSaoM3bKfSStQMCdbc4peOSlnd5V\nPG6xzZ8UXGa07ZeDEENrEAAAADAQABAAACAAEpWwFUOSfFv7CIpxFU2JbNDIYGtMFYZ+5v\nkXC6xvWokfkCpibDGxtR+u+NqKurDU6bYiGnYZkiQpX7qAciKIlCDciIrS1vikdyOEaDOq\ngLR3a0rA48VYDdrvf2qYaBht1pJ+A1Uo1chSY2xJpAzw4kmDPy5Wnjr7+ViCxW5Dv6174P\n6donJK2fA7BAiYgtd3hW2d8DyT1LZT8mQ1yHfWU0x3Bscx2Z5LVxCCy2/n/HBKgzdJY/8x\nTEbBz54omzIe7FtE6u8w+7nxX6d3tdNiOXQCQ0BC/xsbBqe6D8gMgQXgUfaJSFfwVpx7ny\naMBIlUWwZSFocFUbGUUBLtQGSexs5MnNjEZg86Mun1zubQuQWYfEiNsItnd0kOwCqB+dN9\nTL/9grO7cSv2ncMWYssprFfPhmS8NfF0+caR3U7XdJMFBLyzBfNYNkwH/WRhpu17J4tBI6\ntYzZyGopYqOGV5xTNz2j0d/IX+yJoJckXGX0j/0fjJAYi0Pezdfvst7IW0KcNrCDfK29er\nCfQHHd54211kmQSJhs7Ms2RHhzwIhTHNtO8/mjdYQ0TtmTAeM9eNRgj4MsvgPy/qUxtY/3\nTPYl8u7Y0RlXRgvGpbNdhOTZQ72qkeNl8ysrJLemim8Mactj5+CdlBvf6UHYqHBAXNX/CD\nuCasH2FL70J5HXGauhAAABADdGl8evIEpz+NbKi45UNRkr8Ex/U1Q6J6ocnFT6vXycvCuU\n0IOOgIVzKYh6sWeyQhWhmAMZzpofimd+uLzXeUvpPor+eRFdxQ/HLdSME4TZgTleN+0By7\nP5/Uy0K674e5dlinu7pjY6jM8z3EZhhjYgKa1tZKFZnmasEOuaHPgzCv0HyPcN6SH75S5c\nJ2AYJP87H0HEmWqyw1BE+V8A+79K6kDhIugx/dyVwecQvcLoEtfKIHYZuFwKr9Le42o8Hr\nRUzZ7F9d3quqRA8PuwuMhrAA4F5P82TzakDPYDmxkyVJIKPxAJgJxPs70PuSdf0A/1JfqF\n+Bi6I4LyQwG2wwsAAAEBAOdbvH/zV/BiwvPE1s/EpIZSPBMpbrheihYqk78bHCQkyo5ZTW\nti3c5sQShDLO9+elcCIV2Bbcne/pOxrscT8GIX0F4peatiTd2liW6oP+9rT+LekbdlSI6D\nxNcfn+dQx9aJ3B55UnDp6fg1yG226GEhuApjfuAxYJRj4Ok/BacTMbiec0xdf+FTrY9+EM\niPSPYc09Moz37vQwNdvAC4hgg7ABTj95VGZa3GbRS5kVSowwq1itTs8TLHcjeLVaKQQ+OT\nJZC9H89sIRRaHPyoatCcISBD+a/JAWDGVk5UCr4GjnrpIcp1KuH+Bsw3THHWi1GK3dnpGU\ni7YUGWJVPiwC0AAAEBAM931O22UPf5EWXj2RxMfVU7u7E+CPg3w8EnRUxSqs+H+B4/pnqi\nUcXYurPO1uvYXCLMOfqro769zlt01ZQc4DpviH+8S2m8Zmw1EYbLJ2m14mmJxl/r0IVoul\neJqxqc9sgTx14Clxbwh7zuWWha170byVFNNub+Mc06oySQIM/4rGjGJlGUVDtl8RRXEvGc\n+JmjlAcVXab5991uP13p0xJd3HfqFuPuDlVfW8QIULOf2/Fl4+bPin9YxIcHeToeafa0L/\nhcMYuBBemq8Yl4rNSLwMaosRjyGvvccQzo4SC37X9XzpUc4/z8BDPUhtv+TDhRJhLZ59qM\nR0bxW0TZHxUAAAAYemlvbi1kZXBsb3ltZW50LTIwMjUxMDA3AQID\n-----END OPENSSH PRIVATE KEY-----"
/home/zion/ZION/config/phase2_config.env:72:CERT_PRIVATE_KEY="$CERT_PATH/privkey.pem"
/home/zion/ZION/config/example.yml:17:  private_keys: "external_backup_only"
/home/zion/ZION/.web-temp/round_table_dashboard.html:510:                        "Private Key Protection",
/home/zion/ZION/scripts/phase1_security_backup.sh:83:    "private_keys.txt"
/home/zion/ZION/scripts/phase1_security_backup.sh:121:    "private_key"
/home/zion/ZION/scripts/phase1_security_backup.sh:221:[ ] Private keys NOT in public repo
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:27:    "private.*key"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:32:    "BEGIN.*PRIVATE.*KEY"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:221:- ✅ Scanned for private keys, secrets, API keys
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:261:- `*.key`, `*.pem` - Private keys
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:270:✅ No private keys in codebase  
/home/zion/ZION/scripts/setup_multisig_wallet.py:221:[ ] Private keys encrypted with AES-256
/home/zion/ZION/scripts/launch_zion_ecosystem.py:79:                    '--private-key', 'bridge_key_2675_production',
/home/zion/ZION/frontend/app/round-table/page.tsx:81:          'Private Key Protection',
/home/zion/ZION/frontend/app/wallet/page.tsx:60:  privateKey: string;
/home/zion/ZION/frontend/app/wallet/page.tsx:149:      const privateKey = Array.from(crypto.getRandomValues(new Uint8Array(32)))
/home/zion/ZION/frontend/app/wallet/page.tsx:152:      const publicKey = 'zion_pub_' + privateKey.slice(0, 40);
/home/zion/ZION/frontend/app/wallet/page.tsx:153:      const address = 'zion1' + privateKey.slice(0, 38);
/home/zion/ZION/frontend/app/wallet/page.tsx:157:        privateKey,
/home/zion/ZION/frontend/app/wallet/page.tsx:182:          privateKey: 'imported_' + Date.now(),
/home/zion/ZION/frontend/app/wallet/page.tsx:189:      // Import z private key
/home/zion/ZION/frontend/app/wallet/page.tsx:192:          privateKey: importData,
/home/zion/ZION/frontend/app/wallet/page.tsx:701:          const seedPhrase = prompt('Enter seed phrase or private keys:');
/home/zion/ZION/frontend/app/wallet/page.tsx:727:            alert(`🔑 Private Keys:\n\nSpend Key: ${keys.spendKey}\nView Key: ${keys.viewKey}\n\n⚠️ NEVER SHARE THESE KEYS!`);
/home/zion/ZION/frontend/app/wallet/page.tsx:738:          alert(`🎉 NEW WALLET GENERATED!\n\nAddress: ${result.address}\n\n⚠️ BACKUP YOUR PRIVATE KEYS IMMEDIATELY!`);
/home/zion/ZION/frontend/app/wallet/page.tsx:1342:                  {wallet.action === 'view-keys' && 'Show private keys'}
/home/zion/ZION/frontend/app/wallet/page.tsx:1352:        <h2 className="text-xl font-semibold text-center mb-4 text-red-300">🔐 Private Keys Backup</h2>
/home/zion/ZION/frontend/app/wallet/page.tsx:1526:                  const importData = prompt('Enter private key or mnemonic:');
/home/zion/ZION/frontend/app/api/round-table/route.ts:16:      'Private Key Protection',
/home/zion/ZION/frontend/app/api/wallet/view-keys/route.ts:17:    // Mock private keys (NEVER expose real keys like this!)
/home/zion/ZION/zion/ai/quantum_ai.py:995:                private_key = secrets.token_bytes(algo_config['key_size']['private'])
/home/zion/ZION/zion/ai/quantum_ai.py:996:                keypair = {'public_key': public_key, 'private_key': private_key}
/home/zion/ZION/zion/ai/quantum_ai.py:1006:                'private_key': base64.b64encode(keypair['private_key']).decode(),
/home/zion/ZION/zion/ai/quantum_ai.py:1022:            private_key = bytes([random.randint(0, 2) for _ in range(n * 2)])
/home/zion/ZION/zion/ai/quantum_ai.py:1029:                'private_key': private_key
/home/zion/ZION/zion/ai/quantum_ai.py:1036:                'private_key': secrets.token_bytes(1632)
/home/zion/ZION/zion/ai/quantum_ai.py:1043:            private_key_size = 2528  # Dilithium private key size
/home/zion/ZION/zion/ai/quantum_ai.py:1046:            private_key = secrets.token_bytes(private_key_size)
/home/zion/ZION/zion/ai/quantum_ai.py:1051:                'private_key': private_key
/home/zion/ZION/zion/ai/quantum_ai.py:1058:                'private_key': secrets.token_bytes(2528)
/home/zion/ZION/zion/ai/quantum_ai.py:1067:                private_key_size = 1281
/home/zion/ZION/zion/ai/quantum_ai.py:1070:                private_key_size = 2305
/home/zion/ZION/zion/ai/quantum_ai.py:1073:            private_key = secrets.token_bytes(private_key_size)
/home/zion/ZION/zion/ai/quantum_ai.py:1078:                'private_key': private_key
/home/zion/ZION/zion/ai/quantum_ai.py:1085:                'private_key': secrets.token_bytes(1281)
/home/zion/ZION/zion/wallet/wallet_core.py:26:    private_key: Optional[str] = None
/home/zion/ZION/zion/wallet/wallet_core.py:56:    def generate_keypair() -> Tuple[ed25519.Ed25519PrivateKey, ed25519.Ed25519PublicKey]:
/home/zion/ZION/zion/wallet/wallet_core.py:58:        private_key = ed25519.Ed25519PrivateKey.generate()
/home/zion/ZION/zion/wallet/wallet_core.py:59:        public_key = private_key.public_key()
/home/zion/ZION/zion/wallet/wallet_core.py:60:        return private_key, public_key
/home/zion/ZION/zion/wallet/wallet_core.py:76:    def sign_transaction(private_key: ed25519.Ed25519PrivateKey, message: bytes) -> bytes:
/home/zion/ZION/zion/wallet/wallet_core.py:78:        return private_key.sign(message)
/home/zion/ZION/zion/wallet/wallet_core.py:166:            private_key, public_key = ZionCrypto.generate_keypair()
/home/zion/ZION/zion/wallet/wallet_core.py:183:                'encrypted_private_key': None,
/home/zion/ZION/zion/wallet/wallet_core.py:186:            # Serialize private key
/home/zion/ZION/zion/wallet/wallet_core.py:187:            private_key_bytes = private_key.private_bytes(
/home/zion/ZION/zion/wallet/wallet_core.py:195:            encrypted_key, _ = ZionCrypto.encrypt_data(private_key_bytes, password, salt)
/home/zion/ZION/zion/wallet/wallet_core.py:198:            wallet_data['encrypted_private_key'] = base64.b64encode(encrypted_key).decode('ascii')
/home/zion/ZION/zion/wallet/wallet_core.py:259:            # Decrypt private key to verify password
/home/zion/ZION/zion/wallet/wallet_core.py:261:                encrypted_key = base64.b64decode(wallet_data['encrypted_private_key'])
/home/zion/ZION/zion/wallet/wallet_core.py:262:                private_key_bytes = ZionCrypto.decrypt_data(encrypted_key, password)
/home/zion/ZION/zion/wallet/wallet_core.py:264:                # Reconstruct private key
/home/zion/ZION/zion/wallet/wallet_core.py:265:                private_key = ed25519.Ed25519PrivateKey.from_private_bytes(private_key_bytes)
/home/zion/ZION/zion/wallet/wallet_core.py:266:                public_key = private_key.public_key()
/home/zion/ZION/zion/wallet/wallet_core.py:283:                    private_key=base64.b64encode(private_key_bytes).decode('ascii')
/home/zion/ZION/zion/wallet/wallet_core.py:313:            self.address.private_key = None
/home/zion/ZION/zion/wallet/wallet_core.py:365:            private_key_bytes = base64.b64decode(self.address.private_key)
/home/zion/ZION/zion/wallet/wallet_core.py:366:            private_key = ed25519.Ed25519PrivateKey.from_private_bytes(private_key_bytes)
/home/zion/ZION/zion/wallet/wallet_core.py:367:            signature = ZionCrypto.sign_transaction(private_key, tx_json)
/home/zion/ZION/zion/wallet/wallet_core.py:423:            private_key_bytes = hashlib.pbkdf2_hmac('sha256', entropy, b'zion_seed', 4096, 32)
/home/zion/ZION/zion/wallet/wallet_core.py:424:            private_key = ed25519.Ed25519PrivateKey.from_private_bytes(private_key_bytes)
/home/zion/ZION/zion/wallet/wallet_core.py:425:            public_key = private_key.public_key()
/home/zion/ZION/zion/wallet/wallet_core.py:439:                'encrypted_private_key': None,
/home/zion/ZION/zion/wallet/wallet_core.py:444:            encrypted_key, _ = ZionCrypto.encrypt_data(private_key_bytes, password, salt)
/home/zion/ZION/zion/wallet/wallet_core.py:447:            wallet_data['encrypted_private_key'] = base64.b64encode(encrypted_key).decode('ascii')
/home/zion/ZION/zion/bridge/rainbow_bridge.py:77:    private_key: Optional[str] = None
/home/zion/ZION/zion/bridge/rainbow_bridge.py:84:                 bridge_private_key: str,
/home/zion/ZION/zion/bridge/rainbow_bridge.py:90:        self.bridge_private_key = bridge_private_key
/home/zion/ZION/zion/bridge/rainbow_bridge.py:637:        return hashlib.sha256(f"bridge_{time.time()}_{self.bridge_private_key[:8]}".encode()).hexdigest()
/home/zion/ZION/zion/bridge/rainbow_bridge.py:687:    parser.add_argument('--private-key', required=True, help='Bridge private key')
/home/zion/ZION/zion/bridge/rainbow_bridge.py:700:        bridge_private_key=args.private_key,
/home/zion/ZION/zion/mining/README-Enhanced.md:131:- **Nikdy nesdílej** private keys
/home/zion/ZION/tests/test_full_compatibility.py:19:    import secrets
/home/zion/ZION/tests/test_full_compatibility.py:20:    random_bytes = secrets.token_bytes(32)
/home/zion/ZION/tests/test_full_compatibility.py:35:    seed_entropy = secrets.token_bytes(32)
/home/zion/ZION/tests/test_duplicate_share.py:11:import socket, json, time, os, sys, secrets
/home/zion/ZION/tests/test_duplicate_share.py:49:    nonce = secrets.token_hex(4)  # 8 znaků
/home/zion/ZION/tests/test_duplicate_share.py:50:    result = secrets.token_hex(16)  # 32 znaků
/home/zion/ZION/tests/unit/test_mining_quick.py:7:import secrets
/home/zion/ZION/tests/unit/test_mining_quick.py:11:    seed = secrets.token_hex(32)
/home/zion/ZION/k8s/deploy.sh:47:# Deploy ConfigMaps and Secrets
/home/zion/ZION/k8s/deploy.sh:50:kubectl apply -f k8s/secret.yaml
/home/zion/ZION/k8s/pool-deployment.yaml:30:            secretKeyRef:
/home/zion/ZION/k8s/pool-deployment.yaml:31:              name: zion-secrets
/home/zion/ZION/k8s/pool-deployment.yaml:35:            secretKeyRef:
/home/zion/ZION/k8s/pool-deployment.yaml:36:              name: zion-secrets
/home/zion/ZION/k8s/dashboard-deployment.yaml:30:            secretKeyRef:
/home/zion/ZION/k8s/dashboard-deployment.yaml:31:              name: zion-secrets
/home/zion/ZION/k8s/dashboard-deployment.yaml:35:            secretKeyRef:
/home/zion/ZION/k8s/dashboard-deployment.yaml:36:              name: zion-secrets
/home/zion/ZION/k8s/secret.yaml:2:kind: Secret
/home/zion/ZION/k8s/secret.yaml:4:  name: zion-secrets
/home/zion/ZION/k8s/secret.yaml:10:  # Base64 encoded secrets
/home/zion/ZION/k8s/secret.yaml:13:  JWT_SECRET: "c3VwZXJzZWNyZXRrZXk="   # supersecretkey
/home/zion/ZION/k8s/README.md:66:### Secrets
/home/zion/ZION/k8s/README.md:68:Sensitive data is stored in `secret.yaml`:
/home/zion/ZION/k8s/README.md:72:- JWT secrets
/home/zion/ZION/k8s/README.md:166:- Secrets are base64 encoded (consider using external secret management)
/home/zion/ZION/k8s/zion-deployment.yaml:32:            secretKeyRef:
/home/zion/ZION/k8s/zion-deployment.yaml:33:              name: zion-secrets
/home/zion/ZION/k8s/zion-deployment.yaml:37:            secretKeyRef:
/home/zion/ZION/k8s/zion-deployment.yaml:38:              name: zion-secrets
/home/zion/ZION/k8s/postgres-deployment.yaml:36:            secretKeyRef:
/home/zion/ZION/k8s/postgres-deployment.yaml:37:              name: zion-secrets
/home/zion/ZION/k8s/ingress.yaml:17:    secretName: zion-tls
/home/zion/ZION/k8s/redis-deployment.yaml:26:            secretKeyRef:
/home/zion/ZION/k8s/redis-deployment.yaml:27:              name: zion-secrets
/home/zion/ZION/k8s/websocket-deployment.yaml:32:            secretKeyRef:
/home/zion/ZION/k8s/websocket-deployment.yaml:33:              name: zion-secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:49:also agree on a shared secret key based on exchanged public keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:57:This library provides key generation, signing, verifying, and shared secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:116:to derive a shared secret (`ecdh`), and
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:122:per second (`verify/s`), how many shared secrets can be derived per second
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:424:consistent signing keys from some other secret, for example when you want
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:425:three separate keys and only want to store a single master secret. You should
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:429:into `SigningKey.from_secret_exponent()`, like this:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:438:  return SigningKey.from_secret_exponent(secexp, curve=NIST384p)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:531:`from_secret_exponent`/`from_string`/`from_der`/`from_pem`,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:627:    return SigningKey.from_secret_exponent(secexp, curve)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:670:secret = ecdh.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/encoders.py:26:from pydantic.types import SecretBytes, SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/encoders.py:83:    SecretBytes: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/encoders.py:84:    may_v1.SecretBytes: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/encoders.py:85:    SecretStr: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/encoders.py:86:    may_v1.SecretStr: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:50:        if form_data.client_secret:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:51:            data["client_secret"] = form_data.client_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:128:                `client_secret` (if any) using HTTP Basic auth.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:132:        client_secret: Annotated[
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:139:                sending the `client_id` and `client_secret` (if any) using HTTP Basic
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:150:        self.client_secret = client_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:192:        if form_data.client_secret:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:193:            data["client_secret"] = form_data.client_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:211:    client_id: optional string. OAuth2 recommends sending the client_id and client_secret (if any)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:212:        using HTTP Basic auth, as: client_id:client_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:213:    client_secret: optional string. OAuth2 recommends sending the client_id and client_secret (if any)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:214:        using HTTP Basic auth, as: client_id:client_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:282:                `client_secret` (if any) using HTTP Basic auth.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:286:        client_secret: Annotated[
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:293:                sending the `client_id` and `client_secret` (if any) using HTTP Basic
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:305:            client_secret=client_secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/may_v1.py:44:    class SecretBytes:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/may_v1.py:47:    class SecretStr:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/may_v1.py:88:    from .v1 import SecretBytes as SecretBytes
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/may_v1.py:89:    from .v1 import SecretStr as SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/v1.py:67:    from pydantic.types import SecretBytes as SecretBytes
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/v1.py:68:    from pydantic.types import SecretStr as SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/v1.py:117:        SecretBytes as SecretBytes,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/_compat/v1.py:120:        SecretStr as SecretStr,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:34:        ("set_secret_data_policy", "METH_NOARGS", """
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:35:             PyObject *secret_data =
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:36:                 PyCapsule_New(&secret_data_handler, "mem_handler", NULL);
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:37:             if (secret_data == NULL) {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:40:             PyObject *old = PyDataMem_SetHandler(secret_data);
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:41:             Py_DECREF(secret_data);
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:46:                 PyCapsule_New(&secret_data_handler, "not_mem_handler", NULL);
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:113:         * of the `secret_data_allocator`. It is provided here for
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:121:        } SecretDataAllocatorFuncs;
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:125:            SecretDataAllocatorFuncs *funcs = (SecretDataAllocatorFuncs *)ctx;
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:135:            SecretDataAllocatorFuncs *funcs = (SecretDataAllocatorFuncs *)ctx;
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:146:            SecretDataAllocatorFuncs *funcs = (SecretDataAllocatorFuncs *)ctx;
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:173:            SecretDataAllocatorFuncs *funcs = (SecretDataAllocatorFuncs *)ctx;
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:193:        static SecretDataAllocatorFuncs secret_data_handler_ctx = {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:199:        static PyDataMem_Handler secret_data_handler = {
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:200:            "secret_data_allocator",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:203:                &secret_data_handler_ctx, /* ctx */
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:246:    orig_policy = get_module.set_secret_data_policy()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:251:    assert get_handler_name(b.base) == 'secret_data_allocator'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:308:        get_module.set_secret_data_policy()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:309:        assert get_handler_name() == 'secret_data_allocator'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:322:        get_module.set_secret_data_policy()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:323:        assert get_handler_name() == 'secret_data_allocator'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:353:    get_module.set_secret_data_policy()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:354:    assert np._core.multiarray.get_handler_name() == 'secret_data_allocator'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:363:    get_module.set_secret_data_policy()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:389:    orig_policy = get_module.set_secret_data_policy()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/_core/tests/test_mem_policy.py:392:    assert np._core.multiarray.get_handler_name(b) == 'secret_data_allocator'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:28:    """Convert a dictionary containing (textual DNS name, base64 secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:30:    a dictionary containing (textual DNS name, (algorithm, base64 secret))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:38:            keyring[kname] = dns.tsig.Key(kname, value).secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:40:            (algorithm, secret) = value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:41:            keyring[kname] = dns.tsig.Key(kname, secret, algorithm)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:48:    base64 secret)) pairs, or a dictionary containing (dns.name.Name, bytes)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:49:    pairs into a text keyring which has (textual DNS name, base64 secret) pairs.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:54:    def b64encode(secret):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:55:        return base64.encodebytes(secret).decode().rstrip()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:62:            if isinstance(key.secret, bytes):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:63:                text_secret = b64encode(key.secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:65:                text_secret = str(key.secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsigkeyring.py:67:            textring[tname] = (key.algorithm.to_text(), text_secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:77:        r.add_tsig(keyname, secret, 300, 1, 0, '', request_mac)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:242:        secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:254:        if isinstance(secret, dns.tsig.Key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:255:            key = secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:257:            key = dns.tsig.Key(keyname, secret, algorithm)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:268:        secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:286:        if isinstance(secret, dns.tsig.Key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:287:            key = secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/renderer.py:289:            key = dns.tsig.Key(keyname, secret, algorithm)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/message.py:697:        ``dns.name.Name`` to ``dns.tsig.Key`` or a TSIG secret, a ``bytes``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:154:                gssapi_context = key.secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:324:        return GSSTSig(key.secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:326:        return HMACTSig(key.secret, key.algorithm)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:333:        secret: bytes | str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:339:        if isinstance(secret, str):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:340:            secret = base64.decodebytes(secret.encode())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:341:        self.secret = secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:350:            and self.secret == other.secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:357:            r += f", secret='{base64.b64encode(self.secret).decode()}'"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ElGamal.py:68:        # in "Generating ElGamal signatures without knowning the secret key",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/DSA.py:236:            algorithm to use for deriving the secret and encrypting
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:189:        # Step 1: Generate random secret blinding factor r,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:144:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:147:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:153:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:159:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:162:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:190:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:193:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:236:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:242:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:248:                                              passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:250:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:256:                                              passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:259:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:274:                                              passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:282:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:293:                                               passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:297:                                               passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:304:                                               passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:308:                                               passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:321:                          passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve25519.py:339:                          passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:621:        key = RSA.import_key(key_file, b'secret')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:117:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:120:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:126:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:132:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:135:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:163:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:166:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:209:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:215:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:221:                                              passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:223:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:229:                                              passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:232:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:247:                                              passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:255:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:266:                                               passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:270:                                               passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:277:                                               passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:281:                                               passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:294:                          passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_Curve448.py:312:                          passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:276:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:279:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:285:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:313:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:316:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:386:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:389:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:395:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:401:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:404:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:432:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:435:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:505:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:508:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:514:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:520:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:523:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:556:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:559:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:654:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:657:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:663:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:669:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:672:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:700:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:703:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:798:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:801:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:807:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:813:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:816:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:844:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:847:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:946:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:952:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:958:                                                passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:960:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:966:                                                passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:969:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1007:        encoded = self.ref_private._export_private_pem(passphrase=b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1014:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1020:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1022:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1039:        encoded = self.ref_private._export_private_encrypted_pkcs8_in_clear_pem("secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1047:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1053:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1055:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1061:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1065:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1074:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1078:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1085:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1089:                                          passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1098:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1101:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1105:                                      passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1209:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1215:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1221:                                                passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1224:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1262:        encoded = self.ref_private._export_private_pem(passphrase=b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1269:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1275:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1277:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1294:        encoded = self.ref_private._export_private_encrypted_pkcs8_in_clear_pem("secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1302:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1308:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1310:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1316:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1320:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1329:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1333:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1340:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1344:                                          passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1353:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1356:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1360:                                      passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1464:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1470:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1476:                                                passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1478:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1484:                                                passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1487:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1525:        encoded = self.ref_private._export_private_pem(passphrase=b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1532:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1538:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1540:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1557:        encoded = self.ref_private._export_private_encrypted_pkcs8_in_clear_pem("secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1565:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1571:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1573:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1601:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1605:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1614:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1618:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1625:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1629:                                          passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1638:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1641:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1645:                                      passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1662:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1752:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1758:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1764:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1766:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1772:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1775:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1813:        encoded = self.ref_private._export_private_pem(passphrase=b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1820:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1826:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1828:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1845:        encoded = self.ref_private._export_private_encrypted_pkcs8_in_clear_pem("secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1853:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1859:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1861:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1889:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1893:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1902:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1906:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1913:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1917:                                          passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1926:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1929:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1933:                                      passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1950:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2051:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2057:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2063:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2065:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2071:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2074:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2112:        encoded = self.ref_private._export_private_pem(passphrase=b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2119:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2125:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2127:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2144:        encoded = self.ref_private._export_private_encrypted_pkcs8_in_clear_pem("secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2152:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2158:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2160:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2188:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2192:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2201:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2205:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2212:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2216:                                          passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2225:        self.ref_private.export_key(format="PEM", passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2228:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2232:                                      passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2249:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2312:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2315:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2321:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2327:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2330:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2358:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2361:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2422:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2428:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2434:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2436:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2442:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2445:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2460:                                              passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2468:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2489:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2493:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2500:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2504:                                          passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2515:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2526:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2559:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2562:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2568:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2574:        key = ECC._import_der(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2577:        key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2605:            key = ECC.import_key(key_file, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2608:            key = ECC.import_key(tostr(key_file), b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2654:        encoded = self.ref_private._export_pkcs8(passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2660:        decoded = ECC._import_pkcs8(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2666:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2668:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2674:                                         passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2677:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2693:                                              passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2701:        decoded = ECC.import_key(encoded, "secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2715:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2719:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2726:                                          passphrase="secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2730:                                          passphrase=b"secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2741:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2752:                                      passphrase="secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Hash/test_BLAKE2.py:165:            h = self.BLAKE2.new(digest_bits=digest_bits, key=b"secret")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_OpenPGP.py:139:        #    gpg -c -z 0 --cipher-algo AES --passphrase secret_passphrase \
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_OpenPGP.py:143:        # from 'secret_passphrase' and written to file 'ct'.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_OpenPGP.py:183:        #    gpg -c -z 0 --cipher-algo 3DES --passphrase secret_passphrase \
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:220:    #       Item #1: secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:329:            secret, salt, info, exp = [ t2b(tv[x]) for x in (1,2,3,5) ]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:332:            output = HKDF(secret, key_len, salt, hashmod, 1, info)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:2:#  SelfTest/Protocol/test_secret_sharing.py: Self-test for secret sharing protocols
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:41:from Crypto.Protocol.SecretSharing import Shamir, _Element, \
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:149:        # Generated by ssss (index, secret, shares)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:224:            secret = unhexlify(tv[1])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:231:                self.assertEqual(secret, result)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:240:            secret = rng.read(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:242:            shares = Shamir.split(2, 3, secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:244:            secret2 = Shamir.combine(shares[:2])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:245:            self.assertEqual(secret, secret2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:247:            secret3 = Shamir.combine([ shares[0], shares[2] ])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:248:            self.assertEqual(secret, secret3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:256:            secret = rng.read(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:258:            shares = Shamir.split(2, 3, secret, ssss=True)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:260:            secret2 = Shamir.combine(shares[:2], ssss=True)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:261:            self.assertEqual(secret, secret2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:264:            secret = rng.read(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:266:            shares = Shamir.split(3, 7, secret, ssss=True)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:268:            secret2 = Shamir.combine([shares[3], shares[4], shares[6]], ssss=True)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:269:            self.assertEqual(secret, secret2)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:274:        secret = unhexlify(b("000102030405060708090a0b0c0d0e0f"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_SecretSharing.py:276:        shares = Shamir.split(2, 3, secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:402:                shared_secret, enc = HPKE.HPKE_Cipher._encap(receiver_pub,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:408:                self.assertEqual(shared_secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_HPKE.py:409:                                 unhexlify(vector["shared_secret"]))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/__init__.py:33:    from Crypto.SelfTest.Protocol import test_SecretSharing
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/__init__.py:34:    tests += test_SecretSharing.get_tests(config=config)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:338:        secret = unhexlify(tv5)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:346:        self.assertEqual(result1, secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:347:        self.assertEqual(result2, secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:433:        secret = unhexlify(tv5)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:441:        self.assertEqual(result1, secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:442:        self.assertEqual(result2, secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/IO/PKCS8.py:68:        The secret passphrase from which the wrapping key is derived.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/BLAKE2s.py:162:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/BLAKE2s.py:164:        mac1 = new(digest_bits=160, key=secret, data=mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/BLAKE2s.py:165:        mac2 = new(digest_bits=160, key=secret, data=self.digest())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/HMAC.py:184:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/HMAC.py:186:        mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/HMAC.py:187:        mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=self.digest())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/KMAC128.py:109:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/KMAC128.py:111:        mac1 = SHA3_256.new(secret + mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/KMAC128.py:112:        mac2 = SHA3_256.new(secret + self.digest())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/BLAKE2b.py:162:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/BLAKE2b.py:164:        mac1 = new(digest_bits=160, key=secret, data=mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/BLAKE2b.py:165:        mac2 = new(digest_bits=160, key=secret, data=self.digest())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/CMAC.py:236:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/CMAC.py:238:        mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/CMAC.py:239:        mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=self.digest())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/Poly1305.py:151:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/Poly1305.py:153:        mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Hash/Poly1305.py:154:        mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=self.digest())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/Blowfish.py:90:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/ChaCha20.py:251:        key (bytes/bytearray/memoryview): The secret key to use.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_openpgp.py:179:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/ChaCha20_Poly1305.py:224:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/ChaCha20_Poly1305.py:228:        mac1 = BLAKE2s.new(digest_bits=160, key=secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/ChaCha20_Poly1305.py:230:        mac2 = BLAKE2s.new(digest_bits=160, key=secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/ChaCha20_Poly1305.py:284:    :keyword key: The secret key to use. It must be 32 bytes long.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_kw.py:150:        The secret key to use to seal or unseal.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_kwp.py:127:        The secret key to use to seal or unseal.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/ARC4.py:113:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/DES3.py:118:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ccm.py:69:    if the message comes from a source that really knowns the secret key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ccm.py:553:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ccm.py:555:        mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=self._mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ccm.py:556:        mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=received_mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ccm.py:632:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/DES.py:89:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_EKSBlowfish.py:100:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_gcm.py:163:    if the message comes from a source that really knowns the secret key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_gcm.py:500:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_gcm.py:502:        mac1 = BLAKE2s.new(digest_bits=160, key=secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_gcm.py:504:        mac2 = BLAKE2s.new(digest_bits=160, key=secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_gcm.py:582:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/ARC2.py:99:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/AES.py:133:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/Salsa20.py:143:    :keyword key: The secret key to use. It must be 16 or 32 bytes long.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ocb.py:443:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ocb.py:444:        mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=self._mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_ocb.py:445:        mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=received_mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/CAST.py:90:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_eax.py:61:    from a source that really knowns the secret key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_eax.py:303:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_eax.py:305:        mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=self._mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_eax.py:306:        mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=received_mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_eax.py:382:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_siv.py:57:    if the message comes from a source that really knowns the secret key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_siv.py:251:        secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_siv.py:253:        mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=self._mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_siv.py:254:        mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=received_mac_tag)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Cipher/_mode_siv.py:370:        The secret key to use in the symmetric cipher.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/__init__.py:31:__all__ = ['KDF', 'SecretSharing', 'DH']
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:66:        The secret password to generate the key from.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:69:        This value does not need to be kept secret, but it should be randomly
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:107:        The secret password to generate the key from.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:113:        This value does not need to be kept secret, but it should be randomly
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:135:        pseudorandom byte string from two parameters: a secret and a salt.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:201:            A secret that can be used as key for CMACs
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:227:            A secret that can be used as key for CMACs
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:264:        """"Derive a secret from the vector of components.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:302:    """Derive one or more keys from a master secret using
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:308:        It must be a high-entropy secret, though not necessarily uniform.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:313:        A non-secret, reusable value that strengthens the randomness
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:335:        raise ValueError("Too much secret data to derive")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:356:        The secret pass phrase to generate the keys from.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:359:        This value does not need to be kept secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:504:        The secret password or pass phrase.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:551:        The secret password or pass phrase to test.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:583:    secret = get_random_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:585:    mac1 = BLAKE2s.new(digest_bits=160, key=secret, data=bcrypt_hash).digest()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:586:    mac2 = BLAKE2s.new(digest_bits=160, key=secret, data=bcrypt_hash2).digest()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:592:    """Derive one or more keys from a master secret using
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:598:        The secret value used by the KDF to derive the other keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:600:        The length on the secret must be consistent with the input expected by
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:606:        the secret and an input. It returns another byte string.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.pyi:19:    def split(k: int, n: int, secret: bytes, ssss: Optional[bool]) -> List[Tuple[int, bytes]]: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:2:# SecretSharing.py : distribute a secret amongst a group of participants
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:163:    """Shamir's secret sharing scheme.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:165:    A secret is split into ``n`` shares, and it is sufficient to collect
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:166:    ``k`` of them to reconstruct the secret.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:170:    def split(k, n, secret, ssss=False):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:171:        """Split a secret into ``n`` shares.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:173:        The secret can be reconstructed later using just ``k`` shares
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:182:            The number of shares needed to reconstruct the secret.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:185:          secret (byte string):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:205:        # c_0 is the secret.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:209:        coeffs.append(_Element(secret))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:235:        """Recombine a secret, if enough shares are presented.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/SecretSharing.py:254:            The original secret, as a byte string (16 bytes long).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:71:    Nsecret = hashmod.digest_size
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:79:    shared_secret = _labeled_expand(eae_prk,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:80:                                    b"shared_secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:82:                                    Nsecret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:85:    return shared_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:126:            shared_secret, self.enc = self._encap(receiver_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:134:            shared_secret = self._decap(enc,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:145:            self._export_secret = self._key_schedule(shared_secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:178:        shared_secret = key_agreement(eph_priv=eph_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:182:        return shared_secret, enc
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:218:        shared_secret = key_agreement(eph_pub=pkE,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:222:        return shared_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:241:                      shared_secret: bytes,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:265:        secret = _labeled_extract(shared_secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:266:                                  b'secret',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:271:        key = _labeled_expand(secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:278:        base_nonce = _labeled_expand(secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:285:        exporter_secret = _labeled_expand(secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:292:        return key, base_nonce, exporter_secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:392:    * a shared secret (e.g., a symmetric key derived from a password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:415:        The encapsulated session key (i.e., the KEM shared secret).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:429:        byte strings: the identifier and the actual secret value.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:432:        The secret value must be at least 32 bytes long,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:434:        (use a KDF like PBKDF2 or scrypt to derive a secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/HPKE.py:438:        A non-secret parameter that contributes
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/__init__.pyi:1:__all__ = ['KDF.pyi', 'SecretSharing.pyi']
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/DH.py:125:      The derived secret key material.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic-2.12.3.dist-info/METADATA:286:* Make `Secret` covariant by [@bluenote10](https://github.com/bluenote10) in [#12008](https://github.com/pydantic/pydantic/pull/12008)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic-2.12.3.dist-info/METADATA:815:* Support serialization as any for `Secret` types and `Url` types by [@sydney-runkle](https://github.com/sydney-runkle) in [#10947](https://github.com/pydantic/pydantic/pull/10947)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pycryptodome-3.23.0.dist-info/METADATA:69:* Shamir's Secret Sharing scheme
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pycryptodome-3.23.0.dist-info/RECORD:251:Crypto/Protocol/SecretSharing.py,sha256=TFTlyR86HJ8H7Dx59N0iOFDNBHG-FVkh6-cG0XBqbOY,9122
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pycryptodome-3.23.0.dist-info/RECORD:252:Crypto/Protocol/SecretSharing.pyi,sha256=-lErV2RvaNPuOA0z4c44WmNSu9irCw_DDb7wPgCS2BY,798
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pycryptodome-3.23.0.dist-info/RECORD:258:Crypto/Protocol/__pycache__/SecretSharing.cpython-313.pyc,,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pycryptodome-3.23.0.dist-info/RECORD:423:Crypto/SelfTest/Protocol/__pycache__/test_SecretSharing.cpython-313.pyc,,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pycryptodome-3.23.0.dist-info/RECORD:428:Crypto/SelfTest/Protocol/test_SecretSharing.py,sha256=8RwEstg1_tn2SvGxie6PGxXGRfEqgs6vQ-pzvYIMCxs,10178
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/coverage/debug.py:647:    CLOAK = {"API", "TOKEN", "KEY", "SECRET", "PASS", "SIGNATURE"}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/coverage/config.py:708:    # 5) for our benchmark, force settings using a secret environment variable:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Flask_SocketIO-5.5.1.dist-info/METADATA:53:app.config['SECRET_KEY'] = 'secret!'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/_emoji_codes.py:156:    "japanese_secret_button": "㊙",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/_emoji_codes.py:2882:    "secret": "㊙",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/utils/subprocess.py:56:    return [arg.secret if isinstance(arg, HiddenText) else arg for arg in args]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/utils/misc.py:535:    secret: str
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/utils/misc.py:551:        return self.secret == other.secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/mercurial.py:77:            config.set("paths", "default", url.secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:415:        secret_url, rev, user_pass = self.get_url_rev_and_auth(url.secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:416:        username, secret_password = user_pass
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:418:        if secret_password is not None:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:419:            password = hide_value(secret_password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:423:        return hide_url(secret_url), rev_options
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:513:            if self.compare_urls(existing_url, url.secret):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/__init__.py:290:        self.secret = gen_salt(20)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/__init__.py:360:                secret=self.secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/__init__.py:412:            render_console_html(secret=self.secret, evalex_trusted=is_trusted),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/__init__.py:543:            secret = request.args.get("s")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/__init__.py:547:            elif cmd == "pinauth" and secret == self.secret:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/__init__.py:549:            elif cmd == "printpin" and secret == self.secret:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/__init__.py:555:                and self.secret == secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/shared/debugger.js:42:  params.set("s", SECRET)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/tbtools.py:30:          SECRET = "%(secret)s";
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/tbtools.py:329:        self, evalex: bool, secret: str, evalex_trusted: bool
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/tbtools.py:349:            "secret": secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/tbtools.py:443:def render_console_html(secret: str, evalex_trusted: bool) -> str:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/debug/tbtools.py:449:        "secret": secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/security.py:7:import secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/security.py:22:    return "".join(secrets.choice(SALT_CHARS) for _ in range(length))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous-2.2.0.dist-info/METADATA:40:auth_s = URLSafeSerializer("secret key", "auth")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2189:            'radius_server_secret',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2468:            'sodium_crypto_box_keypair_from_secretkey_and_publickey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2471:            'sodium_crypto_box_publickey_from_secretkey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2475:            'sodium_crypto_box_secretkey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2488:            'sodium_crypto_kx_secretkey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2500:            'sodium_crypto_secretbox_keygen',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2501:            'sodium_crypto_secretbox_open',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2502:            'sodium_crypto_secretbox',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2503:            'sodium_crypto_secretstream_xchacha20poly1305_init_pull',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2504:            'sodium_crypto_secretstream_xchacha20poly1305_init_push',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2505:            'sodium_crypto_secretstream_xchacha20poly1305_keygen',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2506:            'sodium_crypto_secretstream_xchacha20poly1305_pull',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2507:            'sodium_crypto_secretstream_xchacha20poly1305_push',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2508:            'sodium_crypto_secretstream_xchacha20poly1305_rekey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2514:            'sodium_crypto_sign_keypair_from_secretkey_and_publickey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2517:            'sodium_crypto_sign_publickey_from_secretkey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_php_builtins.py:2519:            'sodium_crypto_sign_secretkey',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/deprecated/json.py:18:from ..types import SecretBytes, SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/deprecated/json.py:75:    SecretBytes: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/deprecated/json.py:76:    SecretStr: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/__init__.py:191:    'Secret',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/__init__.py:192:    'SecretStr',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/__init__.py:193:    'SecretBytes',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/__init__.py:356:    'Secret': (__spec__.parent, '.types'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/__init__.py:357:    'SecretStr': (__spec__.parent, '.types'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/__init__.py:358:    'SecretBytes': (__spec__.parent, '.types'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/__init__.py:119:    'SecretField',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/__init__.py:120:    'SecretStr',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/__init__.py:121:    'SecretBytes',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/json.py:14:from pydantic.v1.types import SecretBytes, SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/json.py:65:    SecretBytes: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/json.py:66:    SecretStr: str,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/_hypothesis_plugin.py:149:# Secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/_hypothesis_plugin.py:150:st.register_type_strategy(pydantic.SecretBytes, st.binary().map(pydantic.SecretBytes))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/_hypothesis_plugin.py:151:st.register_type_strategy(pydantic.SecretStr, st.text().map(pydantic.SecretStr))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/schema.py:59:    SecretBytes,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/schema.py:60:    SecretStr,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/schema.py:1090:            if issubclass(type_, (SecretStr, SecretBytes)):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:98:    'SecretField',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:99:    'SecretStr',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:100:    'SecretBytes',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:847:# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SECRET TYPES ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:850:class SecretField(abc.ABC):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:852:    Note: this should be implemented as a generic like `SecretField(ABC, Generic[T])`,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:854:          `get_secret_value()` method should use the generic `T` type.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:862:        return isinstance(other, self.__class__) and self.get_secret_value() == other.get_secret_value()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:865:        return '**********' if self.get_secret_value() else ''
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:868:        return hash(self.get_secret_value())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:871:    def get_secret_value(self) -> Any:  # pragma: no cover
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:875:class SecretStr(SecretField):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:896:    def validate(cls, value: Any) -> 'SecretStr':
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:903:        self._secret_value = value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:906:        return f"SecretStr('{self}')"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:909:        return len(self._secret_value)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:912:        warnings.warn('`secret_str.display()` is deprecated, use `str(secret_str)` instead', DeprecationWarning)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:915:    def get_secret_value(self) -> str:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:916:        return self._secret_value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:919:class SecretBytes(SecretField):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:940:    def validate(cls, value: Any) -> 'SecretBytes':
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:947:        self._secret_value = value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:950:        return f"SecretBytes(b'{self}')"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:953:        return len(self._secret_value)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:956:        warnings.warn('`secret_bytes.display()` is deprecated, use `str(secret_bytes)` instead', DeprecationWarning)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:959:    def get_secret_value(self) -> bytes:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/types.py:960:        return self._secret_value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:27:    This is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:36:        _secrets_dir: Optional[StrPath] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:46:                _secrets_dir=_secrets_dir,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:56:        _secrets_dir: Optional[StrPath] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:70:        file_secret_settings = SecretsSettingsSource(secrets_dir=_secrets_dir or self.__config__.secrets_dir)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:73:            init_settings=init_settings, env_settings=env_settings, file_secret_settings=file_secret_settings
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:87:        secrets_dir: Optional[StrPath] = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:126:            file_secret_settings: SettingsSourceCallable,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:128:            return init_settings, env_settings, file_secret_settings
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:275:class SecretsSettingsSource:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:276:    __slots__ = ('secrets_dir',)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:278:    def __init__(self, secrets_dir: Optional[StrPath]):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:279:        self.secrets_dir: Optional[StrPath] = secrets_dir
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:283:        Build fields from "secrets" files.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:285:        secrets: Dict[str, Optional[str]] = {}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:287:        if self.secrets_dir is None:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:288:            return secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:290:        secrets_path = Path(self.secrets_dir).expanduser()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:292:        if not secrets_path.exists():
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:293:            warnings.warn(f'directory "{secrets_path}" does not exist')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:294:            return secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:296:        if not secrets_path.is_dir():
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:297:            raise SettingsError(f'secrets_dir must reference a directory, not a {path_type(secrets_path)}')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:301:                path = find_case_path(secrets_path, env_name, settings.__config__.case_sensitive)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:307:                    secret_value = path.read_text().strip()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:310:                            secret_value = settings.__config__.parse_env_var(field.name, secret_value)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:314:                    secrets[field.alias] = secret_value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:317:                        f'attempted to load secret file "{path}" but found a {path_type(path)} instead.',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:320:        return secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/env_settings.py:323:        return f'SecretsSettingsSource(secrets_dir={self.secrets_dir!r})'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:78:    'Secret',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:79:    'SecretStr',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:80:    'SecretBytes',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1530:# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SECRET TYPES ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1532:# The `Secret` class being conceptually immutable, make the type variable covariant:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1533:SecretType = TypeVar('SecretType', covariant=True)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1536:class _SecretBase(Generic[SecretType]):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1537:    def __init__(self, secret_value: SecretType) -> None:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1538:        self._secret_value: SecretType = secret_value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1540:    def get_secret_value(self) -> SecretType:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1541:        """Get the secret value.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1544:            The secret value.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1546:        return self._secret_value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1549:        return isinstance(other, self.__class__) and self.get_secret_value() == other.get_secret_value()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1552:        return hash(self.get_secret_value())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1564:def _serialize_secret(value: Secret[SecretType], info: core_schema.SerializationInfo) -> str | Secret[SecretType]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1571:class Secret(_SecretBase[SecretType]):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1574:    You may either directly parametrize `Secret` with a type, or subclass from `Secret` with a parametrized type. The benefit of subclassing
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1576:    ways of using `Secret` to create a new secret type.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1578:    1. Directly parametrizing `Secret` with a type:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1581:    from pydantic import BaseModel, Secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1583:    SecretBool = Secret[bool]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1586:        secret_bool: SecretBool
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1588:    m = Model(secret_bool=True)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1590:    #> {'secret_bool': Secret('**********')}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1593:    #> {"secret_bool":"**********"}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1595:    print(m.secret_bool.get_secret_value())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1599:    2. Subclassing from parametrized `Secret`:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1604:    from pydantic import BaseModel, Secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1606:    class SecretDate(Secret[date]):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1611:        secret_date: SecretDate
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1613:    m = Model(secret_date=date(2022, 1, 1))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1615:    #> {'secret_date': SecretDate('****/**/**')}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1618:    #> {"secret_date":"****/**/**"}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1620:    print(m.secret_date.get_secret_value())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1632:    from pydantic import BaseModel, Field, Secret, ValidationError
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1634:    SecretPosInt = Secret[Annotated[int, Field(gt=0, strict=True)]]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1637:        sensitive_int: SecretPosInt
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1641:    #> {'sensitive_int': Secret('**********')}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1674:    2. The input value is not an integer, so it raises a validation error because the `SecretPosInt` type has strict mode enabled.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1678:        return '**********' if self.get_secret_value() else ''
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1683:        # if origin_type is Secret, then cls is a GenericAlias, and we can extract the inner type directly
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1691:                if get_origin(base) is Secret:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1695:                    f"Can't get secret type from {cls.__name__}. "
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1696:                    'Please use Secret[<type>], or subclass from Secret[<type>] instead.'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1701:        def validate_secret_value(value, handler) -> Secret[SecretType]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1702:            if isinstance(value, Secret):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1703:                value = value.get_secret_value()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1709:                validate_secret_value,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1714:                _serialize_secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1723:                _serialize_secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1731:def _secret_display(value: SecretType) -> str:  # type: ignore
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1735:def _serialize_secret_field(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1736:    value: _SecretField[SecretType], info: core_schema.SerializationInfo
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1737:) -> str | _SecretField[SecretType]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1740:        # hence we just use `secret_display`
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1741:        return _secret_display(value.get_secret_value())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1746:class _SecretField(_SecretBase[SecretType]):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1762:        def get_secret_schema(strict: bool) -> CoreSchema:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1778:                    _serialize_secret_field,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1785:            lax_schema=get_secret_schema(strict=False),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1786:            strict_schema=get_secret_schema(strict=True),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1793:                _serialize_secret_field,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1801:class SecretStr(_SecretField[str]):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1804:    When the secret value is nonempty, it is displayed as `'**********'` instead of the underlying value in
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1808:    from pydantic import BaseModel, SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1812:        password: SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1817:    #> username='scolvin' password=SecretStr('**********')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1818:    print(user.password.get_secret_value())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1820:    print((SecretStr('password'), SecretStr('')))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1821:    #> (SecretStr('**********'), SecretStr(''))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1824:    As seen above, by default, [`SecretStr`][pydantic.types.SecretStr] (and [`SecretBytes`][pydantic.types.SecretBytes])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1828:    secret as plain-text when serializing to json.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1831:    from pydantic import BaseModel, SecretBytes, SecretStr, field_serializer
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1834:        password: SecretStr
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1835:        password_bytes: SecretBytes
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1838:        def dump_secret(self, v):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1839:            return v.get_secret_value()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1843:    #> password=SecretStr('**********') password_bytes=SecretBytes(b'**********')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1849:        'password': SecretStr('**********'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1850:        'password_bytes': SecretBytes(b'**********'),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1862:        return len(self._secret_value)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1865:        return _secret_display(self._secret_value)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1868:class SecretBytes(_SecretField[bytes]):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1872:    When the secret value is nonempty, it is displayed as `b'**********'` instead of the underlying value in
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1876:    from pydantic import BaseModel, SecretBytes
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1880:        password: SecretBytes
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1883:    #> username='scolvin' password=SecretBytes(b'**********')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1884:    print(user.password.get_secret_value())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1886:    print((SecretBytes(b'password'), SecretBytes(b'')))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1887:    #> (SecretBytes(b'**********'), SecretBytes(b''))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1895:        return len(self._secret_value)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1898:        return _secret_display(self._secret_value).encode()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/__init__.py:44:    InvalidSharedSecretError,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/__init__.py:71:    InvalidSharedSecretError,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:807:        return cls.from_secret_exponent(secexp, curve, hashfunc)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:834:    def from_secret_exponent(cls, secexp, curve=NIST192p, hashfunc=sha1):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:841:        :param int secexp: secret multiplier (the actual private key in ECDSA).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:860:                "Edwards keys don't support setting the secret scalar "
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:928:        return cls.from_secret_exponent(secexp, curve, hashfunc)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1169:        secexp = self.privkey.secret_multiplier
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1426:        secexp = self.privkey.secret_multiplier
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/rfc6979.py:105:        secret = bits2int(t, qlen)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/rfc6979.py:107:        if 1 <= secret < order:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/rfc6979.py:109:                return secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/util.py:154:# arbitrarily-sized secret seed and turn it into a number that obeys the same
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/util.py:156:# signing keys from a secret rather than generating them randomly, for
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/util.py:158:# secret. You should use a uniformly-distributed unguessable seed with about
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/util.py:162:#   sk = SigningKey.from_secret_exponent(secexp, curve)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:119:        priv = SigningKey.from_secret_exponent(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:157:        seed = b"secret"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:162:        priv1 = SigningKey.from_secret_exponent(secexp1, curve)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:163:        priv2 = SigningKey.from_secret_exponent(secexp2, curve)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:202:            priv1.privkey.secret_multiplier, priv2.privkey.secret_multiplier
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:227:        priv1 = SigningKey.from_secret_exponent(secexp=3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:229:        priv2 = SigningKey.from_secret_exponent(secexp=3)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:232:        priv1 = SigningKey.from_secret_exponent(secexp=4, curve=NIST224p)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:559:    def test_sk_from_secret_exponent_with_wrong_sec_exponent(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:561:            SigningKey.from_secret_exponent(0)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:615:        self.assertEqual(sk.privkey.secret_multiplier, 255)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:688:        sk = SigningKey.from_secret_exponent(12)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:787:        sk = SigningKey.from_secret_exponent(123456789)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:802:        sk = SigningKey.from_secret_exponent(123456789)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:831:        sk = SigningKey.from_secret_exponent(123456789)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:879:        sk = SigningKey.from_secret_exponent(123456789)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:935:        sk = SigningKey.from_secret_exponent(123456791)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:27:    InvalidSharedSecretError,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:54:    secret1 = ecdh1.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:55:    secret2 = ecdh2.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:56:    assert secret1 == secret2
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:66:    secret1 = ecdh1.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:67:    secret2 = ecdh2.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:69:    assert secret1 == secret2
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:76:        ecdh1.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:81:        ecdh1.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:138:        ecdh1.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:141:        ecdh2.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:144:def test_ecdh_invalid_shared_secret_curve():
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:152:    ecdh1.private_key.privkey.secret_multiplier = ecdh1.private_key.curve.order
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:154:    with pytest.raises(InvalidSharedSecretError):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:155:        ecdh1.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:162:    "curve,privatekey,pubkey,secret",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:294:def test_ecdh_NIST(curve, privatekey, pubkey, secret):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:299:    sharedsecret = ecdh.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:301:    assert sharedsecret == unhexlify(secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:326:gshared_secret = "8f457e34982478d1c34b9cd2d0c15911b72dd60d869e2cea"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:334:    sharedsecret = ecdh.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:336:    assert sharedsecret == unhexlify(gshared_secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:344:    sharedsecret = ecdh.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:346:    assert sharedsecret == unhexlify(gshared_secret)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:428:    secret1 = ecdh1.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:429:    secret2 = ecdh2.generate_sharedsecret_bytes()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:431:    assert secret1 == secret2
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:434:        "pkeyutl -derive -inkey t/privkey1.pem -peerkey t/pubkey2.pem -out t/secret1"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:437:        "pkeyutl -derive -inkey t/privkey2.pem -peerkey t/pubkey1.pem -out t/secret2"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:440:    with open("t/secret1", "rb") as e:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:441:        ssl_secret1 = e.read()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:442:    with open("t/secret1", "rb") as e:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:443:        ssl_secret2 = e.read()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:445:    assert len(ssl_secret1) == vk1.curve.verifying_key_length // 2
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:446:    assert len(secret1) == vk1.curve.verifying_key_length // 2
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:448:    assert ssl_secret1 == ssl_secret2
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:449:    assert secret1 == ssl_secret1
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:31:   secret = randrange( 1, n )
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:32:   pubkey = Public_key( g, g * secret )
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:33:   privkey = Private_key( pubkey, secret )
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:213:    def __init__(self, public_key, secret_multiplier):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:215:        secret_multiplier is a large integer.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:219:        self.secret_multiplier = secret_multiplier
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:226:                and self.secret_multiplier == other.secret_multiplier
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdsa.py:266:            * (hash + (self.secret_multiplier * r) % n)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:609:        sk = SigningKey.from_secret_exponent(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:610:            self.sk1.privkey.secret_multiplier, self.sk1.curve
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:812:    def test_ed25519_from_secret_exponent(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:814:            SigningKey.from_secret_exponent(1234567890, curve=Ed25519)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:816:        self.assertIn("don't support setting the secret", str(e.exception))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:875:        cls.sk = SigningKey.from_secret_exponent(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1088:    sk = SigningKey.from_secret_exponent(NIST256p.order - 1, curve=NIST256p)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1110:    sk = SigningKey.from_secret_exponent(12, curve)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1112:    sk2 = SigningKey.from_secret_exponent(12, BRAINPOOLP160r1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1118:    sk1 = SigningKey.from_secret_exponent(2, BRAINPOOLP160r1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1119:    sk2 = SigningKey.from_secret_exponent(2, NIST256p)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1124:def test_VerifyingKey_inequality_with_different_secret_points():
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1125:    sk1 = SigningKey.from_secret_exponent(2, BRAINPOOLP160r1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1126:    sk2 = SigningKey.from_secret_exponent(3, BRAINPOOLP160r1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:15:    "InvalidSharedSecretError",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:39:class InvalidSharedSecretError(Exception):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:40:    """ECDH. Raised in case the shared secret we obtained is an INFINITY."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:50:    pair, to establish a shared secret over an insecure channel
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:59:        All parameters must be ultimately set before shared secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:77:    def _get_shared_secret(self, remote_public_key):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:80:                "Private key needs to be set to create shared secret"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:84:                "Public key needs to be set to create shared secret"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:93:        # shared secret = PUBKEYtheirs * PRIVATEKEYours
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:96:            * self.private_key.privkey.secret_multiplier
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:99:            raise InvalidSharedSecretError("Invalid shared secret (INFINITY).")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:302:    def generate_sharedsecret_bytes(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:304:        Generate shared secret from local private key and remote public key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:312:        :return: shared secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:316:            self.generate_sharedsecret(), self.private_key.curve.curve.p()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:319:    def generate_sharedsecret(self):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:321:        Generate shared secret from local private key and remote public key.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:327:        shared secret(local private key, remote public key) ==
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:328:        shared secret(local public key, remote private key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:333:        :return: shared secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/ecdh.py:336:        return self._get_shared_secret(self.public_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/blake3-1.0.8.dist-info/METADATA:55:import secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/blake3-1.0.8.dist-info/METADATA:56:random_key = secrets.token_bytes(32)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:51:    The secret key should be a random string of ``bytes`` and should not
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:54:    for information about the security of the secret key and salt.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:56:    :param secret_key: The secret key to sign and verify with. Can be a
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:58:    :param salt: Extra key to combine with ``secret_key`` to distinguish
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:78:        ``secret_key``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:112:        secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:128:        secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:144:        secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:163:        secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:179:        secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:194:        secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:205:        #: The list of secret keys to try for verifying signatures, from
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:210:        self.secret_keys: list[bytes] = _make_keys_list(secret_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:239:    def secret_key(self) -> bytes:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:240:        """The newest (last) entry in the :attr:`secret_keys` list. This
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:243:        return self.secret_keys[-1]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:287:        return self.signer(self.secret_keys, salt=salt, **self.signer_kwargs)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:308:            for secret_key in self.secret_keys:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/serializer.py:309:                yield fallback(secret_key, salt=salt, **kwargs)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:68:    secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:70:    if isinstance(secret_key, (str, bytes)):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:71:        return [want_bytes(secret_key)]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:73:    return [want_bytes(s) for s in secret_key]  # pyright: ignore
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:80:    The secret key should be a random string of ``bytes`` and should not
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:83:    for information about the security of the secret key and salt.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:85:    :param secret_key: The secret key to sign and verify with. Can be a
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:87:    :param salt: Extra key to combine with ``secret_key`` to distinguish
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:90:    :param key_derivation: How to derive the signing key from the secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:104:        ``secret_key``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:123:    #: secret key and salt. The default is ``django-concat``. Possible
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:131:        secret_key: str | bytes | cabc.Iterable[str] | cabc.Iterable[bytes],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:138:        #: The list of secret keys to try for verifying signatures, from
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:143:        self.secret_keys: list[bytes] = _make_keys_list(secret_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:176:    def secret_key(self) -> bytes:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:177:        """The newest (last) entry in the :attr:`secret_keys` list. This
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:180:        return self.secret_keys[-1]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:182:    def derive_key(self, secret_key: str | bytes | None = None) -> bytes:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:187:        secret keys.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:189:        :param secret_key: A specific secret key to derive from.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:190:            Defaults to the last item in :attr:`secret_keys`.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:193:            Added the ``secret_key`` parameter.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:195:        if secret_key is None:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:196:            secret_key = self.secret_keys[-1]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:198:            secret_key = want_bytes(secret_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:201:            return t.cast(bytes, self.digest_method(self.salt + secret_key).digest())
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:204:                bytes, self.digest_method(self.salt + b"signer" + secret_key).digest()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:207:            mac = hmac.new(secret_key, digestmod=self.digest_method)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:211:            return secret_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:236:        for secret_key in reversed(self.secret_keys):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/itsdangerous/signer.py:237:            key = self.derive_key(secret_key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/client_middleware_digest_auth.py:285:            """RFC 7616 Section 3: KD(secret, data) = H(concat(secret, ":", data))."""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/utils.py:5:import secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/utils.py:20:    key = secrets.token_bytes(16)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/frames.py:7:import secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/frames.py:323:            mask_bytes = secrets.token_bytes(4)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/starlette/datastructures.py:208:class Secret:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/starlette/responses.py:16:from secrets import token_hex
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/starlette/middleware/sessions.py:10:from starlette.datastructures import MutableHeaders, Secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/starlette/middleware/sessions.py:19:        secret_key: str | Secret,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/starlette/middleware/sessions.py:28:        self.signer = itsdangerous.TimestampSigner(str(secret_key))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/python_dotenv-1.1.1.dist-info/METADATA:112:secrets like a password.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/python_dotenv-1.1.1.dist-info/METADATA:139:    **dotenv_values(".env.secret"),  # load sensitive variables
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/engineio/base_server.py:6:import secrets
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/engineio/base_server.py:202:            secrets.token_bytes(12) + self.sequence_number.to_bytes(3, 'big'))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sansio/app.py:210:    #: If a secret key is set, cryptographic components can use this to
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sansio/app.py:215:    #: :data:`SECRET_KEY` configuration key. Defaults to ``None``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sansio/app.py:216:    secret_key = ConfigAttribute[t.Union[str, bytes, None]]("SECRET_KEY")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:105:            "The session is unavailable because no secret "
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:106:            "key was set.  Set the secret_key on the "
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:107:            "application to something unique and secret."
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:133:    will complain that the secret key was not set.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:303:    #: the salt that should be applied on top of the secret key for the
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:318:        if not app.secret_key:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:323:        if fallbacks := app.config["SECRET_KEY_FALLBACKS"]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/sessions.py:326:        keys.append(app.secret_key)  # itsdangerous expects current key at top
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/app.py:183:            "SECRET_KEY": None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/app.py:184:            "SECRET_KEY_FALLBACKS": None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/flask/config.py:66:        SECRET_KEY = 'development key'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py:355:      spow = DDL("ALTER TABLE %(table)s SET secretpowers TRUE")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py:358:      drop_spow = DDL("ALTER TABLE users SET secretpowers FALSE")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/oracledb.py:231:            "wallet_password": "top secret",  # password for the PEM file
/home/zion/ZION/builds/windows-x64/zion_universal_pool_v3.py:22:import secrets
/home/zion/ZION/builds/windows-x64/zion_universal_pool_v3.py:153:        block_header = secrets.token_hex(64)
/home/zion/ZION/builds/windows-x64/zion_universal_pool_v3.py:154:        elements_seed = secrets.token_hex(32)
/home/zion/ZION/builds/windows-x64/zion_universal_pool_v3.py:174:            blob = secrets.token_hex(76)
/home/zion/ZION/builds/windows-x64/zion_universal_pool_v3.py:176:            seed_hash = secrets.token_hex(32)
/home/zion/ZION/builds/windows-x64/zion_universal_pool_v3.py:187:            blob = secrets.token_hex(76) 
/home/zion/ZION/builds/windows-x64/zion_universal_pool_v3.py:389:                "id": f"zion_{int(time.time())}_{secrets.randbelow(100000)}",
/home/zion/ZION/ai/ai_warp_engine.py:24:import secrets
/home/zion/ZION/ai/ai_warp_engine.py:196:        seed = secrets.token_hex(32) + str(datetime.now().timestamp())
/home/zion/ZION/ai/zion_quantum_ai.py:23:import secrets
/home/zion/ZION/ai/zion_ai_afterburner.py:13:import secrets
/home/zion/ZION/ai/zion_ai_afterburner.py:124:        task_id = f"ai_task_{int(time.time())}_{secrets.token_hex(4)}"
/home/zion/ZION/ai/mining/pool_stratum_bridge.py:16:import secrets
/home/zion/ZION/ai/mining/pool_stratum_bridge.py:298:                "seed_hash": job.get('seed_hash', secrets.token_hex(32)),
/home/zion/ZION/ai/mining/pool_stratum_bridge.py:403:                header_bytes = secrets.token_bytes(32)
/home/zion/ZION/docs/CORE/SECURITY_WHITELIST.md:160:3. **Container Secrets**: No secrets management system implemented
/home/zion/ZION/docs/CORE/SECURITY_WHITELIST.md:202:3. **Implement Secrets Management**: For sensitive configuration data
/home/zion/ZION/docs/CORE/SECURITY_WHITELIST.md:216:2. **Secrets Management**: Implement Docker secrets or external key management
/home/zion/ZION/docs/CORE/SECURITY_WHITELIST.md:236:| Container Secrets | MEDIUM | MEDIUM | MEDIUM | Secrets management |
/home/zion/ZION/docs/COSMIC_MAP/COSMIC_MAP/COSMIC_MAP_COMPLETE.md:104:**From Secrets of Amenti**:
/home/zion/ZION/docs/COSMIC_MAP/COSMIC_MAP/COSMIC_MAP_COMPLETE.md:183:**From Secrets of Amenti** (Ashayana Deane):
/home/zion/ZION/docs/COSMIC_MAP/COSMIC_MAP/COSMIC_MAP_COMPLETE.md:300:**12-Point Tree of Life** template (Secrets of Amenti):
/home/zion/ZION/docs/COSMIC_MAP/COSMIC_MAP/INDEX.md:422:## 💎 EASTER EGGS & HIDDEN SECRETS
/home/zion/ZION/docs/COSMIC_MAP/COSMIC_MAP/PART_5_GENETIKA.md:205:- Bhasin, Manoj et al. (2013). "Relaxation Response Induces Temporal Transcriptome Changes in Energy Metabolism, Insulin Secretion and Inflammatory Pathways". *PLoS ONE* 8(5).
/home/zion/ZION/docs/COSMIC_MAP/COSMIC_MAP/PART_7_PROTOKOLY.md:119:- **Mantra-based** technika (secret personal mantra)
/home/zion/ZION/docs/COSMIC_MAP/INDEX.md:420:## 💎 EASTER EGGS & HIDDEN SECRETS
/home/zion/ZION/docs/runtime/20250923T/Z3_ROLLOUT_AND_WALLET_BACKUP.md:33:## Set Addresses in Runtime (no secrets in git)
/home/zion/ZION/docs/COSMIC_MAP_COMPLETE.md:104:**From Secrets of Amenti**:
/home/zion/ZION/docs/COSMIC_MAP_COMPLETE.md:183:**From Secrets of Amenti** (Ashayana Deane):
/home/zion/ZION/docs/COSMIC_MAP_COMPLETE.md:300:**12-Point Tree of Life** template (Secrets of Amenti):
/home/zion/ZION/docs/MULTI_CHAIN_FUNCTIONAL_DEPLOYMENT_PLAN_2025-09-30.md:241:        const sourceKeypair = Keypair.fromSecret(zionTx.sourceSecret);
/home/zion/ZION/docs/MULTI_CHAIN_FUNCTIONAL_DEPLOYMENT_PLAN_2025-09-30.md:375:JWT_SECRET=your-production-jwt-secret
/home/zion/ZION/docs/roadmaps/archive/ZION_2.8.2_UNIFIED_ROADMAP.md:263:If secret revealed within 24h: transfer completes
/home/zion/ZION/docs/roadmaps/archive/ZION_2.8.2_UNIFIED_ROADMAP.md:268:- HTLC on ZION: lock 1 ZION, reveal secret within 24h
/home/zion/ZION/docs/roadmaps/archive/ZION_2.8.2_UNIFIED_ROADMAP.md:277:- `POST /warp/stellar/confirm` - reveal secret, finalize
/home/zion/ZION/docs/SACRED_TRINITY/26_SAINT_GERMAIN.md:133:- Secret: Was METAPHOR for spiritual transformation
/home/zion/ZION/docs/SACRED_TRINITY/26_SAINT_GERMAIN.md:269:- Recipe: Secret (lost or never revealed)
/home/zion/ZION/docs/SACRED_TRINITY/29_EL_MORYA.md:303:> *But here is secret:  
/home/zion/ZION/docs/SACRED_TRINITY/45_SRI_KALKI_AVATAR.md:1094:2. **"The Four Sacred Secrets"** by Preethaji (2021)
/home/zion/ZION/docs/SACRED_TRINITY/38_PANNA_MARIA.md:411:- Seers receive messages (secrets about future)
/home/zion/ZION/docs/SACRED_TRINITY/38_PANNA_MARIA.md:631:- *The Secret of the Rosary* by Louis de Montfort
/home/zion/ZION/docs/SACRED_TRINITY/23_KING_ARTHUR.md:269:1. **Transparent Governance** (no secret affairs, all votes public)
/home/zion/ZION/docs/SACRED_TRINITY/23_KING_ARTHUR.md:661:> *But here's the secret they never tell you:  
/home/zion/ZION/docs/SACRED_TRINITY/40_ELIZABET.md:273:   - Odhalení skrytých path a secrets
/home/zion/ZION/docs/SACRED_TRINITY/37_MAHATMA_GANDHI.md:464:> *But here's secret:  
/home/zion/ZION/docs/SACRED_TRINITY/18_MERIAM_ROSE.md:44:- ✅ Chief disciple (Jesus taught her secret wisdom)
/home/zion/ZION/docs/SACRED_TRINITY/36_ALBERT_EINSTEIN.md:337:  ❌ Trust impossible (spies, secrets)
/home/zion/ZION/docs/SACRED_TRINITY/README.md:966:### The Secret Teaching
/home/zion/ZION/docs/SACRED_TRINITY/31_PAUL_THE_VENETIAN.md:197:**Paul's Secret Teaching (Advanced):**
/home/zion/ZION/docs/SACRED_TRINITY/16_RADHA_BELOVED.md:170:> *"निगूढा - Nigūḍhā"* - **She who is secret**  
/home/zion/ZION/docs/SACRED_TRINITY/16_RADHA_BELOVED.md:286:## 🔑 The Secret Teaching
/home/zion/ZION/docs/SACRED_TRINITY/28_SANAT_KUMARA.md:148:## 🧘 The Initiation of the Secret of the Heart
/home/zion/ZION/docs/SACRED_TRINITY/28_SANAT_KUMARA.md:152:Most spiritual paths focus on chakras, kundalini, light body. **Sanat Kumara teaches the SECRET OF THE HEART.**
/home/zion/ZION/docs/SACRED_TRINITY/24_MAHAVATAR_BABAJI.md:135:2. **Breathe specific pattern** (taught only through initiation, kept secret)
/home/zion/ZION/docs/SACRED_TRINITY/24_MAHAVATAR_BABAJI.md:141:**Why Secret?**
/home/zion/ZION/docs/GOLDEN_EGG_GAME/THREE_MASTER_KEYS.md:660:**CLUE TYPE 4: The 108th Clue** (The Secret Final Clue)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/SACRED_LIBRARY_README.md:32:6. 🔮 **Secrets of Amenti** (5,899 lines)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/SACRED_LIBRARY_README.md:51:## The Ultimate Secret
/home/zion/ZION/docs/GOLDEN_EGG_GAME/EKAM_SACRED_ARCHITECTURE.md:361:  → Secret chamber opens
/home/zion/ZION/docs/GOLDEN_EGG_GAME/EKAM_SACRED_ARCHITECTURE.md:845:### The Acoustic Resonance Secret
/home/zion/ZION/docs/GOLDEN_EGG_GAME/GAME_DESIGN_GOLDEN_EGG.md:50:- **Hidden secrets** (caves, shrines, easter eggs, library scrolls)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/GAME_DESIGN_GOLDEN_EGG.md:310:  - Enter astral plane (secret areas)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/GAME_DESIGN_GOLDEN_EGG.md:861:**Ending 4: ENLIGHTENMENT (Secret True Ending)**
/home/zion/ZION/docs/GOLDEN_EGG_GAME/GAME_DESIGN_GOLDEN_EGG.md:882:- Secret boss fights (7 Ray Chohans at full power)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/GAME_DESIGN_GOLDEN_EGG.md:951:  - 1000+ ZION = Bonus avatar (Satoshi Nakamoto - secret 40th avatar!)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/GAME_DESIGN_GOLDEN_EGG.md:1152:- All 4 endings (+ secret enlightenment ending)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/GAME_DESIGN_GOLDEN_EGG.md:1405:**Secret 40th (Unlockable):**
/home/zion/ZION/docs/GOLDEN_EGG_GAME/SACRED_LIBRARY_COMPLETE.md:392:### 6. 🔮 **Secrets of Amenti** (Tajemství Amenti)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/SACRED_LIBRARY_COMPLETE.md:498:- Control through religions & secret societies
/home/zion/ZION/docs/GOLDEN_EGG_GAME/SACRED_LIBRARY_COMPLETE.md:583:SECRETS OF AMENTI → Detailed Timeline (What really happened)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/SACRED_LIBRARY_COMPLETE.md:720:6. **SECRETS OF AMENTI** (advanced)
/home/zion/ZION/docs/GOLDEN_EGG_GAME/SACRED_LIBRARY_COMPLETE.md:792:## 📜 The Library's Secret
/home/zion/ZION/docs/ZION_BOOTSTRAP_SUCCESS_2025-09-27.md:258:- ✅ **Plaintext secrets** removed from config files  
/home/zion/ZION/docs/SACRED_KNOWLEDGE/LEVEL_2_ATLANTIS.md:99:- Knowledge became SECRET (instead of free)
/home/zion/ZION/docs/SACRED_KNOWLEDGE/LEVEL_2_ATLANTIS.md:187:### The Secret Beneath Pyramid
/home/zion/ZION/docs/SACRED_KNOWLEDGE/LEVEL_2_ATLANTIS.md:223:**"Don't reveal my secrets to man from North or South, or my curse will reach you."**
/home/zion/ZION/docs/SACRED_KNOWLEDGE/LEVEL_2_ATLANTIS.md:238:4. **Secrets** - Knowledge locked in temples → Code closed-source
/home/zion/ZION/docs/SACRED_KNOWLEDGE/LEVEL_2_ATLANTIS.md:247:| Knowledge secret | Closed code | Open-source + education |
/home/zion/ZION/docs/runbooks/SECRETS_ROTATION.md:1:# Secrets Rotation Guide
/home/zion/ZION/docs/runbooks/SECRETS_ROTATION.md:9:- Generate high-entropy secrets
/home/zion/ZION/docs/runbooks/SECURE_DEPLOYMENT_CHECKLIST.md:5:## 1) Secrets & Env
/home/zion/ZION/docs/runbooks/SECURE_DEPLOYMENT_CHECKLIST.md:12:- [ ] Store secrets securely (e.g., Vault/Key Vault/1Password/Bitwarden) and restrict repo access.
/home/zion/ZION/docs/runbooks/SECURE_DEPLOYMENT_CHECKLIST.md:13:- [ ] Do NOT commit `.env` or secrets.
/home/zion/ZION/docs/SECURITY_WHITELIST.md:160:3. **Container Secrets**: No secrets management system implemented
/home/zion/ZION/docs/SECURITY_WHITELIST.md:202:3. **Implement Secrets Management**: For sensitive configuration data
/home/zion/ZION/docs/SECURITY_WHITELIST.md:216:2. **Secrets Management**: Implement Docker secrets or external key management
/home/zion/ZION/docs/SECURITY_WHITELIST.md:236:| Container Secrets | MEDIUM | MEDIUM | MEDIUM | Secrets management |
/home/zion/ZION/docs/WHITEPAPER_2025/11_COMPETITIVE_ANALYSIS.md:18:  - 50+ connected chains (Osmosis, Juno, Secret Network, etc.)
/home/zion/ZION/docs/WHITEPAPER_2025/11_COMPETITIVE_ANALYSIS.md:41:    - Cosmos: Transparent (Secret Network is exception)
/home/zion/ZION/docs/WHITEPAPER_2025/02_TECHNICAL_ARCHITECTURE.md:222:- Blinding_Factor je random secret
/home/zion/ZION/docs/WHITEPAPER_2025/02_TECHNICAL_ARCHITECTURE.md:613:3. Alice reveals secret S (unlocks BTC)
/home/zion/ZION/docs/WHITEPAPER_2025/10_SECURITY_COMPLIANCE.md:215:    ✓ Error handling (fail securely, no secret leakage)
/home/zion/ZION/docs/WHITEPAPER_2025/10_SECURITY_COMPLIANCE.md:606:    ☐ No hardcoded secrets (API keys, passwords)
/home/zion/ZION/docs/2.8.2/ZION_2.8.2_UNIFIED_ROADMAP.md:263:If secret revealed within 24h: transfer completes
/home/zion/ZION/docs/2.8.2/ZION_2.8.2_UNIFIED_ROADMAP.md:268:- HTLC on ZION: lock 1 ZION, reveal secret within 24h
/home/zion/ZION/docs/2.8.2/ZION_2.8.2_UNIFIED_ROADMAP.md:277:- `POST /warp/stellar/confirm` - reveal secret, finalize
/home/zion/ZION/docs/2.8.2/ZION_COSMIC_MAP_V2_COMPLETE.md:787:        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
/home/zion/ZION/docs/2.8.2/ZQAL_SDK_NEXT_STEPS_ROADMAP.md:335:  let secret = generate_secret();
/home/zion/ZION/docs/2.8.2/ZQAL_SDK_NEXT_STEPS_ROADMAP.md:336:  let hash = hash_secret(secret);
/home/zion/ZION/docs/2.8.2/ZQAL_SDK_NEXT_STEPS_ROADMAP.md:342:  // Reveal secret
/home/zion/ZION/docs/2.8.2/ZQAL_SDK_NEXT_STEPS_ROADMAP.md:343:  return reveal_secret(secret);
/home/zion/ZION/docs/2.7.5/ZION_DOCS_COMPREHENSIVE_ANALYSIS.md:115:  Step 1: "Build everything in secret"
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:173:**Status:** ✅ ACTUALLY OK (using ecdsa library which uses secrets)
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:178:    sk = SigningKey.generate(curve=SECP256k1)  # ✅ Uses secrets module internally
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:182:- ecdsa library používá `secrets` module
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:183:- `secrets` je cryptographically secure (uses os.urandom)
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:454:- ✅ Uses cryptographically secure random (secrets module)
/home/zion/ZION/docs/2.7.5/ON_THE_STAR_EPIC_GAMING.md:526:  Reward: +100,000 XP, Secret Title
/home/zion/ZION/docs/2.7.5/GRAND_PRIZE_OASIS_EVENT.md:86:└─ Decode Maitreya's secret message in genesis block
/home/zion/ZION/docs/2.7.5/GRAND_PRIZE_OASIS_EVENT.md:232:### Challenge 5: The Secret Message 📜
/home/zion/ZION/docs/2.7.5/GRAND_PRIZE_OASIS_EVENT.md:234:Decode Maitreya's secret in Genesis Block:
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:44:- [ ] Hardcoded secrets (API keys, passwords)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:66:- [ ] Je key generation cryptographically secure? (secrets module?)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:79:import secrets
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:80:private_key = secrets.token_bytes(32)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:338:#### 3.1 Environment Variables & Secrets ⏰
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:346:- [ ] Žádné hardcoded secrets v kódu
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:349:- [ ] Secrets management strategy (Vault/AWS Secrets)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:350:- [ ] Production secrets rotated regularly?
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:394:- [ ] Secure random number generation (`secrets` module)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:403:import secrets
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:665:- [ ] Hardcoded secrets removal
/home/zion/ZION/docs/2.7.5/PRODUCTION_DEPLOYMENT_CHECKLIST.md:514:  - [ ] No hardcoded secrets
/home/zion/ZION/docs/2.7.5/PRODUCTION_DEPLOYMENT_CHECKLIST.md:516:  - [ ] Secrets manager (Vault/AWS Secrets)
/home/zion/ZION/docs/2.7.5/PLAN_V2.8_UNIFICATION.md:317:import secrets
/home/zion/ZION/docs/2.7.5/PLAN_V2.8_UNIFICATION.md:358:- [ ] No hardcoded secrets
/home/zion/ZION/docs/2.7.5/TEST_RESULTS_2025-10-15.md:1696:- [ ] Secure key splitting (Shamir's Secret Sharing)
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:104:import secrets
/home/zion/ZION/docs/2.7.1/PREMINE_SECURITY.md:110:    entropy = secrets.token_bytes(32)
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:704:# TYTO DATA JSOU TOP SECRET! ❌
/home/zion/ZION/docs/2.8.3/PREPARATION_CHECKLIST.md:215:  - [ ] No hardcoded secrets
/home/zion/ZION/docs/2.8.3/PHASE_1_STATUS_REPORT.md:169:- [ ] Previous commits audited for secrets
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:847:            SECRET_KEY,
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:926:        api_key = secrets.token_urlsafe(32)
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:952:            SECRET_KEY,
/home/zion/ZION/docs/sessions/18_ELIZABETH_OUR_LADY.md:43:## 🌹 Zjevení ve Fatimě (1917): The Three Secrets
/home/zion/ZION/docs/sessions/18_ELIZABETH_OUR_LADY.md:296:- **3 Secrets** revealed (past, present, future wisdom)
/home/zion/ZION/books/Tajemství amenti.txt:4960:využívat nejmodern ější "top secret" destabiliza ční válečnou techniku proti cíl ům od 12.12.1994 
/home/zion/ZION/books/SmaragdoveDesky.txt:2748:secretis naturae et occultis rerum causis quem transtulit Apollonius
/home/zion/ZION/books/SmaragdoveDesky.txt:3483:secretissimo  Philosophorum  opere  Chemico.  A  ovšem  proslulý
/home/zion/ZION/books/SmaragdoveDesky.txt:3510:vrai Sel secret des Philosophes et de l’Esprit Universel du Monde).
/home/zion/ZION/books/SmaragdoveDesky.txt:5836:- Hall M. P.: The secret teachings of all ages, 20. vyd. Los Angeles 
/home/zion/ZION/wallet/__init__.py:10:import secrets
/home/zion/ZION/wallet/__init__.py:69:        self.salt = secrets.token_bytes(16)  # Salt for key derivation
/home/zion/ZION/wallet/__init__.py:192:        random_bytes = secrets.token_bytes(32)
/home/zion/ZION/api/wallet_endpoints.py:15:import secrets
/home/zion/ZION/api/explorer_endpoints.py:12:import secrets
/home/zion/ZION/api/explorer_endpoints.py:81:                    'input_data': '0x' if random.random() > 0.3 else '0x' + secrets.token_hex(32)
/home/zion/ZION/backups/ssh_backup_20251021_215309/new_zion_blockchain.py:10:import secrets
/home/zion/ZION/backups/ssh_backup_20251021_215309/new_zion_blockchain.py:356:            'id': f"tx_{len(self.pending_transactions)}_{int(time.time())}_{secrets.token_hex(4)}",
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:12:import secrets
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1738:            "blob": "0606" + secrets.token_hex(73),  # 76 bytes total
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1742:            "seed_hash": secrets.token_hex(32),
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1743:            "next_seed_hash": secrets.token_hex(32)  # For future block
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1769:        block_header = secrets.token_hex(80)  # 80 bytes block header
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1772:        elements_seed = secrets.token_hex(32)
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1809:        block_header = secrets.token_hex(80)
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1946:            extranonce1 = secrets.token_hex(4)  # 8 hex chars
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:2259:        header_hash = secrets.token_hex(32)
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:2260:        mix_hash = secrets.token_hex(16)
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:2306:        block_header = secrets.token_hex(80)
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_rpc_server.py:10:import secrets
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_rpc_server.py:48:                tok = secrets.token_hex(16)
/home/zion/ZION/src/bridges/zion_path_payments.py:56:        def from_secret(secret): return type('Keypair', (), {'public_key': f'mock_stellar_key_{random.randint(1000,9999)}', 'secret': secret})()
/home/zion/ZION/src/bridges/zion_path_payments.py:58:        def random(): return type('Keypair', (), {'public_key': f'mock_stellar_key_{random.randint(1000,9999)}', 'secret': f'mock_secret_{random.randint(1000,9999)}'})()
/home/zion/ZION/src/bridges/zion_path_payments.py:87:        def sign(self, secret):
/home/zion/ZION/src/bridges/zion_path_payments.py:530:            transaction_builder.sign("mock_secret")  # Would use real key management
/home/zion/ZION/src/bridges/stellar_bridge_humanitarian.py:57:        def from_secret(secret): return type('Keypair', (), {'public_key': f'mock_stellar_key_{random.randint(1000,9999)}', 'secret': secret})()
/home/zion/ZION/src/bridges/stellar_bridge_humanitarian.py:59:        def random(): return type('Keypair', (), {'public_key': f'mock_stellar_key_{random.randint(1000,9999)}', 'secret': f'mock_secret_{random.randint(1000,9999)}'})()
/home/zion/ZION/src/bridges/stellar_bridge_humanitarian.py:83:        def sign(self, secret):
/home/zion/ZION/src/bridges/stellar_bridge_humanitarian.py:594:                transaction_builder.sign(self.bridge_keypair.secret)
/home/zion/ZION/src/bridges/zion_stellar_asset.py:56:        def from_secret(secret): return type('Keypair', (), {'public_key': f'mock_stellar_key_{random.randint(1000,9999)}', 'secret': secret})()
/home/zion/ZION/src/bridges/zion_stellar_asset.py:58:        def random(): return type('Keypair', (), {'public_key': f'mock_stellar_key_{random.randint(1000,9999)}', 'secret': f'mock_secret_{random.randint(1000,9999)}'})()
/home/zion/ZION/src/bridges/zion_stellar_asset.py:85:        def sign(self, secret):
/home/zion/ZION/src/bridges/zion_stellar_asset.py:446:            transaction_builder.sign(self.asset_issuer.secret)
/home/zion/ZION/src/bridges/zion_stellar_asset.py:572:            transaction_builder.sign("mock_secret")  # Mock signature
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:197:                    "webhook_secret": os.getenv("STRIPE_WEBHOOK_SECRET", "whsec_mock_secret"),
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:215:                    "client_secret": os.getenv("PAYPAL_CLIENT_SECRET", "mock_client_secret"),
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:233:                    "webhook_secret": os.getenv("REVOLUT_WEBHOOK_SECRET", "mock_revolut_secret"),
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:344:                    "client_secret": paypal_config.api_config.get("client_secret", "")
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:850:                    webhook_secret = stripe_config.api_config.get("webhook_secret", "")
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:919:                    webhook_secret = revolut_config.api_config.get("webhook_secret", "")
/home/zion/ZION/src/core/new_zion_blockchain.py:10:import secrets
/home/zion/ZION/src/core/new_zion_blockchain.py:410:            'id': f"tx_{len(self.pending_transactions)}_{int(time.time())}_{secrets.token_hex(4)}",
/home/zion/ZION/src/core/zion_universal_pool_v2.py:12:import secrets
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2275:            "blob": "0606" + secrets.token_hex(73),  # 76 bytes total
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2279:            "seed_hash": secrets.token_hex(32),
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2280:            "next_seed_hash": secrets.token_hex(32)  # For future block
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2306:        block_header = secrets.token_hex(80)  # 80 bytes block header
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2309:        elements_seed = secrets.token_hex(32)
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2381:            block_header = secrets.token_hex(80)
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2413:            block_header = secrets.token_hex(80)
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2561:            extranonce1 = secrets.token_hex(4)  # 8 hex chars
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2956:        header_hash = secrets.token_hex(32)
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2957:        mix_hash = secrets.token_hex(16)
/home/zion/ZION/src/core/zion_rpc_server.py:10:import secrets
/home/zion/ZION/src/core/zion_rpc_server.py:65:                tok = secrets.token_hex(16)
/home/zion/ZION/src/core/Dashboard.py:678:import secrets
/home/zion/ZION/src/core/Dashboard.py:682:seed = secrets.token_hex(32)
/home/zion/ZION/docker/README.md:193:5. Use Docker secrets for sensitive data
/home/zion/ZION/docker/README.md:206:    secrets:
/home/zion/ZION/docker/README.md:215:secrets:
/home/zion/ZION/docker/README.md:223:- Use Docker secrets for sensitive data
/home/zion/ZION/.env.production:34:JWT_SECRET=sacred_dharma_liberation_2675_production_key
/home/zion/ZION/build_zion/blake3/.github/workflows/tag.yml:41:          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
/home/zion/ZION/build_zion/blake3/c/README.md:239:position in the output stream to recover its block index. Callers with strong secret keys
/home/zion/ZION/build_zion/blake3/c/README.md:240:aren't affected in practice, but secret offsets are a [design
/home/zion/ZION/build_zion/blake3/src/traits.rs:155:        let key = b"some super secret key bytes fooo";
/home/zion/ZION/build_zion/blake3/src/lib.rs:588:// Don't derive(Debug), because the state may be secret.
/home/zion/ZION/build_zion/blake3/src/lib.rs:1601:// Don't derive(Debug), because the state may be secret.
/home/zion/ZION/build_zion/blake3/src/lib.rs:1672:/// secret keys aren't affected in practice, but secret offsets are a [design
/home/zion/ZION/build_zion/blake3/src/lib.rs:1778:// Don't derive(Debug), because the state may be secret.
/home/zion/ZION/scripts/phase1_security_backup.sh:113:echo -e "${GREEN}[3/6] Auditing git history for secrets...${NC}"
/home/zion/ZION/scripts/phase1_security_backup.sh:120:    "secret"
/home/zion/ZION/scripts/phase1_security_backup.sh:135:    echo "   ACTION REQUIRED: Review and remove secrets"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:28:    "secret"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:143:deployment/secrets/
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:158:# Environment and secrets
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:162:secrets.json
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:163:config/secrets/
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:196:echo "           - Backups are code only, no actual secrets"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:221:- ✅ Scanned for private keys, secrets, API keys
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:223:- ✅ No critical secrets found in codebase
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:242:- ✅ Recommendation: Keep history (no actual secrets)
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:264:- `.env*`, `secrets.json` - Environment secrets
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:271:✅ No API secrets in Git history  
/home/zion/ZION/scripts/mining/pool_working_backup.py:12:import secrets
/home/zion/ZION/scripts/mining/pool_working_backup.py:1737:            "blob": "0606" + secrets.token_hex(73),  # 76 bytes total
/home/zion/ZION/scripts/mining/pool_working_backup.py:1741:            "seed_hash": secrets.token_hex(32),
/home/zion/ZION/scripts/mining/pool_working_backup.py:1742:            "next_seed_hash": secrets.token_hex(32)  # For future block
/home/zion/ZION/scripts/mining/pool_working_backup.py:1768:        block_header = secrets.token_hex(80)  # 80 bytes block header
/home/zion/ZION/scripts/mining/pool_working_backup.py:1771:        elements_seed = secrets.token_hex(32)
/home/zion/ZION/scripts/mining/pool_working_backup.py:1808:        block_header = secrets.token_hex(80)
/home/zion/ZION/scripts/mining/pool_working_backup.py:1945:            extranonce1 = secrets.token_hex(4)  # 8 hex chars
/home/zion/ZION/scripts/mining/pool_working_backup.py:2242:        header_hash = secrets.token_hex(32)
/home/zion/ZION/scripts/mining/pool_working_backup.py:2243:        mix_hash = secrets.token_hex(16)
/home/zion/ZION/frontend/app/halls-of-amenti/page.tsx:29:      title: "THE SECRET OF AMENTI",
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:29:  secret_hash: string;
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:63:  const [claimSecret, setClaimSecret] = useState('');
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:201:    if (!claimSwapId || !claimSecret) {
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:202:      showNotification('error', 'Please provide swap ID and secret');
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:212:          secret: claimSecret
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:219:        setClaimSecret('');
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:496:                value={claimSecret}
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:497:                onChange={(e) => setClaimSecret(e.target.value)}
/home/zion/ZION/frontend/app/components/AtomicSwapWidget.tsx:498:                placeholder="Secret (hex)"
/home/zion/ZION/frontend/app/wallet/page.tsx:41:        secret: any;
/home/zion/ZION/frontend/app/api/auth/login/route.ts:6:// JWT Secret (in production, use environment variable)
/home/zion/ZION/frontend/app/api/auth/login/route.ts:7:const JWT_SECRET = process.env.JWT_SECRET || 'zion-warp-bridge-secret-key';
/home/zion/ZION/frontend/app/api/auth/login/route.ts:86:      JWT_SECRET,
/home/zion/ZION/frontend/app/api/auth/register/route.ts:6:// JWT Secret (in production, use environment variable)
/home/zion/ZION/frontend/app/api/auth/register/route.ts:7:const JWT_SECRET = process.env.JWT_SECRET || 'zion-warp-bridge-secret-key';
/home/zion/ZION/frontend/app/api/auth/register/route.ts:89:      JWT_SECRET,
/home/zion/ZION/frontend/app/api/auth/[...nextauth]/route.ts:8:      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:6:// JWT Secret (in production, use environment variable)
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:7:const JWT_SECRET = process.env.JWT_SECRET || 'zion-warp-bridge-secret-key';
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:124:      JWT_SECRET,
/home/zion/ZION/frontend/GOOGLE_OAUTH_SETUP.md:30:NEXTAUTH_SECRET=your-super-secret-key-here-generate-random-string
/home/zion/ZION/frontend/GOOGLE_OAUTH_SETUP.md:34:GOOGLE_CLIENT_SECRET=your-google-client-secret
/home/zion/ZION/frontend/GOOGLE_OAUTH_SETUP.md:37:## Step 3: Generate NEXTAUTH_SECRET
/home/zion/ZION/frontend/GOOGLE_OAUTH_SETUP.md:39:Run this command to generate a secure secret:
/home/zion/ZION/frontend/GOOGLE_OAUTH_SETUP.md:73:   - Check that `NEXTAUTH_SECRET` is set
/home/zion/ZION/frontend/GOOGLE_OAUTH_SETUP.md:90:3. Use a secure `NEXTAUTH_SECRET`
/home/zion/ZION/frontend/GOOGLE_OAUTH_SETUP.md:97:- Regularly rotate your `NEXTAUTH_SECRET`
/home/zion/ZION/docker-compose.sacred-production.yml:105:      - JWT_SECRET=${JWT_SECRET:-sacred_dharma_liberation_2675}
/home/zion/ZION/zion/ai/quantum_ai.py:22:import secrets
/home/zion/ZION/zion/ai/quantum_ai.py:842:                key_data = secrets.token_bytes(security_level // 8)
/home/zion/ZION/zion/ai/quantum_ai.py:920:            return secrets.token_bytes(security_level // 8)
/home/zion/ZION/zion/ai/quantum_ai.py:973:            return secrets.token_bytes(security_level // 8)
/home/zion/ZION/zion/ai/quantum_ai.py:994:                public_key = secrets.token_bytes(algo_config['key_size']['public'])
/home/zion/ZION/zion/ai/quantum_ai.py:995:                private_key = secrets.token_bytes(algo_config['key_size']['private'])
/home/zion/ZION/zion/ai/quantum_ai.py:1021:            # Generate secret key (small coefficients)
/home/zion/ZION/zion/ai/quantum_ai.py:1025:            public_key = secrets.token_bytes(config['key_size']['public'])
/home/zion/ZION/zion/ai/quantum_ai.py:1035:                'public_key': secrets.token_bytes(800),
/home/zion/ZION/zion/ai/quantum_ai.py:1036:                'private_key': secrets.token_bytes(1632)
/home/zion/ZION/zion/ai/quantum_ai.py:1046:            private_key = secrets.token_bytes(private_key_size)
/home/zion/ZION/zion/ai/quantum_ai.py:1047:            public_key = secrets.token_bytes(public_key_size)
/home/zion/ZION/zion/ai/quantum_ai.py:1057:                'public_key': secrets.token_bytes(1312),
/home/zion/ZION/zion/ai/quantum_ai.py:1058:                'private_key': secrets.token_bytes(2528)
/home/zion/ZION/zion/ai/quantum_ai.py:1073:            private_key = secrets.token_bytes(private_key_size)
/home/zion/ZION/zion/ai/quantum_ai.py:1074:            public_key = secrets.token_bytes(public_key_size)
/home/zion/ZION/zion/ai/quantum_ai.py:1084:                'public_key': secrets.token_bytes(897),
/home/zion/ZION/zion/ai/quantum_ai.py:1085:                'private_key': secrets.token_bytes(1281)
/home/zion/ZION/zion/pool/mining_pool.py:23:import secrets
/home/zion/ZION/zion/pool/mining_pool.py:399:            extra_nonce1 = secrets.token_hex(4)
/home/zion/ZION/zion/pool/mining_pool.py:719:        return hashlib.sha256(f"{time.time()}{secrets.randbits(64)}".encode()).hexdigest()
/home/zion/ZION/zion/pool/mining_pool.py:723:        return hashlib.sha256(f"job_{time.time()}_{secrets.randbits(32)}".encode()).hexdigest()[:16]
/home/zion/ZION/zion/wallet/wallet_core.py:8:import secrets
/home/zion/ZION/zion/wallet/wallet_core.py:93:            salt = secrets.token_bytes(16)
/home/zion/ZION/zion/wallet/wallet_core.py:106:        iv = secrets.token_bytes(12)
/home/zion/ZION/zion/wallet/wallet_core.py:172:            entropy = secrets.token_bytes(32)
/home/zion/ZION/zion/wallet/wallet_core.py:358:                'nonce': secrets.randbits(64)
/home/zion/ZION/zion/mining/zion-test-pool.py:12:import secrets
/home/zion/ZION/zion/mining/zion-test-pool.py:34:        prevhash = secrets.token_hex(32)
/home/zion/ZION/zion/mining/zion-test-pool.py:35:        coinb1 = secrets.token_hex(20)
/home/zion/ZION/zion/mining/zion-test-pool.py:36:        coinb2 = secrets.token_hex(20)
/home/zion/ZION/zion/mining/zion-test-pool.py:98:            extranonce1 = secrets.token_hex(4)
/home/zion/ZION/zion/mining/zion-test-pool.py:155:                accepted = secrets.randbelow(10) < 9
/home/zion/ZION/mining/zion_ai_unified_miner.py:33:import secrets
/home/zion/ZION/mining/algorithms.py:15:import secrets
/home/zion/ZION/data/pool_working_backup.py:12:import secrets
/home/zion/ZION/data/pool_working_backup.py:1737:            "blob": "0606" + secrets.token_hex(73),  # 76 bytes total
/home/zion/ZION/data/pool_working_backup.py:1741:            "seed_hash": secrets.token_hex(32),
/home/zion/ZION/data/pool_working_backup.py:1742:            "next_seed_hash": secrets.token_hex(32)  # For future block
/home/zion/ZION/data/pool_working_backup.py:1768:        block_header = secrets.token_hex(80)  # 80 bytes block header
/home/zion/ZION/data/pool_working_backup.py:1771:        elements_seed = secrets.token_hex(32)
/home/zion/ZION/data/pool_working_backup.py:1808:        block_header = secrets.token_hex(80)
/home/zion/ZION/data/pool_working_backup.py:1945:            extranonce1 = secrets.token_hex(4)  # 8 hex chars
/home/zion/ZION/data/pool_working_backup.py:2242:        header_hash = secrets.token_hex(32)
/home/zion/ZION/data/pool_working_backup.py:2243:        mix_hash = secrets.token_hex(16)
/home/zion/ZION/tests/test_srbminer_integration.py:50:            password="x"
/home/zion/ZION/tests/test_integration.py:49:        self.test_wallet_password = 'test_password_2675'
/home/zion/ZION/docker-compose.production.yml:175:      - GF_SECURITY_ADMIN_PASSWORD=zion_admin_2675
/home/zion/ZION/docker-compose.production.yml:209:      - POSTGRES_PASSWORD=zion_db_2675
/home/zion/ZION/k8s/secret.yaml:11:  DB_PASSWORD: "emlib25fcGFzc3dvcmQ="  # zion_password
/home/zion/ZION/k8s/secret.yaml:12:  REDIS_PASSWORD: "emlib25fcmVkaXM="     # zion_redis
/home/zion/ZION/powerpool/powerpool/stratum_server.py:36:password_arg_parser = ThrowingArgumentParser()
/home/zion/ZION/powerpool/powerpool/stratum_server.py:37:password_arg_parser.add_argument('-d', '--diff', type=float)
/home/zion/ZION/powerpool/powerpool/stratum_server.py:38:password_arg_parser.add_argument('--max-diff', type=float)
/home/zion/ZION/powerpool/powerpool/stratum_server.py:39:password_arg_parser.add_argument('--min-diff', type=float)
/home/zion/ZION/powerpool/powerpool/stratum_server.py:40:password_arg_parser.add_argument('--start-diff', type=float)
/home/zion/ZION/powerpool/powerpool/stratum_server.py:745:                password = data['params'][1]
/home/zion/ZION/powerpool/powerpool/stratum_server.py:775:                password = ""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/uvicorn/main.py:462:        ssl_keyfile_password=ssl_keyfile_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/uvicorn/main.py:515:    ssl_keyfile_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/uvicorn/main.py:568:        ssl_keyfile_password=ssl_keyfile_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/uvicorn/config.py:115:    get_password = (lambda: password) if password else None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/uvicorn/config.py:222:        ssl_keyfile_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/uvicorn/config.py:267:        self.ssl_keyfile_password = ssl_keyfile_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/uvicorn/config.py:408:                password=self.ssl_keyfile_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:147:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:302:            password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/oauth2.py:473:            password=cast(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/http.py:215:        username, separator, password = data.partition(":")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/http.py:218:        return HTTPBasicCredentials(username=username, password=password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/openapi/models.py:395:    password: Optional[OAuthFlowPassword] = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:53:        cls, private_pem: bytes, password: bytes | None = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:55:        key = serialization.load_pem_private_key(private_pem, password=password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/cryptography.py:58:    def to_pem(self, password: bytes | None = None) -> bytes:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/base.py:83:        cls, private_pem: bytes, password: bytes | None = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/dnssecalgs/base.py:88:    def to_pem(self, password: bytes | None = None) -> bytes:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_parse.py:115:        password: Union[str, None] = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_parse.py:119:        username, have_password, password = userinfo.partition(":")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_parse.py:121:            password = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_parse.py:185:            password = QUOTER(password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:164:            username, password, host, port = split_netloc(netloc)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:166:            username = password = port = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:185:            cache["raw_password"] = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:188:            raw_password = REQUOTER(password) if password else password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:191:            cache["raw_password"] = raw_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:393:        password: Union[str, None] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:447:            user, password, _host, port = split_netloc(authority)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:578:        c["raw_user"], c["raw_password"], c["raw_host"], c["explicit_port"] = split_loc
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:728:        if (raw_password := self.raw_password) is None:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:1081:            password = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:1084:            password = self.raw_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:1105:            password = QUOTER(password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/yarl/_url.py:1467:        password = human_quote(self.password, "#/:?@[]")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:108:            password = v[0]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:136:        password = b("xxx")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:143:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:487:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:505:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:523:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:536:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:554:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:570:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:596:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:620:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_KDF.py:642:            x = bcrypt(password, cost, salt=_bcrypt_decode(salt64))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:57:def PBKDF1(password, salt, dkLen, count=1000, hashAlgo=None):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:88:    password = tobytes(password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:100:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:148:    password = tobytes(password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:351:def scrypt(password, salt, key_len, N, r, p, num_keys=1):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:399:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:499:def bcrypt(password, cost, salt=None):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:525:    password = tobytes(password, "utf-8")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:527:    if password.find(bchr(0)[0]) != -1:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.py:531:        password += b"\x00"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.pyi:10:def PBKDF1(password: str, salt: bytes, dkLen: int, count: Optional[int]=1000, hashAlgo: Optional[ModuleType]=None) -> bytes: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.pyi:11:def PBKDF2(password: str, salt: bytes, dkLen: Optional[int]=16, count: Optional[int]=1000, prf: Optional[RNG]=None, hmac_hash_module: Optional[ModuleType]=None) -> bytes: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.pyi:25:def scrypt(password: str, salt: str, key_len: int, N: int, r: int, p: int, num_keys: Optional[int]=1) -> Union[bytes, Tuple[bytes, ...]]: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/Protocol/KDF.pyi:29:def bcrypt(password: Union[bytes, str], cost: int, salt: Optional[bytes]=None) -> bytes: ...
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/util/ssl_.py:386:    key_password: str | None = ...,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/util/ssl_.py:404:    key_password: str | None = ...,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/util/ssl_.py:421:    key_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/emscripten/connection.py:203:        key_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/emscripten/connection.py:219:        self.key_password = key_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/emscripten/connection.py:242:        key_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/socks.py:116:                proxy_password=self._socks_options["password"],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/socks.py:188:        password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/socks.py:198:                username, password = split
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/pyopenssl.py:484:        password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/contrib/pyopenssl.py:490:                    password = password.encode("utf-8")  # type: ignore[assignment]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connection.py:641:        key_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connection.py:656:        self.key_password = key_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connection.py:682:        key_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connection.py:711:        self.key_password = key_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connection.py:801:                key_password=self.key_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connection.py:878:            key_password=None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connection.py:973:        key_password=key_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/_base_connection.py:164:            key_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connectionpool.py:994:        key_password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connectionpool.py:1020:        self.key_password = key_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/urllib3/connectionpool.py:1073:            key_password=self.key_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/truststore/_api.py:29:_PasswordType: typing.TypeAlias = str | bytes | typing.Callable[[], str | bytes]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/truststore/_api.py:160:        password: _PasswordType | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/truststore/_api.py:163:            certfile=certfile, keyfile=keyfile, password=password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/util/ssl_.py:375:    key_password=None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/_securetransport/low_level.py:231:    password = base64.b16encode(random_bytes[8:])  # Must be valid UTF-8
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/securetransport.py:872:    def load_cert_chain(self, certfile, keyfile=None, password=None):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/socks.py:102:                proxy_password=self._socks_options["password"],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/socks.py:174:        password=None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/socks.py:184:                username, password = split
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/pyopenssl.py:473:    def load_cert_chain(self, certfile, keyfile=None, password=None):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/pyopenssl.py:477:                password = password.encode("utf-8")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connection.py:308:        key_password=None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connection.py:320:        self.key_password = key_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connection.py:333:        key_password=None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connection.py:354:        self.key_password = key_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connection.py:423:            key_password=self.key_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connectionpool.py:948:        key_password=None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connectionpool.py:975:        self.key_password = key_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connectionpool.py:991:                key_password=self.key_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/urllib3/connectionpool.py:1047:            key_password=self.key_password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:59:        password: bool = False,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:71:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:85:        password: bool = False,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:102:        password: bool = False,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:117:        password: bool = False,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:143:            password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:211:        return console.input(prompt, password=password, stream=stream)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:292:            value = self.get_input(self.console, prompt, self.password, stream=stream)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:380:            password = Prompt.ask(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:382:                password=True,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:384:            if len(password) >= 5:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py:387:        print(f"password={password!r}")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/rich/console.py:2145:        password: bool = False,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/sessions.py:322:            username, password = get_auth_from_url(new_proxies[scheme])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/sessions.py:324:            username, password = None, None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/adapters.py:281:            username, password = get_auth_from_url(proxy)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/adapters.py:285:                password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/adapters.py:606:        username, password = get_auth_from_url(proxy)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/auth.py:53:        password = str(password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/auth.py:60:        password = password.encode("latin1")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/auth.py:81:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/auth.py:87:                self.password == getattr(other, "password", None),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/auth.py:112:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/requests/auth.py:309:                self.password == getattr(other, "password", None),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/distlib/util.py:816:    username = password = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/distlib/util.py:822:            username, password = prefix.split(':', 1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/distlib/util.py:826:        password = unquote(password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/utils/misc.py:462:    netloc, (user, password) = split_auth_from_netloc(netloc)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/utils/misc.py:467:        password = ""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/utils/misc.py:470:        password = ":****"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:416:        username, secret_password = user_pass
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:417:        password: HiddenText | None = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py:419:            password = hide_value(secret_password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:94:            password = self.keyring.get_password(url, username)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:121:            password = self._get_password(url, username)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:234:        self.passwords: dict[str, AuthInfo] = {}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:344:        url, netloc, url_user_password = split_auth_netloc_from_url(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:349:        username, password = url_user_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:360:                index_url, _, index_url_user_password = index_info
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:365:            username, password = index_url_user_password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:407:        username, password = self._get_new_credentials(original_url)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:418:                username, password = un, pw
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:426:            password = password or ""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:429:            self.passwords[netloc] = (username, password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:442:        url, username, password = self._get_url_and_credentials(req.url)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:465:        password = ask_password("Password: ")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:484:        username, password = None, None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:488:            username, password = self._get_new_credentials(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:503:            username, password, save = self._prompt_for_password(parsed.netloc)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:508:            self.passwords[parsed.netloc] = (username, password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/network/auth.py:515:                    password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/setuptools/package_index.py:804:                        creds = " --username=%s --password=%s" % (user, pw)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/setuptools/package_index.py:936:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/urls.py:105:            password = _unquote_user(parts.password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/urls.py:160:            password = quote(parts.password, safe="%!$&'()*+,;=")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/security.py:28:    password_bytes = password.encode()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/security.py:44:                password_bytes, salt=salt_bytes, n=n, r=r, p=p, maxmem=maxmem
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/security.py:74:    password: str, method: str = "scrypt", salt_length: int = 16
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/werkzeug/datastructures/auth.py:107:                username, _, password = base64.b64decode(rest).decode().partition(":")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/prometheus_client/exposition.py:538:        password: Optional[str] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/socketio/redis_manager.py:40:        kwargs['password'] = parsed_url.password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/verifpal.py:42:            (words(('password',), suffix=r'\b'), Keyword.Constant),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/networks.py:267:        password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/networks.py:293:                password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/networks.py:448:        password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/networks.py:479:                password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/networks.py:193:        password: Optional[str] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/networks.py:205:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/networks.py:220:        password: Optional[str] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/networks.py:231:            password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/networks.py:300:            password=parts['password'],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/networks.py:462:                password=parts['password'],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/v1/networks.py:476:                password=parts['password'],
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1814:    user = User(username='scolvin', password='password1')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1817:    #> username='scolvin' password=SecretStr('**********')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1837:        @field_serializer('password', 'password_bytes', when_used='json')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1841:    model = Model(password='IAmSensitive', password_bytes=b'IAmSensitiveBytes')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1843:    #> password=SecretStr('**********') password_bytes=SecretBytes(b'**********')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1882:    user = User(username='scolvin', password=b'password1')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic/types.py:1883:    #> username='scolvin' password=SecretBytes(b'**********')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/sessions.py:322:            username, password = get_auth_from_url(new_proxies[scheme])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/sessions.py:324:            username, password = None, None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/adapters.py:257:            username, password = get_auth_from_url(proxy)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/adapters.py:261:                password=password,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/adapters.py:583:        username, password = get_auth_from_url(proxy)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/auth.py:53:        password = str(password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/auth.py:60:        password = password.encode("latin1")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/auth.py:81:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/auth.py:87:                self.password == getattr(other, "password", None),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/auth.py:112:        self.password = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/requests/auth.py:309:                self.password == getattr(other, "password", None),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/helpers.py:128:        cls, login: str, password: str = "", encoding: str = "latin1"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/helpers.py:164:            username, password = decoded.split(":", 1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/helpers.py:168:        return cls(username, password, encoding=encoding)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/helpers.py:179:        return cls(url.user or "", url.password or "", encoding=encoding)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/helpers.py:258:    login, account, password = auth_from_netrc
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/helpers.py:269:        password = ""
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/aiohttp/client_middleware_digest_auth.py:198:        self._password_bytes: Final[bytes] = password.encode("utf-8")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/headers.py:565:        username, password = user_pass.split(":", 1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/uri.py:41:    password: str | None = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/uri.py:89:    password = parsed.password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/uri.py:106:            password = urllib.parse.quote(password, safe=DELIMS)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/uri.py:132:    password: str | None = None
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/uri.py:172:    password = parsed.password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/uri.py:187:            password = urllib.parse.quote(password, safe=DELIMS)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/legacy/auth.py:22:        username, password = value
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/legacy/auth.py:98:            username, password = parse_authorization_basic(authorization)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/legacy/auth.py:173:                expected_password = credentials_dict[username]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/asyncio/server.py:864:        username, password = credentials
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/asyncio/server.py:928:                expected_password = credentials_dict[username]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/asyncio/server.py:957:            username, password = parse_authorization_basic(authorization)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/sync/server.py:650:        username, password = credentials
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/sync/server.py:714:                expected_password = credentials_dict[username]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/websockets/sync/server.py:743:            username, password = parse_authorization_basic(authorization)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/starlette/datastructures.py:123:            password = kwargs.pop("password", self.password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/starlette/datastructures.py:174:            url = str(self.replace(password="********"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic_core/_pydantic_core.pyi:585:        password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pydantic_core/_pydantic_core.pyi:624:        password: str | None = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/events.py:853:                cparams["password"] = "some_password"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:157:        password: Optional[str] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:302:        password: Optional[str] = None,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:339:            kw["password"] = password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:621:    def __to_string__(self, hide_password: bool = True) -> str:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:628:        return self.render_as_string(hide_password=hide_password)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:630:    def render_as_string(self, hide_password: bool = True) -> str:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:647:                    else quote(str(self.password), safe=" +")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:696:            and self.password == other.password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/url.py:909:            components["password"] = unquote(components["password"])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/engine/create.py:143:    ``dialect[+driver]://user:password@host/dbname[?key=value..]``, where
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/oracledb.py:271:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/oracledb.py:313:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/oracledb.py:345:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/provision.py:193:    return url.set(username=ident, password="xe")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/cx_oracle.py:198:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/cx_oracle.py:242:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/oracle/cx_oracle.py:1432:            opts["password"] = url.password
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mssql/pymssql.py:14:    :connectstring: mssql+pymssql://<username>:<password>@<freetds_name>/?charset=utf8
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mssql/pyodbc.py:80:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mssql/pyodbc.py:215:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mssql/pyodbc.py:245:        password="tiger",
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/pysqlcipher.py:152:        plain_url = url._replace(password=None)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/sqlite/provision.py:76:        url = url.set(password="test")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/pg8000.py:13:    :connectstring: postgresql+pg8000://user:password@host:port/dbname[?key=value&key=value...]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:13:    :connectstring: postgresql+asyncpg://user:password@host:port/dbname[?key=value&key=value...]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:55:        "postgresql+asyncpg://user:password@/dbname?host=HostA:5432&host=HostB:5432&host=HostC:5432"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py:13:    :connectstring: postgresql+psycopg2://user:password@host:port/dbname[?key=value&key=value...]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py:106:        "postgresql+psycopg2://user:password@/dbname?host=/var/lib/postgresql"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py:114:            "postgresql+psycopg2://user:password@myhost1/dbname?host=myhost2"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py:144:        "postgresql+psycopg2://user:password@/dbname?host=HostA:PortA&host=HostB&host=HostC:PortC"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py:153:        "postgresql+psycopg2://user:password@/dbname?host=HostA,HostB,HostC&port=PortA,,PortC"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py:167:        "postgresql+psycopg2://user:password@/dbname?host=HostA:PortA&host=HostB&host=HostC:PortC&target_session_attrs=primary"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg.py:13:    :connectstring: postgresql+psycopg://user:password@host:port/dbname[?key=value&key=value...]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/psycopg2cffi.py:13:    :connectstring: postgresql+psycopg2cffi://user:password@host:port/dbname[?key=value&key=value...]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mysql/asyncmy.py:12:    :connectstring: mysql+asyncmy://user:password@host:port/dbname[?key=value&key=value...]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mysql/aiomysql.py:12:    :connectstring: mysql+aiomysql://user:password@host:port/dbname[?key=value&key=value...]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mysql/mysqldb.py:205:                database="db", username="user", password="passwd"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/dialects/mysql/base.py:497:  table.select(table.c.password == func.md5("plaintext"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/testing/plugin/plugin_base.py:458:                    f"{db_url.render_as_string(hide_password=False)}\n"
/home/zion/ZION/ai/stratum_client_sync.py:147:            password = algorithm  # e.g., "autolykos2", "randomx", "yescrypt"
/home/zion/ZION/ai/mining/pool_stratum_bridge.py:199:        password = params[1] if len(params) > 1 else ""
/home/zion/ZION/ai/mining/pool_stratum_bridge.py:202:        password_lower = password.lower()
/home/zion/ZION/ai/mining/cosmic_harmony_gpu_miner.py:256:            self.config['password'] = os.environ.get('ZION_POOL_PASSWORD', self.config['password'])
/home/zion/ZION/ai/mining/stratum_client_sync.py:147:            password = algorithm  # e.g., "autolykos2", "randomx", "yescrypt"
/home/zion/ZION/docs/LIGHTNING_NETWORK_INTEGRATION.md:43:      -rpcpassword=lightning_secure_password
/home/zion/ZION/docs/2.8.1_deployment_guide.md:217:bitcoin-rpcpassword=sacred_lightning_2025
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:407:    # User can set password = "a"
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:925:        password_hash = pwd_context.hash(password)
/home/zion/ZION/wallet/__init__.py:57:    def __init__(self, wallet_file: str = "zion_wallet.json", password: Optional[str] = None):
/home/zion/ZION/wallet/__init__.py:79:                    "Call: ZionWallet('wallet.json', password='your_password')"
/home/zion/ZION/wallet/__init__.py:252:    def restore_wallet(self, backup_file: str, password: Optional[str] = None) -> bool:
/home/zion/ZION/wallet/__init__.py:316:    def import_keys(self, import_file: str, password: Optional[str] = None) -> bool:
/home/zion/ZION/api/wallet_endpoints.py:65:    def create_wallet(self, name: str, password: str, label: str = "My Wallet") -> Dict:
/home/zion/ZION/api/wallet_endpoints.py:103:            wallet = ZionWallet(wallet_file=wallet_file, password=password)
/home/zion/ZION/api/wallet_endpoints.py:191:                wallet = ZionWallet(wallet_file=wallet_file, password=None)
/home/zion/ZION/api/__init__.py:514:async def restore_wallet(filename: str, password: Optional[str] = None):
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:1476:        password = params.get('pass', 'x')
/home/zion/ZION/backups/ssh_backup_20251021_215309/zion_universal_pool_v2.py:2002:        password = params[1] if len(params) > 1 else ''
/home/zion/ZION/.env.example:53:BITCOIN_RPCPASSWORD=change_me
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2005:        password = params.get('pass', 'x')
/home/zion/ZION/src/core/zion_universal_pool_v2.py:2633:        password = params[1] if len(params) > 1 else ''
/home/zion/ZION/.env.backup:21:WALLET_PASSWORD=ZionBootstrap2025TempDev
/home/zion/ZION/.env.production:35:REDIS_PASSWORD=sacred_dharma_cache_secure_2675
/home/zion/ZION/.env.production:37:MONGO_ROOT_PASSWORD=sacred_dharma_database_2675_secure
/home/zion/ZION/.env.production:39:GRAFANA_PASSWORD=sacred_dharma_visualization_2675
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:29:    "password.*="
/home/zion/ZION/scripts/mining/pool_working_backup.py:1492:        password = params.get('pass', 'x')
/home/zion/ZION/scripts/mining/pool_working_backup.py:2001:        password = params[1] if len(params) > 1 else ''
/home/zion/ZION/frontend/app/components/AuthForms.tsx:8:  onLogin: (email: string, password: string) => Promise<void>;
/home/zion/ZION/frontend/app/components/AuthForms.tsx:16:  const [password, setPassword] = useState('');
/home/zion/ZION/frontend/app/components/AuthForms.tsx:258:  onRegister: (username: string, email: string, password: string) => Promise<void>;
/home/zion/ZION/frontend/app/components/AuthForms.tsx:266:  const [password, setPassword] = useState('');
/home/zion/ZION/frontend/app/components/AuthForms.tsx:267:  const [confirmPassword, setConfirmPassword] = useState('');
/home/zion/ZION/frontend/app/components/AuthForms.tsx:271:    if (password !== confirmPassword) {
/home/zion/ZION/frontend/app/components/AuthForms.tsx:371:            {password && confirmPassword && password !== confirmPassword && (
/home/zion/ZION/frontend/app/components/AuthForms.tsx:381:            disabled={loading || password !== confirmPassword}
/home/zion/ZION/frontend/app/components/ZionWalletWidget.tsx:45:  const [newWalletPassword, setNewWalletPassword] = useState('');
/home/zion/ZION/frontend/app/components/ZionWalletWidget.tsx:46:  const [unlockPassword, setUnlockPassword] = useState('');
/home/zion/ZION/frontend/app/auth/signin/page.tsx:15:  const [showPassword, setShowPassword] = useState(false);
/home/zion/ZION/frontend/app/auth/signin/page.tsx:229:                  {showPassword ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
/home/zion/ZION/frontend/app/login/page.tsx:12:    const handleLogin = async (email: string, password: string) => {
/home/zion/ZION/frontend/app/register/page.tsx:12:  const handleRegister = async (username: string, email: string, password: string) => {
/home/zion/ZION/frontend/app/wallet/page.tsx:692:          const password = prompt('Enter password for new wallet:');
/home/zion/ZION/frontend/app/wallet/page.tsx:703:          const importPassword = prompt('Enter password for imported wallet:');
/home/zion/ZION/frontend/app/wallet/page.tsx:718:          const viewPassword = prompt('Enter wallet password to view keys:');
/home/zion/ZION/frontend/app/api/auth/login/route.ts:46:    const { email, password } = loginSchema.parse(body);
/home/zion/ZION/frontend/app/api/auth/login/route.ts:66:    const isValidPassword = await bcrypt.compare(password, user.passwordHash);
/home/zion/ZION/frontend/app/api/auth/login/route.ts:91:    const { passwordHash: _, ...userResponse } = user;
/home/zion/ZION/frontend/app/api/auth/register/route.ts:51:    const { username, email, password } = registerSchema.parse(body);
/home/zion/ZION/frontend/app/api/auth/register/route.ts:63:    const passwordHash = await bcrypt.hash(password, 12);
/home/zion/ZION/frontend/app/api/auth/register/route.ts:94:    const { passwordHash: _, ...userResponse } = user;
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:129:    const { passwordHash: _, ...userResponse } = user;
/home/zion/ZION/frontend/app/api/wallet/generate/route.ts:9:    const { password } = await request.json();
/home/zion/ZION/frontend/app/api/wallet/generate/route.ts:24:    // const { stdout } = await execAsync(`../zion-cryptonote/build/release/src/simplewallet --generate-new-wallet=${walletName} --password=${password}`);
/home/zion/ZION/frontend/app/api/wallet/import/route.ts:5:    const { seed, password } = await request.json();
/home/zion/ZION/frontend/app/api/wallet/import/route.ts:21:    // const { stdout } = await execAsync(`../zion-cryptonote/build/release/src/simplewallet --restore-wallet --seed="${seed}" --password=${password}`);
/home/zion/ZION/frontend/app/api/wallet/view-keys/route.ts:5:    const { password } = await request.json();
/home/zion/ZION/docker-compose.sacred-production.yml:299:      - REDIS_PASSWORD=${REDIS_PASSWORD:-sacred_dharma_cache}
/home/zion/ZION/docker-compose.sacred-production.yml:316:      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-sacred_dharma_db}
/home/zion/ZION/docker-compose.sacred-production.yml:359:      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-sacred_dharma_viz}
/home/zion/ZION/zion/pool/mining_pool.py:223:                password="zion_db_2675"
/home/zion/ZION/zion/pool/mining_pool.py:445:            password = params[1] if len(params) > 1 else ""
/home/zion/ZION/zion/wallet/wallet_core.py:90:    def encrypt_data(data: bytes, password: str, salt: bytes = None) -> Tuple[bytes, bytes]:
/home/zion/ZION/zion/wallet/wallet_core.py:162:    def create_wallet(self, name: str, password: str, language: str = "english") -> Dict:
/home/zion/ZION/zion/wallet/wallet_core.py:592:        name, password = sys.argv[2], sys.argv[3]
/home/zion/ZION/zion/wallet/wallet_core.py:608:        name, password = sys.argv[2], sys.argv[3]
/home/zion/ZION/zion/wallet/wallet_core.py:634:        name, mnemonic, password = sys.argv[2], sys.argv[3], sys.argv[4]
/home/zion/ZION/zion/mining/config.ini:8:password = x
/home/zion/ZION/zion/mining/zion-nicehash-miner.py:40:        self.password = "x"
/home/zion/ZION/zion/mining/zion-miner.py:142:        ttk.Label(pool_frame, text="Password:").grid(row=2, column=2, sticky="w", pady=2)
/home/zion/ZION/zion/mining/zion-miner.py:143:        self.password_var = tk.StringVar(value=self.config.get('mining', 'password'))
/home/zion/ZION/zion/mining/zion-miner.py:144:        password_entry = ttk.Entry(pool_frame, textvariable=self.password_var, width=10)
/home/zion/ZION/zion/mining/zion-miner.py:145:        password_entry.grid(row=2, column=3, padx=5, pady=2)
/home/zion/ZION/data/pool_working_backup.py:1492:        password = params.get('pass', 'x')
/home/zion/ZION/data/pool_working_backup.py:2001:        password = params[1] if len(params) > 1 else ''
/home/zion/ZION/tests/2.8.2/pool/test_multi_pool_system.py:468:            # Rapid key operations
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/__init__.py:1:from .api_key import APIKeyCookie as APIKeyCookie
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/__init__.py:2:from .api_key import APIKeyHeader as APIKeyHeader
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/__init__.py:3:from .api_key import APIKeyQuery as APIKeyQuery
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:4:from fastapi.openapi.models import APIKey, APIKeyIn
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:12:class APIKeyBase(SecurityBase):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:14:    def check_api_key(api_key: Optional[str], auto_error: bool) -> Optional[str]:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:15:        if not api_key:
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:21:        return api_key
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:24:class APIKeyQuery(APIKeyBase):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:26:    API key authentication using a query parameter.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:29:    with the API key and integrates that into the OpenAPI documentation. It extracts
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:31:    dependency result. But it doesn't define how to send that API key to the client.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:43:    from fastapi.security import APIKeyQuery
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:47:    query_scheme = APIKeyQuery(name="api_key")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:51:    async def read_items(api_key: str = Depends(query_scheme)):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:52:        return {"api_key": api_key}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:87:                By default, if the query parameter is not provided, `APIKeyQuery` will
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:103:        self.model: APIKey = APIKey(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:104:            **{"in": APIKeyIn.query},
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:112:        api_key = request.query_params.get(self.model.name)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:113:        return self.check_api_key(api_key, self.auto_error)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:116:class APIKeyHeader(APIKeyBase):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:118:    API key authentication using a header.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:121:    the API key and integrates that into the OpenAPI documentation. It extracts
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:135:    from fastapi.security import APIKeyHeader
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:139:    header_scheme = APIKeyHeader(name="x-key")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:176:                By default, if the header is not provided, `APIKeyHeader` will
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:191:        self.model: APIKey = APIKey(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:192:            **{"in": APIKeyIn.header},
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:200:        api_key = request.headers.get(self.model.name)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:201:        return self.check_api_key(api_key, self.auto_error)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:204:class APIKeyCookie(APIKeyBase):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:206:    API key authentication using a cookie.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:209:    the API key and integrates that into the OpenAPI documentation. It extracts
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:223:    from fastapi.security import APIKeyCookie
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:227:    cookie_scheme = APIKeyCookie(name="session")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:264:                By default, if the cookie is not provided, `APIKeyCookie` will
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:279:        self.model: APIKey = APIKey(
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:280:            **{"in": APIKeyIn.cookie},
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:288:        api_key = request.cookies.get(self.model.name)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/security/api_key.py:289:        return self.check_api_key(api_key, self.auto_error)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/openapi/models.py:338:    apiKey = "apiKey"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/openapi/models.py:349:class APIKeyIn(Enum):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/openapi/models.py:355:class APIKey(SecurityBase):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/openapi/models.py:356:    type_: SecuritySchemeType = Field(default=SecuritySchemeType.apiKey, alias="type")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/openapi/models.py:357:    in_: APIKeyIn = Field(alias="in")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi/openapi/models.py:412:SecurityScheme = Union[APIKey, HTTPBase, OAuth2, OpenIdConnect, HTTPBearer]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/tests/test_f2py2e.py:567:def test_debugcapi(capfd, hello_world_f90, monkeypatch):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/tests/test_f2py2e.py:584:def test_debugcapi_bld(hello_world_f90, monkeypatch):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/rules.py:340:                           PyObject *capi_keywds,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/rules.py:351:    if (!PyArg_ParseTupleAndKeywords(capi_args,capi_keywds,\\
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/rules.py:353:        capi_kwlist#args_capi##keys_capi##keys_xa#))\n        return NULL;
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/rules.py:436:        'args_capi': '', 'keys_capi': '', 'functype': '',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/cfuncs.py:1452:    for k in c2capi_map.keys():
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/numpy/f2py/use_rules.py:35:    'method': '\t{\"get_#name#\",#apiname#,METH_VARARGS|METH_KEYWORDS,doc_#apiname#},',
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:103:    In order to avoid a direct GSSAPI dependency, the keyring holds a ref
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:104:    to the GSSAPI object required, rather than the key itself.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/dns/tsig.py:154:                gssapi_context = key.secret
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:65:    rsa_key = b'-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAsvI34FgiTK8+txBvmooNGpNwk23YTU51dwNZi5yha3W4lA/Q\nvcZrDalkmD7ekWQwnduxVKa6pRSI13KBgeUOIqJoGXSWhntEtY3FEwvWOHW5AE7Q\njUzTzCiYT6TVaCcpa/7YLai+p6ai2g5f5Zfh4jSawa9uYeuggFygQq4IVW796MgV\nyqxYMM/arEj+/sKz3Viua9Rp9fFosertCYCX4DUTgW0mX9bwEnEOgjSI3pLOPXz1\n8vx+DRZS5wMCmwCUa0sKonLn3cAUPq+sGix7+eo7T0Z12MU8ud7IYVX/75r3cXiF\nPaYE2q8Le0kgOApIXbb+x74x0rNgyIh1yGygkwIDAQABAoIBABz4t1A0pLT6qHI2\nEIOaNz3mwhK0dZEqkz0GB1Dhtoax5ATgvKCFB98J3lYB08IBURe1snOsnMpOVUtg\naBRSM+QqnCUG6bnzKjAkuFP5liDE+oNQv1YpKp9CsUovuzdmI8Au3ewihl+ZTIN2\nUVNYMEOR1b5m+z2SSwWNOYsiJwpBrT7zkpdlDyjat7FiiPhMMIMXjhQFVxURMIcB\njUBtPzGvV/PG90cVDWi1wRGeeP1dDqti/jsnvykQ15KW1MqGrpeNKRmDdTy/Ucl1\nWIoYklKw3U456lgZ/rDTDB818+Tlnk35z4yF7d5ANPM8CKfqOPcnO1BCKVFzf4eq\n54wvUtkCgYEA1Zv2lp06l7rXMsvNtyYQjbFChezRDRnPwZmN4NCdRtTgGG1G0Ryd\nYz6WWoPGqZp0b4LAaaHd3W2GTcpXF8WXMKfMX1W+tMAxMozfsXRKMcHoypwuS5wT\nfJRXJCG4pvd57AB0iVUEJW2we+uGKU5Zxcx//id2nXGCpoRyViIplQsCgYEA1nVC\neHupHChht0Fh4N09cGqZHZzuwXjOUMzR3Vsfz+4WzVS3NvIgN4g5YgmQFOeKwo5y\niRq5yvubcNdFvf85eHWClg0zPAyxJCVUWigCrrOanGEhJo6re4idJvNVzu4Ucg0v\n6B3SJ1HsCda+ZSNz24bSyqRep8A+RoAaoVSFx5kCgYEAn3RvXPs9s+obnqWYiPF3\nRe5etE6Vt2vfNKwFxx6zaR6bsmBQjuUHcABWiHb6I71S0bMPI0tbrWGG8ibrYKl1\nNTLtUvVVCOS3VP7oNTWT9RTFTAnOXU7DFSo+6o/poWn3r36ff6zhDXeWWMr2OXtt\ndEQ1/2lCGEGVv+v61eVmmQUCgYABFHITPTwqwiFL1O5zPWnzyPWgaovhOYSAb6eW\n38CXQXGn8wdBJZL39J2lWrr4//l45VK6UgIhfYbY2JynSkO10ZGow8RARygVMILu\nOUlaK9lZdDvAf/NpGdUAvzTtZ9F+iYZ2OsA2JnlzyzsGM1l//3vMPWukmJk3ral0\nqoJJ8QKBgGRG3eVHnIegBbFVuMDp2NTcfuSuDVUQ1fGAwtPiFa8u81IodJnMk2pq\niXu2+0ytNA/M+SVrAnE2AgIzcaJbtr0p2srkuVM7KMWnG1vWFNjtXN8fAhf/joOv\nD+NmPL/N4uE57e40tbiU/H7KdyZaDt+5QiTmdhuyAe6CBjKsF2jy\n-----END RSA PRIVATE KEY-----'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/eventlet/zipkin/wsgi.py:35:    api.put_key_value('http.uri', self.path)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/eventlet/zipkin/README.rst:79:   api.put_key_value('key', 'value')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/eventlet/patcher.py:236:    blocking APIs.  So un-monkeypatch references to the given module name, e.g.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/eventlet/wsgi.py:254:                ('-'.join([x.capitalize() for x in key.split('-')]), value)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/simple_websocket/ws.py:348:                header = '-'.join([p.capitalize() for p in key[5:].split('_')])
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/coverage/debug.py:647:    CLOAK = {"API", "TOKEN", "KEY", "SECRET", "PASS", "SIGNATURE"}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_vendor/pygments/lexers/python.py:941:            (r'(public|readonly|extern|api|inline)\b', Keyword.Reserved),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pip/_internal/configuration.py:95:    This class converts provides an API that takes "section.key-name" style
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/propcache/__init__.py:28:    return [*_PUBLIC_API, *globals().keys()]
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/python.py:941:            (r'(public|readonly|extern|api|inline)\b', Keyword.Reserved),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/carbon.py:41:            (r'(package|import|api|namespace|library)\b', Keyword.Namespace),
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_cocoa_builtins.py:14:COCOA_INTERFACES = {'AAAttribution', 'ABNewPersonViewController', 'ABPeoplePickerNavigationController', 'ABPersonViewController', 'ABUnknownPersonViewController', 'ACAccount', 'ACAccountCredential', 'ACAccountStore', 'ACAccountType', 'ADBannerView', 'ADClient', 'ADInterstitialAd', 'ADInterstitialAdPresentationViewController', 'AEAssessmentConfiguration', 'AEAssessmentSession', 'ALAsset', 'ALAssetRepresentation', 'ALAssetsFilter', 'ALAssetsGroup', 'ALAssetsLibrary', 'APActivationPayload', 'ARAnchor', 'ARAppClipCodeAnchor', 'ARBody2D', 'ARBodyAnchor', 'ARBodyTrackingConfiguration', 'ARCamera', 'ARCoachingOverlayView', 'ARCollaborationData', 'ARConfiguration', 'ARDepthData', 'ARDirectionalLightEstimate', 'AREnvironmentProbeAnchor', 'ARFaceAnchor', 'ARFaceGeometry', 'ARFaceTrackingConfiguration', 'ARFrame', 'ARGeoAnchor', 'ARGeoTrackingConfiguration', 'ARGeoTrackingStatus', 'ARGeometryElement', 'ARGeometrySource', 'ARHitTestResult', 'ARImageAnchor', 'ARImageTrackingConfiguration', 'ARLightEstimate', 'ARMatteGenerator', 'ARMeshAnchor', 'ARMeshGeometry', 'ARObjectAnchor', 'ARObjectScanningConfiguration', 'AROrientationTrackingConfiguration', 'ARParticipantAnchor', 'ARPlaneAnchor', 'ARPlaneGeometry', 'ARPointCloud', 'ARPositionalTrackingConfiguration', 'ARQuickLookPreviewItem', 'ARRaycastQuery', 'ARRaycastResult', 'ARReferenceImage', 'ARReferenceObject', 'ARSCNFaceGeometry', 'ARSCNPlaneGeometry', 'ARSCNView', 'ARSKView', 'ARSession', 'ARSkeleton', 'ARSkeleton2D', 'ARSkeleton3D', 'ARSkeletonDefinition', 'ARTrackedRaycast', 'ARVideoFormat', 'ARView', 'ARWorldMap', 'ARWorldTrackingConfiguration', 'ASAccountAuthenticationModificationController', 'ASAccountAuthenticationModificationExtensionContext', 'ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest', 'ASAccountAuthenticationModificationRequest', 'ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest', 'ASAccountAuthenticationModificationViewController', 'ASAuthorization', 'ASAuthorizationAppleIDButton', 'ASAuthorizationAppleIDCredential', 'ASAuthorizationAppleIDProvider', 'ASAuthorizationAppleIDRequest', 'ASAuthorizationController', 'ASAuthorizationOpenIDRequest', 'ASAuthorizationPasswordProvider', 'ASAuthorizationPasswordRequest', 'ASAuthorizationProviderExtensionAuthorizationRequest', 'ASAuthorizationRequest', 'ASAuthorizationSingleSignOnCredential', 'ASAuthorizationSingleSignOnProvider', 'ASAuthorizationSingleSignOnRequest', 'ASCredentialIdentityStore', 'ASCredentialIdentityStoreState', 'ASCredentialProviderExtensionContext', 'ASCredentialProviderViewController', 'ASCredentialServiceIdentifier', 'ASIdentifierManager', 'ASPasswordCredential', 'ASPasswordCredentialIdentity', 'ASWebAuthenticationSession', 'ASWebAuthenticationSessionRequest', 'ASWebAuthenticationSessionWebBrowserSessionManager', 'ATTrackingManager', 'AUAudioUnit', 'AUAudioUnitBus', 'AUAudioUnitBusArray', 'AUAudioUnitPreset', 'AUAudioUnitV2Bridge', 'AUAudioUnitViewConfiguration', 'AUParameter', 'AUParameterGroup', 'AUParameterNode', 'AUParameterTree', 'AUViewController', 'AVAggregateAssetDownloadTask', 'AVAsset', 'AVAssetCache', 'AVAssetDownloadStorageManagementPolicy', 'AVAssetDownloadStorageManager', 'AVAssetDownloadTask', 'AVAssetDownloadURLSession', 'AVAssetExportSession', 'AVAssetImageGenerator', 'AVAssetReader', 'AVAssetReaderAudioMixOutput', 'AVAssetReaderOutput', 'AVAssetReaderOutputMetadataAdaptor', 'AVAssetReaderSampleReferenceOutput', 'AVAssetReaderTrackOutput', 'AVAssetReaderVideoCompositionOutput', 'AVAssetResourceLoader', 'AVAssetResourceLoadingContentInformationRequest', 'AVAssetResourceLoadingDataRequest', 'AVAssetResourceLoadingRequest', 'AVAssetResourceLoadingRequestor', 'AVAssetResourceRenewalRequest', 'AVAssetSegmentReport', 'AVAssetSegmentReportSampleInformation', 'AVAssetSegmentTrackReport', 'AVAssetTrack', 'AVAssetTrackGroup', 'AVAssetTrackSegment', 'AVAssetWriter', 'AVAssetWriterInput', 'AVAssetWriterInputGroup', 'AVAssetWriterInputMetadataAdaptor', 'AVAssetWriterInputPassDescription', 'AVAssetWriterInputPixelBufferAdaptor', 'AVAsynchronousCIImageFilteringRequest', 'AVAsynchronousVideoCompositionRequest', 'AVAudioMix', 'AVAudioMixInputParameters', 'AVAudioSession', 'AVCameraCalibrationData', 'AVCaptureAudioChannel', 'AVCaptureAudioDataOutput', 'AVCaptureAudioFileOutput', 'AVCaptureAudioPreviewOutput', 'AVCaptureAutoExposureBracketedStillImageSettings', 'AVCaptureBracketedStillImageSettings', 'AVCaptureConnection', 'AVCaptureDataOutputSynchronizer', 'AVCaptureDepthDataOutput', 'AVCaptureDevice', 'AVCaptureDeviceDiscoverySession', 'AVCaptureDeviceFormat', 'AVCaptureDeviceInput', 'AVCaptureDeviceInputSource', 'AVCaptureFileOutput', 'AVCaptureInput', 'AVCaptureInputPort', 'AVCaptureManualExposureBracketedStillImageSettings', 'AVCaptureMetadataInput', 'AVCaptureMetadataOutput', 'AVCaptureMovieFileOutput', 'AVCaptureMultiCamSession', 'AVCaptureOutput', 'AVCapturePhoto', 'AVCapturePhotoBracketSettings', 'AVCapturePhotoOutput', 'AVCapturePhotoSettings', 'AVCaptureResolvedPhotoSettings', 'AVCaptureScreenInput', 'AVCaptureSession', 'AVCaptureStillImageOutput', 'AVCaptureSynchronizedData', 'AVCaptureSynchronizedDataCollection', 'AVCaptureSynchronizedDepthData', 'AVCaptureSynchronizedMetadataObjectData', 'AVCaptureSynchronizedSampleBufferData', 'AVCaptureSystemPressureState', 'AVCaptureVideoDataOutput', 'AVCaptureVideoPreviewLayer', 'AVComposition', 'AVCompositionTrack', 'AVCompositionTrackFormatDescriptionReplacement', 'AVCompositionTrackSegment', 'AVContentKeyRequest', 'AVContentKeyResponse', 'AVContentKeySession', 'AVDateRangeMetadataGroup', 'AVDepthData', 'AVDisplayCriteria', 'AVFragmentedAsset', 'AVFragmentedAssetMinder', 'AVFragmentedAssetTrack', 'AVFragmentedMovie', 'AVFragmentedMovieMinder', 'AVFragmentedMovieTrack', 'AVFrameRateRange', 'AVMediaDataStorage', 'AVMediaSelection', 'AVMediaSelectionGroup', 'AVMediaSelectionOption', 'AVMetadataBodyObject', 'AVMetadataCatBodyObject', 'AVMetadataDogBodyObject', 'AVMetadataFaceObject', 'AVMetadataGroup', 'AVMetadataHumanBodyObject', 'AVMetadataItem', 'AVMetadataItemFilter', 'AVMetadataItemValueRequest', 'AVMetadataMachineReadableCodeObject', 'AVMetadataObject', 'AVMetadataSalientObject', 'AVMovie', 'AVMovieTrack', 'AVMutableAssetDownloadStorageManagementPolicy', 'AVMutableAudioMix', 'AVMutableAudioMixInputParameters', 'AVMutableComposition', 'AVMutableCompositionTrack', 'AVMutableDateRangeMetadataGroup', 'AVMutableMediaSelection', 'AVMutableMetadataItem', 'AVMutableMovie', 'AVMutableMovieTrack', 'AVMutableTimedMetadataGroup', 'AVMutableVideoComposition', 'AVMutableVideoCompositionInstruction', 'AVMutableVideoCompositionLayerInstruction', 'AVOutputSettingsAssistant', 'AVPersistableContentKeyRequest', 'AVPictureInPictureController', 'AVPlayer', 'AVPlayerItem', 'AVPlayerItemAccessLog', 'AVPlayerItemAccessLogEvent', 'AVPlayerItemErrorLog', 'AVPlayerItemErrorLogEvent', 'AVPlayerItemLegibleOutput', 'AVPlayerItemMediaDataCollector', 'AVPlayerItemMetadataCollector', 'AVPlayerItemMetadataOutput', 'AVPlayerItemOutput', 'AVPlayerItemTrack', 'AVPlayerItemVideoOutput', 'AVPlayerLayer', 'AVPlayerLooper', 'AVPlayerMediaSelectionCriteria', 'AVPlayerViewController', 'AVPortraitEffectsMatte', 'AVQueuePlayer', 'AVRouteDetector', 'AVRoutePickerView', 'AVSampleBufferAudioRenderer', 'AVSampleBufferDisplayLayer', 'AVSampleBufferRenderSynchronizer', 'AVSemanticSegmentationMatte', 'AVSynchronizedLayer', 'AVTextStyleRule', 'AVTimedMetadataGroup', 'AVURLAsset', 'AVVideoComposition', 'AVVideoCompositionCoreAnimationTool', 'AVVideoCompositionInstruction', 'AVVideoCompositionLayerInstruction', 'AVVideoCompositionRenderContext', 'AVVideoCompositionRenderHint', 'AXCustomContent', 'BCChatAction', 'BCChatButton', 'BGAppRefreshTask', 'BGAppRefreshTaskRequest', 'BGProcessingTask', 'BGProcessingTaskRequest', 'BGTask', 'BGTaskRequest', 'BGTaskScheduler', 'CAAnimation', 'CAAnimationGroup', 'CABTMIDICentralViewController', 'CABTMIDILocalPeripheralViewController', 'CABasicAnimation', 'CADisplayLink', 'CAEAGLLayer', 'CAEmitterCell', 'CAEmitterLayer', 'CAGradientLayer', 'CAInterAppAudioSwitcherView', 'CAInterAppAudioTransportView', 'CAKeyframeAnimation', 'CALayer', 'CAMediaTimingFunction', 'CAMetalLayer', 'CAPropertyAnimation', 'CAReplicatorLayer', 'CAScrollLayer', 'CAShapeLayer', 'CASpringAnimation', 'CATextLayer', 'CATiledLayer', 'CATransaction', 'CATransformLayer', 'CATransition', 'CAValueFunction', 'CBATTRequest', 'CBAttribute', 'CBCentral', 'CBCentralManager', 'CBCharacteristic', 'CBDescriptor', 'CBL2CAPChannel', 'CBManager', 'CBMutableCharacteristic', 'CBMutableDescriptor', 'CBMutableService', 'CBPeer', 'CBPeripheral', 'CBPeripheralManager', 'CBService', 'CBUUID', 'CHHapticDynamicParameter', 'CHHapticEngine', 'CHHapticEvent', 'CHHapticEventParameter', 'CHHapticParameterCurve', 'CHHapticParameterCurveControlPoint', 'CHHapticPattern', 'CIAztecCodeDescriptor', 'CIBarcodeDescriptor', 'CIBlendKernel', 'CIColor', 'CIColorKernel', 'CIContext', 'CIDataMatrixCodeDescriptor', 'CIDetector', 'CIFaceFeature', 'CIFeature', 'CIFilter', 'CIFilterGenerator', 'CIFilterShape', 'CIImage', 'CIImageAccumulator', 'CIImageProcessorKernel', 'CIKernel', 'CIPDF417CodeDescriptor', 'CIPlugIn', 'CIQRCodeDescriptor', 'CIQRCodeFeature', 'CIRectangleFeature', 'CIRenderDestination', 'CIRenderInfo', 'CIRenderTask', 'CISampler', 'CITextFeature', 'CIVector', 'CIWarpKernel', 'CKAcceptSharesOperation', 'CKAsset', 'CKContainer', 'CKDatabase', 'CKDatabaseNotification', 'CKDatabaseOperation', 'CKDatabaseSubscription', 'CKDiscoverAllUserIdentitiesOperation', 'CKDiscoverUserIdentitiesOperation', 'CKFetchDatabaseChangesOperation', 'CKFetchNotificationChangesOperation', 'CKFetchRecordChangesOperation', 'CKFetchRecordZoneChangesConfiguration', 'CKFetchRecordZoneChangesOperation', 'CKFetchRecordZoneChangesOptions', 'CKFetchRecordZonesOperation', 'CKFetchRecordsOperation', 'CKFetchShareMetadataOperation', 'CKFetchShareParticipantsOperation', 'CKFetchSubscriptionsOperation', 'CKFetchWebAuthTokenOperation', 'CKLocationSortDescriptor', 'CKMarkNotificationsReadOperation', 'CKModifyBadgeOperation', 'CKModifyRecordZonesOperation', 'CKModifyRecordsOperation', 'CKModifySubscriptionsOperation', 'CKNotification', 'CKNotificationID', 'CKNotificationInfo', 'CKOperation', 'CKOperationConfiguration', 'CKOperationGroup', 'CKQuery', 'CKQueryCursor', 'CKQueryNotification', 'CKQueryOperation', 'CKQuerySubscription', 'CKRecord', 'CKRecordID', 'CKRecordZone', 'CKRecordZoneID', 'CKRecordZoneNotification', 'CKRecordZoneSubscription', 'CKReference', 'CKServerChangeToken', 'CKShare', 'CKShareMetadata', 'CKShareParticipant', 'CKSubscription', 'CKUserIdentity', 'CKUserIdentityLookupInfo', 'CLBeacon', 'CLBeaconIdentityConstraint', 'CLBeaconRegion', 'CLCircularRegion', 'CLFloor', 'CLGeocoder', 'CLHeading', 'CLKComplication', 'CLKComplicationDescriptor', 'CLKComplicationServer', 'CLKComplicationTemplate', 'CLKComplicationTemplateCircularSmallRingImage', 'CLKComplicationTemplateCircularSmallRingText', 'CLKComplicationTemplateCircularSmallSimpleImage', 'CLKComplicationTemplateCircularSmallSimpleText', 'CLKComplicationTemplateCircularSmallStackImage', 'CLKComplicationTemplateCircularSmallStackText', 'CLKComplicationTemplateExtraLargeColumnsText', 'CLKComplicationTemplateExtraLargeRingImage', 'CLKComplicationTemplateExtraLargeRingText', 'CLKComplicationTemplateExtraLargeSimpleImage', 'CLKComplicationTemplateExtraLargeSimpleText', 'CLKComplicationTemplateExtraLargeStackImage', 'CLKComplicationTemplateExtraLargeStackText', 'CLKComplicationTemplateGraphicBezelCircularText', 'CLKComplicationTemplateGraphicCircular', 'CLKComplicationTemplateGraphicCircularClosedGaugeImage', 'CLKComplicationTemplateGraphicCircularClosedGaugeText', 'CLKComplicationTemplateGraphicCircularImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeRangeText', 'CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicCircularStackImage', 'CLKComplicationTemplateGraphicCircularStackText', 'CLKComplicationTemplateGraphicCornerCircularImage', 'CLKComplicationTemplateGraphicCornerGaugeImage', 'CLKComplicationTemplateGraphicCornerGaugeText', 'CLKComplicationTemplateGraphicCornerStackText', 'CLKComplicationTemplateGraphicCornerTextImage', 'CLKComplicationTemplateGraphicExtraLargeCircular', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText', 'CLKComplicationTemplateGraphicExtraLargeCircularImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicExtraLargeCircularStackImage', 'CLKComplicationTemplateGraphicExtraLargeCircularStackText', 'CLKComplicationTemplateGraphicRectangularFullImage', 'CLKComplicationTemplateGraphicRectangularLargeImage', 'CLKComplicationTemplateGraphicRectangularStandardBody', 'CLKComplicationTemplateGraphicRectangularTextGauge', 'CLKComplicationTemplateModularLargeColumns', 'CLKComplicationTemplateModularLargeStandardBody', 'CLKComplicationTemplateModularLargeTable', 'CLKComplicationTemplateModularLargeTallBody', 'CLKComplicationTemplateModularSmallColumnsText', 'CLKComplicationTemplateModularSmallRingImage', 'CLKComplicationTemplateModularSmallRingText', 'CLKComplicationTemplateModularSmallSimpleImage', 'CLKComplicationTemplateModularSmallSimpleText', 'CLKComplicationTemplateModularSmallStackImage', 'CLKComplicationTemplateModularSmallStackText', 'CLKComplicationTemplateUtilitarianLargeFlat', 'CLKComplicationTemplateUtilitarianSmallFlat', 'CLKComplicationTemplateUtilitarianSmallRingImage', 'CLKComplicationTemplateUtilitarianSmallRingText', 'CLKComplicationTemplateUtilitarianSmallSquare', 'CLKComplicationTimelineEntry', 'CLKDateTextProvider', 'CLKFullColorImageProvider', 'CLKGaugeProvider', 'CLKImageProvider', 'CLKRelativeDateTextProvider', 'CLKSimpleGaugeProvider', 'CLKSimpleTextProvider', 'CLKTextProvider', 'CLKTimeIntervalGaugeProvider', 'CLKTimeIntervalTextProvider', 'CLKTimeTextProvider', 'CLKWatchFaceLibrary', 'CLLocation', 'CLLocationManager', 'CLPlacemark', 'CLRegion', 'CLSActivity', 'CLSActivityItem', 'CLSBinaryItem', 'CLSContext', 'CLSDataStore', 'CLSObject', 'CLSProgressReportingCapability', 'CLSQuantityItem', 'CLSScoreItem', 'CLVisit', 'CMAccelerometerData', 'CMAltimeter', 'CMAltitudeData', 'CMAttitude', 'CMDeviceMotion', 'CMDyskineticSymptomResult', 'CMFallDetectionEvent', 'CMFallDetectionManager', 'CMGyroData', 'CMHeadphoneMotionManager', 'CMLogItem', 'CMMagnetometerData', 'CMMotionActivity', 'CMMotionActivityManager', 'CMMotionManager', 'CMMovementDisorderManager', 'CMPedometer', 'CMPedometerData', 'CMPedometerEvent', 'CMRecordedAccelerometerData', 'CMRecordedRotationRateData', 'CMRotationRateData', 'CMSensorDataList', 'CMSensorRecorder', 'CMStepCounter', 'CMTremorResult', 'CNChangeHistoryAddContactEvent', 'CNChangeHistoryAddGroupEvent', 'CNChangeHistoryAddMemberToGroupEvent', 'CNChangeHistoryAddSubgroupToGroupEvent', 'CNChangeHistoryDeleteContactEvent', 'CNChangeHistoryDeleteGroupEvent', 'CNChangeHistoryDropEverythingEvent', 'CNChangeHistoryEvent', 'CNChangeHistoryFetchRequest', 'CNChangeHistoryRemoveMemberFromGroupEvent', 'CNChangeHistoryRemoveSubgroupFromGroupEvent', 'CNChangeHistoryUpdateContactEvent', 'CNChangeHistoryUpdateGroupEvent', 'CNContact', 'CNContactFetchRequest', 'CNContactFormatter', 'CNContactPickerViewController', 'CNContactProperty', 'CNContactRelation', 'CNContactStore', 'CNContactVCardSerialization', 'CNContactViewController', 'CNContactsUserDefaults', 'CNContainer', 'CNFetchRequest', 'CNFetchResult', 'CNGroup', 'CNInstantMessageAddress', 'CNLabeledValue', 'CNMutableContact', 'CNMutableGroup', 'CNMutablePostalAddress', 'CNPhoneNumber', 'CNPostalAddress', 'CNPostalAddressFormatter', 'CNSaveRequest', 'CNSocialProfile', 'CPActionSheetTemplate', 'CPAlertAction', 'CPAlertTemplate', 'CPBarButton', 'CPButton', 'CPContact', 'CPContactCallButton', 'CPContactDirectionsButton', 'CPContactMessageButton', 'CPContactTemplate', 'CPDashboardButton', 'CPDashboardController', 'CPGridButton', 'CPGridTemplate', 'CPImageSet', 'CPInformationItem', 'CPInformationRatingItem', 'CPInformationTemplate', 'CPInterfaceController', 'CPListImageRowItem', 'CPListItem', 'CPListSection', 'CPListTemplate', 'CPManeuver', 'CPMapButton', 'CPMapTemplate', 'CPMessageComposeBarButton', 'CPMessageListItem', 'CPMessageListItemLeadingConfiguration', 'CPMessageListItemTrailingConfiguration', 'CPNavigationAlert', 'CPNavigationSession', 'CPNowPlayingAddToLibraryButton', 'CPNowPlayingButton', 'CPNowPlayingImageButton', 'CPNowPlayingMoreButton', 'CPNowPlayingPlaybackRateButton', 'CPNowPlayingRepeatButton', 'CPNowPlayingShuffleButton', 'CPNowPlayingTemplate', 'CPPointOfInterest', 'CPPointOfInterestTemplate', 'CPRouteChoice', 'CPSearchTemplate', 'CPSessionConfiguration', 'CPTabBarTemplate', 'CPTemplate', 'CPTemplateApplicationDashboardScene', 'CPTemplateApplicationScene', 'CPTextButton', 'CPTravelEstimates', 'CPTrip', 'CPTripPreviewTextConfiguration', 'CPVoiceControlState', 'CPVoiceControlTemplate', 'CPWindow', 'CSCustomAttributeKey', 'CSIndexExtensionRequestHandler', 'CSLocalizedString', 'CSPerson', 'CSSearchQuery', 'CSSearchableIndex', 'CSSearchableItem', 'CSSearchableItemAttributeSet', 'CTCall', 'CTCallCenter', 'CTCarrier', 'CTCellularData', 'CTCellularPlanProvisioning', 'CTCellularPlanProvisioningRequest', 'CTSubscriber', 'CTSubscriberInfo', 'CTTelephonyNetworkInfo', 'CXAction', 'CXAnswerCallAction', 'CXCall', 'CXCallAction', 'CXCallController', 'CXCallDirectoryExtensionContext', 'CXCallDirectoryManager', 'CXCallDirectoryProvider', 'CXCallObserver', 'CXCallUpdate', 'CXEndCallAction', 'CXHandle', 'CXPlayDTMFCallAction', 'CXProvider', 'CXProviderConfiguration', 'CXSetGroupCallAction', 'CXSetHeldCallAction', 'CXSetMutedCallAction', 'CXStartCallAction', 'CXTransaction', 'DCAppAttestService', 'DCDevice', 'EAAccessory', 'EAAccessoryManager', 'EAGLContext', 'EAGLSharegroup', 'EASession', 'EAWiFiUnconfiguredAccessory', 'EAWiFiUnconfiguredAccessoryBrowser', 'EKAlarm', 'EKCalendar', 'EKCalendarChooser', 'EKCalendarItem', 'EKEvent', 'EKEventEditViewController', 'EKEventStore', 'EKEventViewController', 'EKObject', 'EKParticipant', 'EKRecurrenceDayOfWeek', 'EKRecurrenceEnd', 'EKRecurrenceRule', 'EKReminder', 'EKSource', 'EKStructuredLocation', 'ENExposureConfiguration', 'ENExposureDaySummary', 'ENExposureDetectionSummary', 'ENExposureInfo', 'ENExposureSummaryItem', 'ENExposureWindow', 'ENManager', 'ENScanInstance', 'ENTemporaryExposureKey', 'EntityRotationGestureRecognizer', 'EntityScaleGestureRecognizer', 'EntityTranslationGestureRecognizer', 'FPUIActionExtensionContext', 'FPUIActionExtensionViewController', 'GCColor', 'GCController', 'GCControllerAxisInput', 'GCControllerButtonInput', 'GCControllerDirectionPad', 'GCControllerElement', 'GCControllerTouchpad', 'GCDeviceBattery', 'GCDeviceCursor', 'GCDeviceHaptics', 'GCDeviceLight', 'GCDirectionalGamepad', 'GCDualShockGamepad', 'GCEventViewController', 'GCExtendedGamepad', 'GCExtendedGamepadSnapshot', 'GCGamepad', 'GCGamepadSnapshot', 'GCKeyboard', 'GCKeyboardInput', 'GCMicroGamepad', 'GCMicroGamepadSnapshot', 'GCMotion', 'GCMouse', 'GCMouseInput', 'GCPhysicalInputProfile', 'GCXboxGamepad', 'GKARC4RandomSource', 'GKAccessPoint', 'GKAchievement', 'GKAchievementChallenge', 'GKAchievementDescription', 'GKAchievementViewController', 'GKAgent', 'GKAgent2D', 'GKAgent3D', 'GKBasePlayer', 'GKBehavior', 'GKBillowNoiseSource', 'GKChallenge', 'GKChallengeEventHandler', 'GKCheckerboardNoiseSource', 'GKCircleObstacle', 'GKCloudPlayer', 'GKCoherentNoiseSource', 'GKComponent', 'GKComponentSystem', 'GKCompositeBehavior', 'GKConstantNoiseSource', 'GKCylindersNoiseSource', 'GKDecisionNode', 'GKDecisionTree', 'GKEntity', 'GKFriendRequestComposeViewController', 'GKGameCenterViewController', 'GKGameSession', 'GKGameSessionSharingViewController', 'GKGaussianDistribution', 'GKGoal', 'GKGraph', 'GKGraphNode', 'GKGraphNode2D', 'GKGraphNode3D', 'GKGridGraph', 'GKGridGraphNode', 'GKInvite', 'GKLeaderboard', 'GKLeaderboardEntry', 'GKLeaderboardScore', 'GKLeaderboardSet', 'GKLeaderboardViewController', 'GKLinearCongruentialRandomSource', 'GKLocalPlayer', 'GKMatch', 'GKMatchRequest', 'GKMatchmaker', 'GKMatchmakerViewController', 'GKMersenneTwisterRandomSource', 'GKMeshGraph', 'GKMinmaxStrategist', 'GKMonteCarloStrategist', 'GKNSPredicateRule', 'GKNoise', 'GKNoiseMap', 'GKNoiseSource', 'GKNotificationBanner', 'GKObstacle', 'GKObstacleGraph', 'GKOctree', 'GKOctreeNode', 'GKPath', 'GKPeerPickerController', 'GKPerlinNoiseSource', 'GKPlayer', 'GKPolygonObstacle', 'GKQuadtree', 'GKQuadtreeNode', 'GKRTree', 'GKRandomDistribution', 'GKRandomSource', 'GKRidgedNoiseSource', 'GKRule', 'GKRuleSystem', 'GKSCNNodeComponent', 'GKSKNodeComponent', 'GKSavedGame', 'GKScene', 'GKScore', 'GKScoreChallenge', 'GKSession', 'GKShuffledDistribution', 'GKSphereObstacle', 'GKSpheresNoiseSource', 'GKState', 'GKStateMachine', 'GKTurnBasedEventHandler', 'GKTurnBasedExchangeReply', 'GKTurnBasedMatch', 'GKTurnBasedMatchmakerViewController', 'GKTurnBasedParticipant', 'GKVoiceChat', 'GKVoiceChatService', 'GKVoronoiNoiseSource', 'GLKBaseEffect', 'GLKEffectProperty', 'GLKEffectPropertyFog', 'GLKEffectPropertyLight', 'GLKEffectPropertyMaterial', 'GLKEffectPropertyTexture', 'GLKEffectPropertyTransform', 'GLKMesh', 'GLKMeshBuffer', 'GLKMeshBufferAllocator', 'GLKReflectionMapEffect', 'GLKSkyboxEffect', 'GLKSubmesh', 'GLKTextureInfo', 'GLKTextureLoader', 'GLKView', 'GLKViewController', 'HKActivityMoveModeObject', 'HKActivityRingView', 'HKActivitySummary', 'HKActivitySummaryQuery', 'HKActivitySummaryType', 'HKAnchoredObjectQuery', 'HKAudiogramSample', 'HKAudiogramSampleType', 'HKAudiogramSensitivityPoint', 'HKBiologicalSexObject', 'HKBloodTypeObject', 'HKCDADocument', 'HKCDADocumentSample', 'HKCategorySample', 'HKCategoryType', 'HKCharacteristicType', 'HKClinicalRecord', 'HKClinicalType', 'HKCorrelation', 'HKCorrelationQuery', 'HKCorrelationType', 'HKCumulativeQuantitySample', 'HKCumulativeQuantitySeriesSample', 'HKDeletedObject', 'HKDevice', 'HKDiscreteQuantitySample', 'HKDocumentQuery', 'HKDocumentSample', 'HKDocumentType', 'HKElectrocardiogram', 'HKElectrocardiogramQuery', 'HKElectrocardiogramType', 'HKElectrocardiogramVoltageMeasurement', 'HKFHIRResource', 'HKFHIRVersion', 'HKFitzpatrickSkinTypeObject', 'HKHealthStore', 'HKHeartbeatSeriesBuilder', 'HKHeartbeatSeriesQuery', 'HKHeartbeatSeriesSample', 'HKLiveWorkoutBuilder', 'HKLiveWorkoutDataSource', 'HKObject', 'HKObjectType', 'HKObserverQuery', 'HKQuantity', 'HKQuantitySample', 'HKQuantitySeriesSampleBuilder', 'HKQuantitySeriesSampleQuery', 'HKQuantityType', 'HKQuery', 'HKQueryAnchor', 'HKSample', 'HKSampleQuery', 'HKSampleType', 'HKSeriesBuilder', 'HKSeriesSample', 'HKSeriesType', 'HKSource', 'HKSourceQuery', 'HKSourceRevision', 'HKStatistics', 'HKStatisticsCollection', 'HKStatisticsCollectionQuery', 'HKStatisticsQuery', 'HKUnit', 'HKWheelchairUseObject', 'HKWorkout', 'HKWorkoutBuilder', 'HKWorkoutConfiguration', 'HKWorkoutEvent', 'HKWorkoutRoute', 'HKWorkoutRouteBuilder', 'HKWorkoutRouteQuery', 'HKWorkoutSession', 'HKWorkoutType', 'HMAccessControl', 'HMAccessory', 'HMAccessoryBrowser', 'HMAccessoryCategory', 'HMAccessoryOwnershipToken', 'HMAccessoryProfile', 'HMAccessorySetupPayload', 'HMAction', 'HMActionSet', 'HMAddAccessoryRequest', 'HMCalendarEvent', 'HMCameraAudioControl', 'HMCameraControl', 'HMCameraProfile', 'HMCameraSettingsControl', 'HMCameraSnapshot', 'HMCameraSnapshotControl', 'HMCameraSource', 'HMCameraStream', 'HMCameraStreamControl', 'HMCameraView', 'HMCharacteristic', 'HMCharacteristicEvent', 'HMCharacteristicMetadata', 'HMCharacteristicThresholdRangeEvent', 'HMCharacteristicWriteAction', 'HMDurationEvent', 'HMEvent', 'HMEventTrigger', 'HMHome', 'HMHomeAccessControl', 'HMHomeManager', 'HMLocationEvent', 'HMMutableCalendarEvent', 'HMMutableCharacteristicEvent', 'HMMutableCharacteristicThresholdRangeEvent', 'HMMutableDurationEvent', 'HMMutableLocationEvent', 'HMMutablePresenceEvent', 'HMMutableSignificantTimeEvent', 'HMNetworkConfigurationProfile', 'HMNumberRange', 'HMPresenceEvent', 'HMRoom', 'HMService', 'HMServiceGroup', 'HMSignificantTimeEvent', 'HMTimeEvent', 'HMTimerTrigger', 'HMTrigger', 'HMUser', 'HMZone', 'ICCameraDevice', 'ICCameraFile', 'ICCameraFolder', 'ICCameraItem', 'ICDevice', 'ICDeviceBrowser', 'ICScannerBandData', 'ICScannerDevice', 'ICScannerFeature', 'ICScannerFeatureBoolean', 'ICScannerFeatureEnumeration', 'ICScannerFeatureRange', 'ICScannerFeatureTemplate', 'ICScannerFunctionalUnit', 'ICScannerFunctionalUnitDocumentFeeder', 'ICScannerFunctionalUnitFlatbed', 'ICScannerFunctionalUnitNegativeTransparency', 'ICScannerFunctionalUnitPositiveTransparency', 'ILCallClassificationRequest', 'ILCallCommunication', 'ILClassificationRequest', 'ILClassificationResponse', 'ILClassificationUIExtensionContext', 'ILClassificationUIExtensionViewController', 'ILCommunication', 'ILMessageClassificationRequest', 'ILMessageCommunication', 'ILMessageFilterExtension', 'ILMessageFilterExtensionContext', 'ILMessageFilterQueryRequest', 'ILMessageFilterQueryResponse', 'ILNetworkResponse', 'INAccountTypeResolutionResult', 'INActivateCarSignalIntent', 'INActivateCarSignalIntentResponse', 'INAddMediaIntent', 'INAddMediaIntentResponse', 'INAddMediaMediaDestinationResolutionResult', 'INAddMediaMediaItemResolutionResult', 'INAddTasksIntent', 'INAddTasksIntentResponse', 'INAddTasksTargetTaskListResolutionResult', 'INAddTasksTemporalEventTriggerResolutionResult', 'INAirline', 'INAirport', 'INAirportGate', 'INAppendToNoteIntent', 'INAppendToNoteIntentResponse', 'INBalanceAmount', 'INBalanceTypeResolutionResult', 'INBillDetails', 'INBillPayee', 'INBillPayeeResolutionResult', 'INBillTypeResolutionResult', 'INBoatReservation', 'INBoatTrip', 'INBookRestaurantReservationIntent', 'INBookRestaurantReservationIntentResponse', 'INBooleanResolutionResult', 'INBusReservation', 'INBusTrip', 'INCallCapabilityResolutionResult', 'INCallDestinationTypeResolutionResult', 'INCallRecord', 'INCallRecordFilter', 'INCallRecordResolutionResult', 'INCallRecordTypeOptionsResolutionResult', 'INCallRecordTypeResolutionResult', 'INCancelRideIntent', 'INCancelRideIntentResponse', 'INCancelWorkoutIntent', 'INCancelWorkoutIntentResponse', 'INCar', 'INCarAirCirculationModeResolutionResult', 'INCarAudioSourceResolutionResult', 'INCarDefrosterResolutionResult', 'INCarHeadUnit', 'INCarSeatResolutionResult', 'INCarSignalOptionsResolutionResult', 'INCreateNoteIntent', 'INCreateNoteIntentResponse', 'INCreateTaskListIntent', 'INCreateTaskListIntentResponse', 'INCurrencyAmount', 'INCurrencyAmountResolutionResult', 'INDailyRoutineRelevanceProvider', 'INDateComponentsRange', 'INDateComponentsRangeResolutionResult', 'INDateComponentsResolutionResult', 'INDateRelevanceProvider', 'INDateSearchTypeResolutionResult', 'INDefaultCardTemplate', 'INDeleteTasksIntent', 'INDeleteTasksIntentResponse', 'INDeleteTasksTaskListResolutionResult', 'INDeleteTasksTaskResolutionResult', 'INDoubleResolutionResult', 'INEndWorkoutIntent', 'INEndWorkoutIntentResponse', 'INEnergyResolutionResult', 'INEnumResolutionResult', 'INExtension', 'INFile', 'INFileResolutionResult', 'INFlight', 'INFlightReservation', 'INGetAvailableRestaurantReservationBookingDefaultsIntent', 'INGetAvailableRestaurantReservationBookingDefaultsIntentResponse', 'INGetAvailableRestaurantReservationBookingsIntent', 'INGetAvailableRestaurantReservationBookingsIntentResponse', 'INGetCarLockStatusIntent', 'INGetCarLockStatusIntentResponse', 'INGetCarPowerLevelStatusIntent', 'INGetCarPowerLevelStatusIntentResponse', 'INGetReservationDetailsIntent', 'INGetReservationDetailsIntentResponse', 'INGetRestaurantGuestIntent', 'INGetRestaurantGuestIntentResponse', 'INGetRideStatusIntent', 'INGetRideStatusIntentResponse', 'INGetUserCurrentRestaurantReservationBookingsIntent', 'INGetUserCurrentRestaurantReservationBookingsIntentResponse', 'INGetVisualCodeIntent', 'INGetVisualCodeIntentResponse', 'INImage', 'INImageNoteContent', 'INIntegerResolutionResult', 'INIntent', 'INIntentResolutionResult', 'INIntentResponse', 'INInteraction', 'INLengthResolutionResult', 'INListCarsIntent', 'INListCarsIntentResponse', 'INListRideOptionsIntent', 'INListRideOptionsIntentResponse', 'INLocationRelevanceProvider', 'INLocationSearchTypeResolutionResult', 'INLodgingReservation', 'INMassResolutionResult', 'INMediaAffinityTypeResolutionResult', 'INMediaDestination', 'INMediaDestinationResolutionResult', 'INMediaItem', 'INMediaItemResolutionResult', 'INMediaSearch', 'INMediaUserContext', 'INMessage', 'INMessageAttributeOptionsResolutionResult', 'INMessageAttributeResolutionResult', 'INNote', 'INNoteContent', 'INNoteContentResolutionResult', 'INNoteContentTypeResolutionResult', 'INNoteResolutionResult', 'INNotebookItemTypeResolutionResult', 'INObject', 'INObjectCollection', 'INObjectResolutionResult', 'INObjectSection', 'INOutgoingMessageTypeResolutionResult', 'INParameter', 'INPauseWorkoutIntent', 'INPauseWorkoutIntentResponse', 'INPayBillIntent', 'INPayBillIntentResponse', 'INPaymentAccount', 'INPaymentAccountResolutionResult', 'INPaymentAmount', 'INPaymentAmountResolutionResult', 'INPaymentMethod', 'INPaymentMethodResolutionResult', 'INPaymentRecord', 'INPaymentStatusResolutionResult', 'INPerson', 'INPersonHandle', 'INPersonResolutionResult', 'INPlacemarkResolutionResult', 'INPlayMediaIntent', 'INPlayMediaIntentResponse', 'INPlayMediaMediaItemResolutionResult', 'INPlayMediaPlaybackSpeedResolutionResult', 'INPlaybackQueueLocationResolutionResult', 'INPlaybackRepeatModeResolutionResult', 'INPreferences', 'INPriceRange', 'INRadioTypeResolutionResult', 'INRecurrenceRule', 'INRelativeReferenceResolutionResult', 'INRelativeSettingResolutionResult', 'INRelevanceProvider', 'INRelevantShortcut', 'INRelevantShortcutStore', 'INRentalCar', 'INRentalCarReservation', 'INRequestPaymentCurrencyAmountResolutionResult', 'INRequestPaymentIntent', 'INRequestPaymentIntentResponse', 'INRequestPaymentPayerResolutionResult', 'INRequestRideIntent', 'INRequestRideIntentResponse', 'INReservation', 'INReservationAction', 'INRestaurant', 'INRestaurantGuest', 'INRestaurantGuestDisplayPreferences', 'INRestaurantGuestResolutionResult', 'INRestaurantOffer', 'INRestaurantReservation', 'INRestaurantReservationBooking', 'INRestaurantReservationUserBooking', 'INRestaurantResolutionResult', 'INResumeWorkoutIntent', 'INResumeWorkoutIntentResponse', 'INRideCompletionStatus', 'INRideDriver', 'INRideFareLineItem', 'INRideOption', 'INRidePartySizeOption', 'INRideStatus', 'INRideVehicle', 'INSaveProfileInCarIntent', 'INSaveProfileInCarIntentResponse', 'INSearchCallHistoryIntent', 'INSearchCallHistoryIntentResponse', 'INSearchForAccountsIntent', 'INSearchForAccountsIntentResponse', 'INSearchForBillsIntent', 'INSearchForBillsIntentResponse', 'INSearchForMediaIntent', 'INSearchForMediaIntentResponse', 'INSearchForMediaMediaItemResolutionResult', 'INSearchForMessagesIntent', 'INSearchForMessagesIntentResponse', 'INSearchForNotebookItemsIntent', 'INSearchForNotebookItemsIntentResponse', 'INSearchForPhotosIntent', 'INSearchForPhotosIntentResponse', 'INSeat', 'INSendMessageAttachment', 'INSendMessageIntent', 'INSendMessageIntentResponse', 'INSendMessageRecipientResolutionResult', 'INSendPaymentCurrencyAmountResolutionResult', 'INSendPaymentIntent', 'INSendPaymentIntentResponse', 'INSendPaymentPayeeResolutionResult', 'INSendRideFeedbackIntent', 'INSendRideFeedbackIntentResponse', 'INSetAudioSourceInCarIntent', 'INSetAudioSourceInCarIntentResponse', 'INSetCarLockStatusIntent', 'INSetCarLockStatusIntentResponse', 'INSetClimateSettingsInCarIntent', 'INSetClimateSettingsInCarIntentResponse', 'INSetDefrosterSettingsInCarIntent', 'INSetDefrosterSettingsInCarIntentResponse', 'INSetMessageAttributeIntent', 'INSetMessageAttributeIntentResponse', 'INSetProfileInCarIntent', 'INSetProfileInCarIntentResponse', 'INSetRadioStationIntent', 'INSetRadioStationIntentResponse', 'INSetSeatSettingsInCarIntent', 'INSetSeatSettingsInCarIntentResponse', 'INSetTaskAttributeIntent', 'INSetTaskAttributeIntentResponse', 'INSetTaskAttributeTemporalEventTriggerResolutionResult', 'INShortcut', 'INSnoozeTasksIntent', 'INSnoozeTasksIntentResponse', 'INSnoozeTasksTaskResolutionResult', 'INSpatialEventTrigger', 'INSpatialEventTriggerResolutionResult', 'INSpeakableString', 'INSpeakableStringResolutionResult', 'INSpeedResolutionResult', 'INStartAudioCallIntent', 'INStartAudioCallIntentResponse', 'INStartCallCallCapabilityResolutionResult', 'INStartCallCallRecordToCallBackResolutionResult', 'INStartCallContactResolutionResult', 'INStartCallIntent', 'INStartCallIntentResponse', 'INStartPhotoPlaybackIntent', 'INStartPhotoPlaybackIntentResponse', 'INStartVideoCallIntent', 'INStartVideoCallIntentResponse', 'INStartWorkoutIntent', 'INStartWorkoutIntentResponse', 'INStringResolutionResult', 'INTask', 'INTaskList', 'INTaskListResolutionResult', 'INTaskPriorityResolutionResult', 'INTaskResolutionResult', 'INTaskStatusResolutionResult', 'INTemperatureResolutionResult', 'INTemporalEventTrigger', 'INTemporalEventTriggerResolutionResult', 'INTemporalEventTriggerTypeOptionsResolutionResult', 'INTermsAndConditions', 'INTextNoteContent', 'INTicketedEvent', 'INTicketedEventReservation', 'INTimeIntervalResolutionResult', 'INTrainReservation', 'INTrainTrip', 'INTransferMoneyIntent', 'INTransferMoneyIntentResponse', 'INUIAddVoiceShortcutButton', 'INUIAddVoiceShortcutViewController', 'INUIEditVoiceShortcutViewController', 'INURLResolutionResult', 'INUpcomingMediaManager', 'INUpdateMediaAffinityIntent', 'INUpdateMediaAffinityIntentResponse', 'INUpdateMediaAffinityMediaItemResolutionResult', 'INUserContext', 'INVisualCodeTypeResolutionResult', 'INVocabulary', 'INVoiceShortcut', 'INVoiceShortcutCenter', 'INVolumeResolutionResult', 'INWorkoutGoalUnitTypeResolutionResult', 'INWorkoutLocationTypeResolutionResult', 'IOSurface', 'JSContext', 'JSManagedValue', 'JSValue', 'JSVirtualMachine', 'LAContext', 'LPLinkMetadata', 'LPLinkView', 'LPMetadataProvider', 'MCAdvertiserAssistant', 'MCBrowserViewController', 'MCNearbyServiceAdvertiser', 'MCNearbyServiceBrowser', 'MCPeerID', 'MCSession', 'MDLAnimatedMatrix4x4', 'MDLAnimatedQuaternion', 'MDLAnimatedQuaternionArray', 'MDLAnimatedScalar', 'MDLAnimatedScalarArray', 'MDLAnimatedValue', 'MDLAnimatedVector2', 'MDLAnimatedVector3', 'MDLAnimatedVector3Array', 'MDLAnimatedVector4', 'MDLAnimationBindComponent', 'MDLAreaLight', 'MDLAsset', 'MDLBundleAssetResolver', 'MDLCamera', 'MDLCheckerboardTexture', 'MDLColorSwatchTexture', 'MDLLight', 'MDLLightProbe', 'MDLMaterial', 'MDLMaterialProperty', 'MDLMaterialPropertyConnection', 'MDLMaterialPropertyGraph', 'MDLMaterialPropertyNode', 'MDLMatrix4x4Array', 'MDLMesh', 'MDLMeshBufferData', 'MDLMeshBufferDataAllocator', 'MDLMeshBufferMap', 'MDLMeshBufferZoneDefault', 'MDLNoiseTexture', 'MDLNormalMapTexture', 'MDLObject', 'MDLObjectContainer', 'MDLPackedJointAnimation', 'MDLPathAssetResolver', 'MDLPhotometricLight', 'MDLPhysicallyPlausibleLight', 'MDLPhysicallyPlausibleScatteringFunction', 'MDLRelativeAssetResolver', 'MDLScatteringFunction', 'MDLSkeleton', 'MDLSkyCubeTexture', 'MDLStereoscopicCamera', 'MDLSubmesh', 'MDLSubmeshTopology', 'MDLTexture', 'MDLTextureFilter', 'MDLTextureSampler', 'MDLTransform', 'MDLTransformMatrixOp', 'MDLTransformOrientOp', 'MDLTransformRotateOp', 'MDLTransformRotateXOp', 'MDLTransformRotateYOp', 'MDLTransformRotateZOp', 'MDLTransformScaleOp', 'MDLTransformStack', 'MDLTransformTranslateOp', 'MDLURLTexture', 'MDLVertexAttribute', 'MDLVertexAttributeData', 'MDLVertexBufferLayout', 'MDLVertexDescriptor', 'MDLVoxelArray', 'MFMailComposeViewController', 'MFMessageComposeViewController', 'MIDICIDeviceInfo', 'MIDICIDiscoveredNode', 'MIDICIDiscoveryManager', 'MIDICIProfile', 'MIDICIProfileState', 'MIDICIResponder', 'MIDICISession', 'MIDINetworkConnection', 'MIDINetworkHost', 'MIDINetworkSession', 'MKAnnotationView', 'MKCircle', 'MKCircleRenderer', 'MKCircleView', 'MKClusterAnnotation', 'MKCompassButton', 'MKDirections', 'MKDirectionsRequest', 'MKDirectionsResponse', 'MKDistanceFormatter', 'MKETAResponse', 'MKGeoJSONDecoder', 'MKGeoJSONFeature', 'MKGeodesicPolyline', 'MKGradientPolylineRenderer', 'MKLocalPointsOfInterestRequest', 'MKLocalSearch', 'MKLocalSearchCompleter', 'MKLocalSearchCompletion', 'MKLocalSearchRequest', 'MKLocalSearchResponse', 'MKMapCamera', 'MKMapCameraBoundary', 'MKMapCameraZoomRange', 'MKMapItem', 'MKMapSnapshot', 'MKMapSnapshotOptions', 'MKMapSnapshotter', 'MKMapView', 'MKMarkerAnnotationView', 'MKMultiPoint', 'MKMultiPolygon', 'MKMultiPolygonRenderer', 'MKMultiPolyline', 'MKMultiPolylineRenderer', 'MKOverlayPathRenderer', 'MKOverlayPathView', 'MKOverlayRenderer', 'MKOverlayView', 'MKPinAnnotationView', 'MKPitchControl', 'MKPlacemark', 'MKPointAnnotation', 'MKPointOfInterestFilter', 'MKPolygon', 'MKPolygonRenderer', 'MKPolygonView', 'MKPolyline', 'MKPolylineRenderer', 'MKPolylineView', 'MKReverseGeocoder', 'MKRoute', 'MKRouteStep', 'MKScaleView', 'MKShape', 'MKTileOverlay', 'MKTileOverlayRenderer', 'MKUserLocation', 'MKUserLocationView', 'MKUserTrackingBarButtonItem', 'MKUserTrackingButton', 'MKZoomControl', 'MLArrayBatchProvider', 'MLCActivationDescriptor', 'MLCActivationLayer', 'MLCArithmeticLayer', 'MLCBatchNormalizationLayer', 'MLCConcatenationLayer', 'MLCConvolutionDescriptor', 'MLCConvolutionLayer', 'MLCDevice', 'MLCDropoutLayer', 'MLCEmbeddingDescriptor', 'MLCEmbeddingLayer', 'MLCFullyConnectedLayer', 'MLCGramMatrixLayer', 'MLCGraph', 'MLCGroupNormalizationLayer', 'MLCInferenceGraph', 'MLCInstanceNormalizationLayer', 'MLCLSTMDescriptor', 'MLCLSTMLayer', 'MLCLayer', 'MLCLayerNormalizationLayer', 'MLCLossDescriptor', 'MLCLossLayer', 'MLCMatMulDescriptor', 'MLCMatMulLayer', 'MLCMultiheadAttentionDescriptor', 'MLCMultiheadAttentionLayer', 'MLCPaddingLayer', 'MLCPoolingDescriptor', 'MLCPoolingLayer', 'MLCReductionLayer', 'MLCReshapeLayer', 'MLCSliceLayer', 'MLCSoftmaxLayer', 'MLCSplitLayer', 'MLCTensor', 'MLCTensorData', 'MLCTensorDescriptor', 'MLCTensorOptimizerDeviceData', 'MLCTensorParameter', 'MLCTrainingGraph', 'MLCTransposeLayer', 'MLCUpsampleLayer', 'MLCYOLOLossDescriptor', 'MLCYOLOLossLayer', 'MLDictionaryConstraint', 'MLDictionaryFeatureProvider', 'MLFeatureDescription', 'MLFeatureValue', 'MLImageConstraint', 'MLImageSize', 'MLImageSizeConstraint', 'MLKey', 'MLMetricKey', 'MLModel', 'MLModelCollection', 'MLModelCollectionEntry', 'MLModelConfiguration', 'MLModelDescription', 'MLMultiArray', 'MLMultiArrayConstraint', 'MLMultiArrayShapeConstraint', 'MLNumericConstraint', 'MLParameterDescription', 'MLParameterKey', 'MLPredictionOptions', 'MLSequence', 'MLSequenceConstraint', 'MLTask', 'MLUpdateContext', 'MLUpdateProgressHandlers', 'MLUpdateTask', 'MPChangeLanguageOptionCommandEvent', 'MPChangePlaybackPositionCommand', 'MPChangePlaybackPositionCommandEvent', 'MPChangePlaybackRateCommand', 'MPChangePlaybackRateCommandEvent', 'MPChangeRepeatModeCommand', 'MPChangeRepeatModeCommandEvent', 'MPChangeShuffleModeCommand', 'MPChangeShuffleModeCommandEvent', 'MPContentItem', 'MPFeedbackCommand', 'MPFeedbackCommandEvent', 'MPMediaEntity', 'MPMediaItem', 'MPMediaItemArtwork', 'MPMediaItemCollection', 'MPMediaLibrary', 'MPMediaPickerController', 'MPMediaPlaylist', 'MPMediaPlaylistCreationMetadata', 'MPMediaPredicate', 'MPMediaPropertyPredicate', 'MPMediaQuery', 'MPMediaQuerySection', 'MPMovieAccessLog', 'MPMovieAccessLogEvent', 'MPMovieErrorLog', 'MPMovieErrorLogEvent', 'MPMoviePlayerController', 'MPMoviePlayerViewController', 'MPMusicPlayerApplicationController', 'MPMusicPlayerController', 'MPMusicPlayerControllerMutableQueue', 'MPMusicPlayerControllerQueue', 'MPMusicPlayerMediaItemQueueDescriptor', 'MPMusicPlayerPlayParameters', 'MPMusicPlayerPlayParametersQueueDescriptor', 'MPMusicPlayerQueueDescriptor', 'MPMusicPlayerStoreQueueDescriptor', 'MPNowPlayingInfoCenter', 'MPNowPlayingInfoLanguageOption', 'MPNowPlayingInfoLanguageOptionGroup', 'MPNowPlayingSession', 'MPPlayableContentManager', 'MPPlayableContentManagerContext', 'MPRatingCommand', 'MPRatingCommandEvent', 'MPRemoteCommand', 'MPRemoteCommandCenter', 'MPRemoteCommandEvent', 'MPSGraph', 'MPSGraphConvolution2DOpDescriptor', 'MPSGraphDepthwiseConvolution2DOpDescriptor', 'MPSGraphDevice', 'MPSGraphExecutionDescriptor', 'MPSGraphOperation', 'MPSGraphPooling2DOpDescriptor', 'MPSGraphShapedType', 'MPSGraphTensor', 'MPSGraphTensorData', 'MPSGraphVariableOp', 'MPSeekCommandEvent', 'MPSkipIntervalCommand', 'MPSkipIntervalCommandEvent', 'MPTimedMetadata', 'MPVolumeView', 'MSConversation', 'MSMessage', 'MSMessageLayout', 'MSMessageLiveLayout', 'MSMessageTemplateLayout', 'MSMessagesAppViewController', 'MSServiceAccount', 'MSSession', 'MSSetupSession', 'MSSticker', 'MSStickerBrowserView', 'MSStickerBrowserViewController', 'MSStickerView', 'MTKMesh', 'MTKMeshBuffer', 'MTKMeshBufferAllocator', 'MTKSubmesh', 'MTKTextureLoader', 'MTKView', 'MTLAccelerationStructureBoundingBoxGeometryDescriptor', 'MTLAccelerationStructureDescriptor', 'MTLAccelerationStructureGeometryDescriptor', 'MTLAccelerationStructureTriangleGeometryDescriptor', 'MTLArgument', 'MTLArgumentDescriptor', 'MTLArrayType', 'MTLAttribute', 'MTLAttributeDescriptor', 'MTLAttributeDescriptorArray', 'MTLBinaryArchiveDescriptor', 'MTLBlitPassDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptorArray', 'MTLBufferLayoutDescriptor', 'MTLBufferLayoutDescriptorArray', 'MTLCaptureDescriptor', 'MTLCaptureManager', 'MTLCommandBufferDescriptor', 'MTLCompileOptions', 'MTLComputePassDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptorArray', 'MTLComputePipelineDescriptor', 'MTLComputePipelineReflection', 'MTLCounterSampleBufferDescriptor', 'MTLDepthStencilDescriptor', 'MTLFunctionConstant', 'MTLFunctionConstantValues', 'MTLFunctionDescriptor', 'MTLHeapDescriptor', 'MTLIndirectCommandBufferDescriptor', 'MTLInstanceAccelerationStructureDescriptor', 'MTLIntersectionFunctionDescriptor', 'MTLIntersectionFunctionTableDescriptor', 'MTLLinkedFunctions', 'MTLPipelineBufferDescriptor', 'MTLPipelineBufferDescriptorArray', 'MTLPointerType', 'MTLPrimitiveAccelerationStructureDescriptor', 'MTLRasterizationRateLayerArray', 'MTLRasterizationRateLayerDescriptor', 'MTLRasterizationRateMapDescriptor', 'MTLRasterizationRateSampleArray', 'MTLRenderPassAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptorArray', 'MTLRenderPassDepthAttachmentDescriptor', 'MTLRenderPassDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptorArray', 'MTLRenderPassStencilAttachmentDescriptor', 'MTLRenderPipelineColorAttachmentDescriptor', 'MTLRenderPipelineColorAttachmentDescriptorArray', 'MTLRenderPipelineDescriptor', 'MTLRenderPipelineReflection', 'MTLResourceStatePassDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptorArray', 'MTLSamplerDescriptor', 'MTLSharedEventHandle', 'MTLSharedEventListener', 'MTLSharedTextureHandle', 'MTLStageInputOutputDescriptor', 'MTLStencilDescriptor', 'MTLStructMember', 'MTLStructType', 'MTLTextureDescriptor', 'MTLTextureReferenceType', 'MTLTileRenderPipelineColorAttachmentDescriptor', 'MTLTileRenderPipelineColorAttachmentDescriptorArray', 'MTLTileRenderPipelineDescriptor', 'MTLType', 'MTLVertexAttribute', 'MTLVertexAttributeDescriptor', 'MTLVertexAttributeDescriptorArray', 'MTLVertexBufferLayoutDescriptor', 'MTLVertexBufferLayoutDescriptorArray', 'MTLVertexDescriptor', 'MTLVisibleFunctionTableDescriptor', 'MXAnimationMetric', 'MXAppExitMetric', 'MXAppLaunchMetric', 'MXAppResponsivenessMetric', 'MXAppRunTimeMetric', 'MXAverage', 'MXBackgroundExitData', 'MXCPUExceptionDiagnostic', 'MXCPUMetric', 'MXCallStackTree', 'MXCellularConditionMetric', 'MXCrashDiagnostic', 'MXDiagnostic', 'MXDiagnosticPayload', 'MXDiskIOMetric', 'MXDiskWriteExceptionDiagnostic', 'MXDisplayMetric', 'MXForegroundExitData', 'MXGPUMetric', 'MXHangDiagnostic', 'MXHistogram', 'MXHistogramBucket', 'MXLocationActivityMetric', 'MXMemoryMetric', 'MXMetaData', 'MXMetric', 'MXMetricManager', 'MXMetricPayload', 'MXNetworkTransferMetric', 'MXSignpostIntervalData', 'MXSignpostMetric', 'MXUnitAveragePixelLuminance', 'MXUnitSignalBars', 'MyClass', 'NCWidgetController', 'NEAppProxyFlow', 'NEAppProxyProvider', 'NEAppProxyProviderManager', 'NEAppProxyTCPFlow', 'NEAppProxyUDPFlow', 'NEAppPushManager', 'NEAppPushProvider', 'NEAppRule', 'NEDNSOverHTTPSSettings', 'NEDNSOverTLSSettings', 'NEDNSProxyManager', 'NEDNSProxyProvider', 'NEDNSProxyProviderProtocol', 'NEDNSSettings', 'NEDNSSettingsManager', 'NEEvaluateConnectionRule', 'NEFilterBrowserFlow', 'NEFilterControlProvider', 'NEFilterControlVerdict', 'NEFilterDataProvider', 'NEFilterDataVerdict', 'NEFilterFlow', 'NEFilterManager', 'NEFilterNewFlowVerdict', 'NEFilterPacketContext', 'NEFilterPacketProvider', 'NEFilterProvider', 'NEFilterProviderConfiguration', 'NEFilterRemediationVerdict', 'NEFilterReport', 'NEFilterRule', 'NEFilterSettings', 'NEFilterSocketFlow', 'NEFilterVerdict', 'NEFlowMetaData', 'NEHotspotConfiguration', 'NEHotspotConfigurationManager', 'NEHotspotEAPSettings', 'NEHotspotHS20Settings', 'NEHotspotHelper', 'NEHotspotHelperCommand', 'NEHotspotHelperResponse', 'NEHotspotNetwork', 'NEIPv4Route', 'NEIPv4Settings', 'NEIPv6Route', 'NEIPv6Settings', 'NENetworkRule', 'NEOnDemandRule', 'NEOnDemandRuleConnect', 'NEOnDemandRuleDisconnect', 'NEOnDemandRuleEvaluateConnection', 'NEOnDemandRuleIgnore', 'NEPacket', 'NEPacketTunnelFlow', 'NEPacketTunnelNetworkSettings', 'NEPacketTunnelProvider', 'NEProvider', 'NEProxyServer', 'NEProxySettings', 'NETransparentProxyManager', 'NETransparentProxyNetworkSettings', 'NETransparentProxyProvider', 'NETunnelNetworkSettings', 'NETunnelProvider', 'NETunnelProviderManager', 'NETunnelProviderProtocol', 'NETunnelProviderSession', 'NEVPNConnection', 'NEVPNIKEv2SecurityAssociationParameters', 'NEVPNManager', 'NEVPNProtocol', 'NEVPNProtocolIKEv2', 'NEVPNProtocolIPSec', 'NFCISO15693CustomCommandConfiguration', 'NFCISO15693ReadMultipleBlocksConfiguration', 'NFCISO15693ReaderSession', 'NFCISO7816APDU', 'NFCNDEFMessage', 'NFCNDEFPayload', 'NFCNDEFReaderSession', 'NFCReaderSession', 'NFCTagCommandConfiguration', 'NFCTagReaderSession', 'NFCVASCommandConfiguration', 'NFCVASReaderSession', 'NFCVASResponse', 'NIConfiguration', 'NIDiscoveryToken', 'NINearbyObject', 'NINearbyPeerConfiguration', 'NISession', 'NKAssetDownload', 'NKIssue', 'NKLibrary', 'NLEmbedding', 'NLGazetteer', 'NLLanguageRecognizer', 'NLModel', 'NLModelConfiguration', 'NLTagger', 'NLTokenizer', 'NSArray', 'NSAssertionHandler', 'NSAsynchronousFetchRequest', 'NSAsynchronousFetchResult', 'NSAtomicStore', 'NSAtomicStoreCacheNode', 'NSAttributeDescription', 'NSAttributedString', 'NSAutoreleasePool', 'NSBatchDeleteRequest', 'NSBatchDeleteResult', 'NSBatchInsertRequest', 'NSBatchInsertResult', 'NSBatchUpdateRequest', 'NSBatchUpdateResult', 'NSBlockOperation', 'NSBundle', 'NSBundleResourceRequest', 'NSByteCountFormatter', 'NSCache', 'NSCachedURLResponse', 'NSCalendar', 'NSCharacterSet', 'NSCoder', 'NSCollectionLayoutAnchor', 'NSCollectionLayoutBoundarySupplementaryItem', 'NSCollectionLayoutDecorationItem', 'NSCollectionLayoutDimension', 'NSCollectionLayoutEdgeSpacing', 'NSCollectionLayoutGroup', 'NSCollectionLayoutGroupCustomItem', 'NSCollectionLayoutItem', 'NSCollectionLayoutSection', 'NSCollectionLayoutSize', 'NSCollectionLayoutSpacing', 'NSCollectionLayoutSupplementaryItem', 'NSComparisonPredicate', 'NSCompoundPredicate', 'NSCondition', 'NSConditionLock', 'NSConstantString', 'NSConstraintConflict', 'NSCoreDataCoreSpotlightDelegate', 'NSCountedSet', 'NSData', 'NSDataAsset', 'NSDataDetector', 'NSDate', 'NSDateComponents', 'NSDateComponentsFormatter', 'NSDateFormatter', 'NSDateInterval', 'NSDateIntervalFormatter', 'NSDecimalNumber', 'NSDecimalNumberHandler', 'NSDerivedAttributeDescription', 'NSDictionary', 'NSDiffableDataSourceSectionSnapshot', 'NSDiffableDataSourceSectionTransaction', 'NSDiffableDataSourceSnapshot', 'NSDiffableDataSourceTransaction', 'NSDimension', 'NSDirectoryEnumerator', 'NSEnergyFormatter', 'NSEntityDescription', 'NSEntityMapping', 'NSEntityMigrationPolicy', 'NSEnumerator', 'NSError', 'NSEvent', 'NSException', 'NSExpression', 'NSExpressionDescription', 'NSExtensionContext', 'NSExtensionItem', 'NSFetchIndexDescription', 'NSFetchIndexElementDescription', 'NSFetchRequest', 'NSFetchRequestExpression', 'NSFetchedPropertyDescription', 'NSFetchedResultsController', 'NSFileAccessIntent', 'NSFileCoordinator', 'NSFileHandle', 'NSFileManager', 'NSFileProviderDomain', 'NSFileProviderExtension', 'NSFileProviderManager', 'NSFileProviderService', 'NSFileSecurity', 'NSFileVersion', 'NSFileWrapper', 'NSFormatter', 'NSHTTPCookie', 'NSHTTPCookieStorage', 'NSHTTPURLResponse', 'NSHashTable', 'NSISO8601DateFormatter', 'NSIncrementalStore', 'NSIncrementalStoreNode', 'NSIndexPath', 'NSIndexSet', 'NSInputStream', 'NSInvocation', 'NSInvocationOperation', 'NSItemProvider', 'NSJSONSerialization', 'NSKeyedArchiver', 'NSKeyedUnarchiver', 'NSLayoutAnchor', 'NSLayoutConstraint', 'NSLayoutDimension', 'NSLayoutManager', 'NSLayoutXAxisAnchor', 'NSLayoutYAxisAnchor', 'NSLengthFormatter', 'NSLinguisticTagger', 'NSListFormatter', 'NSLocale', 'NSLock', 'NSMachPort', 'NSManagedObject', 'NSManagedObjectContext', 'NSManagedObjectID', 'NSManagedObjectModel', 'NSMapTable', 'NSMappingModel', 'NSMassFormatter', 'NSMeasurement', 'NSMeasurementFormatter', 'NSMenuToolbarItem', 'NSMergeConflict', 'NSMergePolicy', 'NSMessagePort', 'NSMetadataItem', 'NSMetadataQuery', 'NSMetadataQueryAttributeValueTuple', 'NSMetadataQueryResultGroup', 'NSMethodSignature', 'NSMigrationManager', 'NSMutableArray', 'NSMutableAttributedString', 'NSMutableCharacterSet', 'NSMutableData', 'NSMutableDictionary', 'NSMutableIndexSet', 'NSMutableOrderedSet', 'NSMutableParagraphStyle', 'NSMutableSet', 'NSMutableString', 'NSMutableURLRequest', 'NSNetService', 'NSNetServiceBrowser', 'NSNotification', 'NSNotificationCenter', 'NSNotificationQueue', 'NSNull', 'NSNumber', 'NSNumberFormatter', 'NSObject', 'NSOperation', 'NSOperationQueue', 'NSOrderedCollectionChange', 'NSOrderedCollectionDifference', 'NSOrderedSet', 'NSOrthography', 'NSOutputStream', 'NSParagraphStyle', 'NSPersistentCloudKitContainer', 'NSPersistentCloudKitContainerEvent', 'NSPersistentCloudKitContainerEventRequest', 'NSPersistentCloudKitContainerEventResult', 'NSPersistentCloudKitContainerOptions', 'NSPersistentContainer', 'NSPersistentHistoryChange', 'NSPersistentHistoryChangeRequest', 'NSPersistentHistoryResult', 'NSPersistentHistoryToken', 'NSPersistentHistoryTransaction', 'NSPersistentStore', 'NSPersistentStoreAsynchronousResult', 'NSPersistentStoreCoordinator', 'NSPersistentStoreDescription', 'NSPersistentStoreRequest', 'NSPersistentStoreResult', 'NSPersonNameComponents', 'NSPersonNameComponentsFormatter', 'NSPipe', 'NSPointerArray', 'NSPointerFunctions', 'NSPort', 'NSPredicate', 'NSProcessInfo', 'NSProgress', 'NSPropertyDescription', 'NSPropertyListSerialization', 'NSPropertyMapping', 'NSProxy', 'NSPurgeableData', 'NSQueryGenerationToken', 'NSRecursiveLock', 'NSRegularExpression', 'NSRelationshipDescription', 'NSRelativeDateTimeFormatter', 'NSRunLoop', 'NSSaveChangesRequest', 'NSScanner', 'NSSecureUnarchiveFromDataTransformer', 'NSSet', 'NSShadow', 'NSSharingServicePickerToolbarItem', 'NSSharingServicePickerTouchBarItem', 'NSSimpleCString', 'NSSocketPort', 'NSSortDescriptor', 'NSStream', 'NSString', 'NSStringDrawingContext', 'NSTextAttachment', 'NSTextCheckingResult', 'NSTextContainer', 'NSTextStorage', 'NSTextTab', 'NSThread', 'NSTimeZone', 'NSTimer', 'NSToolbarItem', 'NSURL', 'NSURLAuthenticationChallenge', 'NSURLCache', 'NSURLComponents', 'NSURLConnection', 'NSURLCredential', 'NSURLCredentialStorage', 'NSURLProtectionSpace', 'NSURLProtocol', 'NSURLQueryItem', 'NSURLRequest', 'NSURLResponse', 'NSURLSession', 'NSURLSessionConfiguration', 'NSURLSessionDataTask', 'NSURLSessionDownloadTask', 'NSURLSessionStreamTask', 'NSURLSessionTask', 'NSURLSessionTaskMetrics', 'NSURLSessionTaskTransactionMetrics', 'NSURLSessionUploadTask', 'NSURLSessionWebSocketMessage', 'NSURLSessionWebSocketTask', 'NSUUID', 'NSUbiquitousKeyValueStore', 'NSUndoManager', 'NSUnit', 'NSUnitAcceleration', 'NSUnitAngle', 'NSUnitArea', 'NSUnitConcentrationMass', 'NSUnitConverter', 'NSUnitConverterLinear', 'NSUnitDispersion', 'NSUnitDuration', 'NSUnitElectricCharge', 'NSUnitElectricCurrent', 'NSUnitElectricPotentialDifference', 'NSUnitElectricResistance', 'NSUnitEnergy', 'NSUnitFrequency', 'NSUnitFuelEfficiency', 'NSUnitIlluminance', 'NSUnitInformationStorage', 'NSUnitLength', 'NSUnitMass', 'NSUnitPower', 'NSUnitPressure', 'NSUnitSpeed', 'NSUnitTemperature', 'NSUnitVolume', 'NSUserActivity', 'NSUserDefaults', 'NSValue', 'NSValueTransformer', 'NSXMLParser', 'NSXPCCoder', 'NSXPCConnection', 'NSXPCInterface', 'NSXPCListener', 'NSXPCListenerEndpoint', 'NWBonjourServiceEndpoint', 'NWEndpoint', 'NWHostEndpoint', 'NWPath', 'NWTCPConnection', 'NWTLSParameters', 'NWUDPSession', 'OSLogEntry', 'OSLogEntryActivity', 'OSLogEntryBoundary', 'OSLogEntryLog', 'OSLogEntrySignpost', 'OSLogEnumerator', 'OSLogMessageComponent', 'OSLogPosition', 'OSLogStore', 'PDFAction', 'PDFActionGoTo', 'PDFActionNamed', 'PDFActionRemoteGoTo', 'PDFActionResetForm', 'PDFActionURL', 'PDFAnnotation', 'PDFAppearanceCharacteristics', 'PDFBorder', 'PDFDestination', 'PDFDocument', 'PDFOutline', 'PDFPage', 'PDFSelection', 'PDFThumbnailView', 'PDFView', 'PHAdjustmentData', 'PHAsset', 'PHAssetChangeRequest', 'PHAssetCollection', 'PHAssetCollectionChangeRequest', 'PHAssetCreationRequest', 'PHAssetResource', 'PHAssetResourceCreationOptions', 'PHAssetResourceManager', 'PHAssetResourceRequestOptions', 'PHCachingImageManager', 'PHChange', 'PHChangeRequest', 'PHCloudIdentifier', 'PHCollection', 'PHCollectionList', 'PHCollectionListChangeRequest', 'PHContentEditingInput', 'PHContentEditingInputRequestOptions', 'PHContentEditingOutput', 'PHEditingExtensionContext', 'PHFetchOptions', 'PHFetchResult', 'PHFetchResultChangeDetails', 'PHImageManager', 'PHImageRequestOptions', 'PHLivePhoto', 'PHLivePhotoEditingContext', 'PHLivePhotoRequestOptions', 'PHLivePhotoView', 'PHObject', 'PHObjectChangeDetails', 'PHObjectPlaceholder', 'PHPhotoLibrary', 'PHPickerConfiguration', 'PHPickerFilter', 'PHPickerResult', 'PHPickerViewController', 'PHProject', 'PHProjectChangeRequest', 'PHVideoRequestOptions', 'PKAddCarKeyPassConfiguration', 'PKAddPassButton', 'PKAddPassesViewController', 'PKAddPaymentPassRequest', 'PKAddPaymentPassRequestConfiguration', 'PKAddPaymentPassViewController', 'PKAddSecureElementPassConfiguration', 'PKAddSecureElementPassViewController', 'PKAddShareablePassConfiguration', 'PKBarcodeEventConfigurationRequest', 'PKBarcodeEventMetadataRequest', 'PKBarcodeEventMetadataResponse', 'PKBarcodeEventSignatureRequest', 'PKBarcodeEventSignatureResponse', 'PKCanvasView', 'PKContact', 'PKDisbursementAuthorizationController', 'PKDisbursementRequest', 'PKDisbursementVoucher', 'PKDrawing', 'PKEraserTool', 'PKFloatRange', 'PKInk', 'PKInkingTool', 'PKIssuerProvisioningExtensionHandler', 'PKIssuerProvisioningExtensionPassEntry', 'PKIssuerProvisioningExtensionPaymentPassEntry', 'PKIssuerProvisioningExtensionStatus', 'PKLabeledValue', 'PKLassoTool', 'PKObject', 'PKPass', 'PKPassLibrary', 'PKPayment', 'PKPaymentAuthorizationController', 'PKPaymentAuthorizationResult', 'PKPaymentAuthorizationViewController', 'PKPaymentButton', 'PKPaymentInformationEventExtension', 'PKPaymentMerchantSession', 'PKPaymentMethod', 'PKPaymentPass', 'PKPaymentRequest', 'PKPaymentRequestMerchantSessionUpdate', 'PKPaymentRequestPaymentMethodUpdate', 'PKPaymentRequestShippingContactUpdate', 'PKPaymentRequestShippingMethodUpdate', 'PKPaymentRequestUpdate', 'PKPaymentSummaryItem', 'PKPaymentToken', 'PKPushCredentials', 'PKPushPayload', 'PKPushRegistry', 'PKSecureElementPass', 'PKShareablePassMetadata', 'PKShippingMethod', 'PKStroke', 'PKStrokePath', 'PKStrokePoint', 'PKSuicaPassProperties', 'PKTool', 'PKToolPicker', 'PKTransitPassProperties', 'QLFileThumbnailRequest', 'QLPreviewController', 'QLThumbnailGenerationRequest', 'QLThumbnailGenerator', 'QLThumbnailProvider', 'QLThumbnailReply', 'QLThumbnailRepresentation', 'RPBroadcastActivityController', 'RPBroadcastActivityViewController', 'RPBroadcastConfiguration', 'RPBroadcastController', 'RPBroadcastHandler', 'RPBroadcastMP4ClipHandler', 'RPBroadcastSampleHandler', 'RPPreviewViewController', 'RPScreenRecorder', 'RPSystemBroadcastPickerView', 'SCNAccelerationConstraint', 'SCNAction', 'SCNAnimation', 'SCNAnimationEvent', 'SCNAnimationPlayer', 'SCNAudioPlayer', 'SCNAudioSource', 'SCNAvoidOccluderConstraint', 'SCNBillboardConstraint', 'SCNBox', 'SCNCamera', 'SCNCameraController', 'SCNCapsule', 'SCNCone', 'SCNConstraint', 'SCNCylinder', 'SCNDistanceConstraint', 'SCNFloor', 'SCNGeometry', 'SCNGeometryElement', 'SCNGeometrySource', 'SCNGeometryTessellator', 'SCNHitTestResult', 'SCNIKConstraint', 'SCNLevelOfDetail', 'SCNLight', 'SCNLookAtConstraint', 'SCNMaterial', 'SCNMaterialProperty', 'SCNMorpher', 'SCNNode', 'SCNParticlePropertyController', 'SCNParticleSystem', 'SCNPhysicsBallSocketJoint', 'SCNPhysicsBehavior', 'SCNPhysicsBody', 'SCNPhysicsConeTwistJoint', 'SCNPhysicsContact', 'SCNPhysicsField', 'SCNPhysicsHingeJoint', 'SCNPhysicsShape', 'SCNPhysicsSliderJoint', 'SCNPhysicsVehicle', 'SCNPhysicsVehicleWheel', 'SCNPhysicsWorld', 'SCNPlane', 'SCNProgram', 'SCNPyramid', 'SCNReferenceNode', 'SCNRenderer', 'SCNReplicatorConstraint', 'SCNScene', 'SCNSceneSource', 'SCNShape', 'SCNSkinner', 'SCNSliderConstraint', 'SCNSphere', 'SCNTechnique', 'SCNText', 'SCNTimingFunction', 'SCNTorus', 'SCNTransaction', 'SCNTransformConstraint', 'SCNTube', 'SCNView', 'SFAcousticFeature', 'SFAuthenticationSession', 'SFContentBlockerManager', 'SFContentBlockerState', 'SFSafariViewController', 'SFSafariViewControllerConfiguration', 'SFSpeechAudioBufferRecognitionRequest', 'SFSpeechRecognitionRequest', 'SFSpeechRecognitionResult', 'SFSpeechRecognitionTask', 'SFSpeechRecognizer', 'SFSpeechURLRecognitionRequest', 'SFTranscription', 'SFTranscriptionSegment', 'SFVoiceAnalytics', 'SK3DNode', 'SKAction', 'SKAdNetwork', 'SKArcadeService', 'SKAttribute', 'SKAttributeValue', 'SKAudioNode', 'SKCameraNode', 'SKCloudServiceController', 'SKCloudServiceSetupViewController', 'SKConstraint', 'SKCropNode', 'SKDownload', 'SKEffectNode', 'SKEmitterNode', 'SKFieldNode', 'SKKeyframeSequence', 'SKLabelNode', 'SKLightNode', 'SKMutablePayment', 'SKMutableTexture', 'SKNode', 'SKOverlay', 'SKOverlayAppClipConfiguration', 'SKOverlayAppConfiguration', 'SKOverlayConfiguration', 'SKOverlayTransitionContext', 'SKPayment', 'SKPaymentDiscount', 'SKPaymentQueue', 'SKPaymentTransaction', 'SKPhysicsBody', 'SKPhysicsContact', 'SKPhysicsJoint', 'SKPhysicsJointFixed', 'SKPhysicsJointLimit', 'SKPhysicsJointPin', 'SKPhysicsJointSliding', 'SKPhysicsJointSpring', 'SKPhysicsWorld', 'SKProduct', 'SKProductDiscount', 'SKProductStorePromotionController', 'SKProductSubscriptionPeriod', 'SKProductsRequest', 'SKProductsResponse', 'SKRange', 'SKReachConstraints', 'SKReceiptRefreshRequest', 'SKReferenceNode', 'SKRegion', 'SKRenderer', 'SKRequest', 'SKScene', 'SKShader', 'SKShapeNode', 'SKSpriteNode', 'SKStoreProductViewController', 'SKStoreReviewController', 'SKStorefront', 'SKTexture', 'SKTextureAtlas', 'SKTileDefinition', 'SKTileGroup', 'SKTileGroupRule', 'SKTileMapNode', 'SKTileSet', 'SKTransformNode', 'SKTransition', 'SKUniform', 'SKVideoNode', 'SKView', 'SKWarpGeometry', 'SKWarpGeometryGrid', 'SLComposeServiceViewController', 'SLComposeSheetConfigurationItem', 'SLComposeViewController', 'SLRequest', 'SNAudioFileAnalyzer', 'SNAudioStreamAnalyzer', 'SNClassification', 'SNClassificationResult', 'SNClassifySoundRequest', 'SRAmbientLightSample', 'SRApplicationUsage', 'SRDeletionRecord', 'SRDevice', 'SRDeviceUsageReport', 'SRFetchRequest', 'SRFetchResult', 'SRKeyboardMetrics', 'SRKeyboardProbabilityMetric', 'SRMessagesUsageReport', 'SRNotificationUsage', 'SRPhoneUsageReport', 'SRSensorReader', 'SRVisit', 'SRWebUsage', 'SRWristDetection', 'SSReadingList', 'STScreenTimeConfiguration', 'STScreenTimeConfigurationObserver', 'STWebHistory', 'STWebpageController', 'TKBERTLVRecord', 'TKCompactTLVRecord', 'TKSimpleTLVRecord', 'TKSmartCard', 'TKSmartCardATR', 'TKSmartCardATRInterfaceGroup', 'TKSmartCardPINFormat', 'TKSmartCardSlot', 'TKSmartCardSlotManager', 'TKSmartCardToken', 'TKSmartCardTokenDriver', 'TKSmartCardTokenSession', 'TKSmartCardUserInteraction', 'TKSmartCardUserInteractionForPINOperation', 'TKSmartCardUserInteractionForSecurePINChange', 'TKSmartCardUserInteractionForSecurePINVerification', 'TKTLVRecord', 'TKToken', 'TKTokenAuthOperation', 'TKTokenConfiguration', 'TKTokenDriver', 'TKTokenDriverConfiguration', 'TKTokenKeyAlgorithm', 'TKTokenKeyExchangeParameters', 'TKTokenKeychainCertificate', 'TKTokenKeychainContents', 'TKTokenKeychainItem', 'TKTokenKeychainKey', 'TKTokenPasswordAuthOperation', 'TKTokenSession', 'TKTokenSmartCardPINAuthOperation', 'TKTokenWatcher', 'TWRequest', 'TWTweetComposeViewController', 'UIAcceleration', 'UIAccelerometer', 'UIAccessibilityCustomAction', 'UIAccessibilityCustomRotor', 'UIAccessibilityCustomRotorItemResult', 'UIAccessibilityCustomRotorSearchPredicate', 'UIAccessibilityElement', 'UIAccessibilityLocationDescriptor', 'UIAction', 'UIActionSheet', 'UIActivity', 'UIActivityIndicatorView', 'UIActivityItemProvider', 'UIActivityItemsConfiguration', 'UIActivityViewController', 'UIAlertAction', 'UIAlertController', 'UIAlertView', 'UIApplication', 'UIApplicationShortcutIcon', 'UIApplicationShortcutItem', 'UIAttachmentBehavior', 'UIBackgroundConfiguration', 'UIBarAppearance', 'UIBarButtonItem', 'UIBarButtonItemAppearance', 'UIBarButtonItemGroup', 'UIBarButtonItemStateAppearance', 'UIBarItem', 'UIBezierPath', 'UIBlurEffect', 'UIButton', 'UICellAccessory', 'UICellAccessoryCheckmark', 'UICellAccessoryCustomView', 'UICellAccessoryDelete', 'UICellAccessoryDisclosureIndicator', 'UICellAccessoryInsert', 'UICellAccessoryLabel', 'UICellAccessoryMultiselect', 'UICellAccessoryOutlineDisclosure', 'UICellAccessoryReorder', 'UICellConfigurationState', 'UICloudSharingController', 'UICollectionLayoutListConfiguration', 'UICollectionReusableView', 'UICollectionView', 'UICollectionViewCell', 'UICollectionViewCellRegistration', 'UICollectionViewCompositionalLayout', 'UICollectionViewCompositionalLayoutConfiguration', 'UICollectionViewController', 'UICollectionViewDiffableDataSource', 'UICollectionViewDiffableDataSourceReorderingHandlers', 'UICollectionViewDiffableDataSourceSectionSnapshotHandlers', 'UICollectionViewDropPlaceholder', 'UICollectionViewDropProposal', 'UICollectionViewFlowLayout', 'UICollectionViewFlowLayoutInvalidationContext', 'UICollectionViewFocusUpdateContext', 'UICollectionViewLayout', 'UICollectionViewLayoutAttributes', 'UICollectionViewLayoutInvalidationContext', 'UICollectionViewListCell', 'UICollectionViewPlaceholder', 'UICollectionViewSupplementaryRegistration', 'UICollectionViewTransitionLayout', 'UICollectionViewUpdateItem', 'UICollisionBehavior', 'UIColor', 'UIColorPickerViewController', 'UIColorWell', 'UICommand', 'UICommandAlternate', 'UIContextMenuConfiguration', 'UIContextMenuInteraction', 'UIContextualAction', 'UIControl', 'UICubicTimingParameters', 'UIDatePicker', 'UIDeferredMenuElement', 'UIDevice', 'UIDictationPhrase', 'UIDocument', 'UIDocumentBrowserAction', 'UIDocumentBrowserTransitionController', 'UIDocumentBrowserViewController', 'UIDocumentInteractionController', 'UIDocumentMenuViewController', 'UIDocumentPickerExtensionViewController', 'UIDocumentPickerViewController', 'UIDragInteraction', 'UIDragItem', 'UIDragPreview', 'UIDragPreviewParameters', 'UIDragPreviewTarget', 'UIDropInteraction', 'UIDropProposal', 'UIDynamicAnimator', 'UIDynamicBehavior', 'UIDynamicItemBehavior', 'UIDynamicItemGroup', 'UIEvent', 'UIFeedbackGenerator', 'UIFieldBehavior', 'UIFocusAnimationCoordinator', 'UIFocusDebugger', 'UIFocusGuide', 'UIFocusMovementHint', 'UIFocusSystem', 'UIFocusUpdateContext', 'UIFont', 'UIFontDescriptor', 'UIFontMetrics', 'UIFontPickerViewController', 'UIFontPickerViewControllerConfiguration', 'UIGestureRecognizer', 'UIGraphicsImageRenderer', 'UIGraphicsImageRendererContext', 'UIGraphicsImageRendererFormat', 'UIGraphicsPDFRenderer', 'UIGraphicsPDFRendererContext', 'UIGraphicsPDFRendererFormat', 'UIGraphicsRenderer', 'UIGraphicsRendererContext', 'UIGraphicsRendererFormat', 'UIGravityBehavior', 'UIHoverGestureRecognizer', 'UIImage', 'UIImageAsset', 'UIImageConfiguration', 'UIImagePickerController', 'UIImageSymbolConfiguration', 'UIImageView', 'UIImpactFeedbackGenerator', 'UIIndirectScribbleInteraction', 'UIInputView', 'UIInputViewController', 'UIInterpolatingMotionEffect', 'UIKey', 'UIKeyCommand', 'UILabel', 'UILargeContentViewerInteraction', 'UILayoutGuide', 'UILexicon', 'UILexiconEntry', 'UIListContentConfiguration', 'UIListContentImageProperties', 'UIListContentTextProperties', 'UIListContentView', 'UILocalNotification', 'UILocalizedIndexedCollation', 'UILongPressGestureRecognizer', 'UIManagedDocument', 'UIMarkupTextPrintFormatter', 'UIMenu', 'UIMenuController', 'UIMenuElement', 'UIMenuItem', 'UIMenuSystem', 'UIMotionEffect', 'UIMotionEffectGroup', 'UIMutableApplicationShortcutItem', 'UIMutableUserNotificationAction', 'UIMutableUserNotificationCategory', 'UINavigationBar', 'UINavigationBarAppearance', 'UINavigationController', 'UINavigationItem', 'UINib', 'UINotificationFeedbackGenerator', 'UIOpenURLContext', 'UIPageControl', 'UIPageViewController', 'UIPanGestureRecognizer', 'UIPasteConfiguration', 'UIPasteboard', 'UIPencilInteraction', 'UIPercentDrivenInteractiveTransition', 'UIPickerView', 'UIPinchGestureRecognizer', 'UIPointerEffect', 'UIPointerHighlightEffect', 'UIPointerHoverEffect', 'UIPointerInteraction', 'UIPointerLiftEffect', 'UIPointerLockState', 'UIPointerRegion', 'UIPointerRegionRequest', 'UIPointerShape', 'UIPointerStyle', 'UIPopoverBackgroundView', 'UIPopoverController', 'UIPopoverPresentationController', 'UIPresentationController', 'UIPress', 'UIPressesEvent', 'UIPreviewAction', 'UIPreviewActionGroup', 'UIPreviewInteraction', 'UIPreviewParameters', 'UIPreviewTarget', 'UIPrintFormatter', 'UIPrintInfo', 'UIPrintInteractionController', 'UIPrintPageRenderer', 'UIPrintPaper', 'UIPrinter', 'UIPrinterPickerController', 'UIProgressView', 'UIPushBehavior', 'UIReferenceLibraryViewController', 'UIRefreshControl', 'UIRegion', 'UIResponder', 'UIRotationGestureRecognizer', 'UIScene', 'UISceneActivationConditions', 'UISceneActivationRequestOptions', 'UISceneConfiguration', 'UISceneConnectionOptions', 'UISceneDestructionRequestOptions', 'UISceneOpenExternalURLOptions', 'UISceneOpenURLOptions', 'UISceneSession', 'UISceneSizeRestrictions', 'UIScreen', 'UIScreenEdgePanGestureRecognizer', 'UIScreenMode', 'UIScreenshotService', 'UIScribbleInteraction', 'UIScrollView', 'UISearchBar', 'UISearchContainerViewController', 'UISearchController', 'UISearchDisplayController', 'UISearchSuggestionItem', 'UISearchTextField', 'UISearchToken', 'UISegmentedControl', 'UISelectionFeedbackGenerator', 'UISimpleTextPrintFormatter', 'UISlider', 'UISnapBehavior', 'UISplitViewController', 'UISpringLoadedInteraction', 'UISpringTimingParameters', 'UIStackView', 'UIStatusBarManager', 'UIStepper', 'UIStoryboard', 'UIStoryboardPopoverSegue', 'UIStoryboardSegue', 'UIStoryboardUnwindSegueSource', 'UISwipeActionsConfiguration', 'UISwipeGestureRecognizer', 'UISwitch', 'UITabBar', 'UITabBarAppearance', 'UITabBarController', 'UITabBarItem', 'UITabBarItemAppearance', 'UITabBarItemStateAppearance', 'UITableView', 'UITableViewCell', 'UITableViewController', 'UITableViewDiffableDataSource', 'UITableViewDropPlaceholder', 'UITableViewDropProposal', 'UITableViewFocusUpdateContext', 'UITableViewHeaderFooterView', 'UITableViewPlaceholder', 'UITableViewRowAction', 'UITapGestureRecognizer', 'UITargetedDragPreview', 'UITargetedPreview', 'UITextChecker', 'UITextDragPreviewRenderer', 'UITextDropProposal', 'UITextField', 'UITextFormattingCoordinator', 'UITextInputAssistantItem', 'UITextInputMode', 'UITextInputPasswordRules', 'UITextInputStringTokenizer', 'UITextInteraction', 'UITextPlaceholder', 'UITextPosition', 'UITextRange', 'UITextSelectionRect', 'UITextView', 'UITitlebar', 'UIToolbar', 'UIToolbarAppearance', 'UITouch', 'UITraitCollection', 'UIUserNotificationAction', 'UIUserNotificationCategory', 'UIUserNotificationSettings', 'UIVibrancyEffect', 'UIVideoEditorController', 'UIView', 'UIViewConfigurationState', 'UIViewController', 'UIViewPrintFormatter', 'UIViewPropertyAnimator', 'UIVisualEffect', 'UIVisualEffectView', 'UIWebView', 'UIWindow', 'UIWindowScene', 'UIWindowSceneDestructionRequestOptions', 'UNCalendarNotificationTrigger', 'UNLocationNotificationTrigger', 'UNMutableNotificationContent', 'UNNotification', 'UNNotificationAction', 'UNNotificationAttachment', 'UNNotificationCategory', 'UNNotificationContent', 'UNNotificationRequest', 'UNNotificationResponse', 'UNNotificationServiceExtension', 'UNNotificationSettings', 'UNNotificationSound', 'UNNotificationTrigger', 'UNPushNotificationTrigger', 'UNTextInputNotificationAction', 'UNTextInputNotificationResponse', 'UNTimeIntervalNotificationTrigger', 'UNUserNotificationCenter', 'UTType', 'VNBarcodeObservation', 'VNCircle', 'VNClassificationObservation', 'VNClassifyImageRequest', 'VNContour', 'VNContoursObservation', 'VNCoreMLFeatureValueObservation', 'VNCoreMLModel', 'VNCoreMLRequest', 'VNDetectBarcodesRequest', 'VNDetectContoursRequest', 'VNDetectFaceCaptureQualityRequest', 'VNDetectFaceLandmarksRequest', 'VNDetectFaceRectanglesRequest', 'VNDetectHorizonRequest', 'VNDetectHumanBodyPoseRequest', 'VNDetectHumanHandPoseRequest', 'VNDetectHumanRectanglesRequest', 'VNDetectRectanglesRequest', 'VNDetectTextRectanglesRequest', 'VNDetectTrajectoriesRequest', 'VNDetectedObjectObservation', 'VNDetectedPoint', 'VNDocumentCameraScan', 'VNDocumentCameraViewController', 'VNFaceLandmarkRegion', 'VNFaceLandmarkRegion2D', 'VNFaceLandmarks', 'VNFaceLandmarks2D', 'VNFaceObservation', 'VNFeaturePrintObservation', 'VNGenerateAttentionBasedSaliencyImageRequest', 'VNGenerateImageFeaturePrintRequest', 'VNGenerateObjectnessBasedSaliencyImageRequest', 'VNGenerateOpticalFlowRequest', 'VNGeometryUtils', 'VNHomographicImageRegistrationRequest', 'VNHorizonObservation', 'VNHumanBodyPoseObservation', 'VNHumanHandPoseObservation', 'VNImageAlignmentObservation', 'VNImageBasedRequest', 'VNImageHomographicAlignmentObservation', 'VNImageRegistrationRequest', 'VNImageRequestHandler', 'VNImageTranslationAlignmentObservation', 'VNObservation', 'VNPixelBufferObservation', 'VNPoint', 'VNRecognizeAnimalsRequest', 'VNRecognizeTextRequest', 'VNRecognizedObjectObservation', 'VNRecognizedPoint', 'VNRecognizedPointsObservation', 'VNRecognizedText', 'VNRecognizedTextObservation', 'VNRectangleObservation', 'VNRequest', 'VNSaliencyImageObservation', 'VNSequenceRequestHandler', 'VNStatefulRequest', 'VNTargetedImageRequest', 'VNTextObservation', 'VNTrackObjectRequest', 'VNTrackRectangleRequest', 'VNTrackingRequest', 'VNTrajectoryObservation', 'VNTranslationalImageRegistrationRequest', 'VNVector', 'VNVideoProcessor', 'VNVideoProcessorCadence', 'VNVideoProcessorFrameRateCadence', 'VNVideoProcessorRequestProcessingOptions', 'VNVideoProcessorTimeIntervalCadence', 'VSAccountApplicationProvider', 'VSAccountManager', 'VSAccountManagerResult', 'VSAccountMetadata', 'VSAccountMetadataRequest', 'VSAccountProviderResponse', 'VSSubscription', 'VSSubscriptionRegistrationCenter', 'WCSession', 'WCSessionFile', 'WCSessionFileTransfer', 'WCSessionUserInfoTransfer', 'WKBackForwardList', 'WKBackForwardListItem', 'WKContentRuleList', 'WKContentRuleListStore', 'WKContentWorld', 'WKContextMenuElementInfo', 'WKFindConfiguration', 'WKFindResult', 'WKFrameInfo', 'WKHTTPCookieStore', 'WKNavigation', 'WKNavigationAction', 'WKNavigationResponse', 'WKOpenPanelParameters', 'WKPDFConfiguration', 'WKPreferences', 'WKPreviewElementInfo', 'WKProcessPool', 'WKScriptMessage', 'WKSecurityOrigin', 'WKSnapshotConfiguration', 'WKUserContentController', 'WKUserScript', 'WKWebView', 'WKWebViewConfiguration', 'WKWebpagePreferences', 'WKWebsiteDataRecord', 'WKWebsiteDataStore', 'WKWindowFeatures', '__EntityAccessibilityWrapper'}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_cocoa_builtins.py:15:COCOA_PROTOCOLS = {'ABNewPersonViewControllerDelegate', 'ABPeoplePickerNavigationControllerDelegate', 'ABPersonViewControllerDelegate', 'ABUnknownPersonViewControllerDelegate', 'ADActionViewControllerChildInterface', 'ADActionViewControllerInterface', 'ADBannerViewDelegate', 'ADInterstitialAdDelegate', 'AEAssessmentSessionDelegate', 'ARAnchorCopying', 'ARCoachingOverlayViewDelegate', 'ARSCNViewDelegate', 'ARSKViewDelegate', 'ARSessionDelegate', 'ARSessionObserver', 'ARSessionProviding', 'ARTrackable', 'ASAccountAuthenticationModificationControllerDelegate', 'ASAccountAuthenticationModificationControllerPresentationContextProviding', 'ASAuthorizationControllerDelegate', 'ASAuthorizationControllerPresentationContextProviding', 'ASAuthorizationCredential', 'ASAuthorizationProvider', 'ASAuthorizationProviderExtensionAuthorizationRequestHandler', 'ASWebAuthenticationPresentationContextProviding', 'ASWebAuthenticationSessionRequestDelegate', 'ASWebAuthenticationSessionWebBrowserSessionHandling', 'AUAudioUnitFactory', 'AVAssetDownloadDelegate', 'AVAssetResourceLoaderDelegate', 'AVAssetWriterDelegate', 'AVAsynchronousKeyValueLoading', 'AVCaptureAudioDataOutputSampleBufferDelegate', 'AVCaptureDataOutputSynchronizerDelegate', 'AVCaptureDepthDataOutputDelegate', 'AVCaptureFileOutputDelegate', 'AVCaptureFileOutputRecordingDelegate', 'AVCaptureMetadataOutputObjectsDelegate', 'AVCapturePhotoCaptureDelegate', 'AVCapturePhotoFileDataRepresentationCustomizer', 'AVCaptureVideoDataOutputSampleBufferDelegate', 'AVContentKeyRecipient', 'AVContentKeySessionDelegate', 'AVFragmentMinding', 'AVPictureInPictureControllerDelegate', 'AVPlayerItemLegibleOutputPushDelegate', 'AVPlayerItemMetadataCollectorPushDelegate', 'AVPlayerItemMetadataOutputPushDelegate', 'AVPlayerItemOutputPullDelegate', 'AVPlayerItemOutputPushDelegate', 'AVPlayerViewControllerDelegate', 'AVQueuedSampleBufferRendering', 'AVRoutePickerViewDelegate', 'AVVideoCompositing', 'AVVideoCompositionInstruction', 'AVVideoCompositionValidationHandling', 'AXCustomContentProvider', 'CAAction', 'CAAnimationDelegate', 'CALayerDelegate', 'CAMediaTiming', 'CAMetalDrawable', 'CBCentralManagerDelegate', 'CBPeripheralDelegate', 'CBPeripheralManagerDelegate', 'CHHapticAdvancedPatternPlayer', 'CHHapticDeviceCapability', 'CHHapticParameterAttributes', 'CHHapticPatternPlayer', 'CIAccordionFoldTransition', 'CIAffineClamp', 'CIAffineTile', 'CIAreaAverage', 'CIAreaHistogram', 'CIAreaMaximum', 'CIAreaMaximumAlpha', 'CIAreaMinMax', 'CIAreaMinMaxRed', 'CIAreaMinimum', 'CIAreaMinimumAlpha', 'CIAreaReductionFilter', 'CIAttributedTextImageGenerator', 'CIAztecCodeGenerator', 'CIBarcodeGenerator', 'CIBarsSwipeTransition', 'CIBicubicScaleTransform', 'CIBlendWithMask', 'CIBloom', 'CIBokehBlur', 'CIBoxBlur', 'CIBumpDistortion', 'CIBumpDistortionLinear', 'CICMYKHalftone', 'CICheckerboardGenerator', 'CICircleSplashDistortion', 'CICircularScreen', 'CICircularWrap', 'CICode128BarcodeGenerator', 'CIColorAbsoluteDifference', 'CIColorClamp', 'CIColorControls', 'CIColorCrossPolynomial', 'CIColorCube', 'CIColorCubeWithColorSpace', 'CIColorCubesMixedWithMask', 'CIColorCurves', 'CIColorInvert', 'CIColorMap', 'CIColorMatrix', 'CIColorMonochrome', 'CIColorPolynomial', 'CIColorPosterize', 'CIColorThreshold', 'CIColorThresholdOtsu', 'CIColumnAverage', 'CIComicEffect', 'CICompositeOperation', 'CIConvolution', 'CICopyMachineTransition', 'CICoreMLModel', 'CICrystallize', 'CIDepthOfField', 'CIDepthToDisparity', 'CIDiscBlur', 'CIDisintegrateWithMaskTransition', 'CIDisparityToDepth', 'CIDisplacementDistortion', 'CIDissolveTransition', 'CIDither', 'CIDocumentEnhancer', 'CIDotScreen', 'CIDroste', 'CIEdgePreserveUpsample', 'CIEdgeWork', 'CIEdges', 'CIEightfoldReflectedTile', 'CIExposureAdjust', 'CIFalseColor', 'CIFilter', 'CIFilterConstructor', 'CIFlashTransition', 'CIFourCoordinateGeometryFilter', 'CIFourfoldReflectedTile', 'CIFourfoldRotatedTile', 'CIFourfoldTranslatedTile', 'CIGaborGradients', 'CIGammaAdjust', 'CIGaussianBlur', 'CIGaussianGradient', 'CIGlassDistortion', 'CIGlassLozenge', 'CIGlideReflectedTile', 'CIGloom', 'CIHatchedScreen', 'CIHeightFieldFromMask', 'CIHexagonalPixellate', 'CIHighlightShadowAdjust', 'CIHistogramDisplay', 'CIHoleDistortion', 'CIHueAdjust', 'CIHueSaturationValueGradient', 'CIImageProcessorInput', 'CIImageProcessorOutput', 'CIKMeans', 'CIKaleidoscope', 'CIKeystoneCorrectionCombined', 'CIKeystoneCorrectionHorizontal', 'CIKeystoneCorrectionVertical', 'CILabDeltaE', 'CILanczosScaleTransform', 'CILenticularHaloGenerator', 'CILightTunnel', 'CILineOverlay', 'CILineScreen', 'CILinearGradient', 'CILinearToSRGBToneCurve', 'CIMaskToAlpha', 'CIMaskedVariableBlur', 'CIMaximumComponent', 'CIMedian', 'CIMeshGenerator', 'CIMinimumComponent', 'CIMix', 'CIModTransition', 'CIMorphologyGradient', 'CIMorphologyMaximum', 'CIMorphologyMinimum', 'CIMorphologyRectangleMaximum', 'CIMorphologyRectangleMinimum', 'CIMotionBlur', 'CINinePartStretched', 'CINinePartTiled', 'CINoiseReduction', 'CIOpTile', 'CIPDF417BarcodeGenerator', 'CIPageCurlTransition', 'CIPageCurlWithShadowTransition', 'CIPaletteCentroid', 'CIPalettize', 'CIParallelogramTile', 'CIPerspectiveCorrection', 'CIPerspectiveRotate', 'CIPerspectiveTile', 'CIPerspectiveTransform', 'CIPerspectiveTransformWithExtent', 'CIPhotoEffect', 'CIPinchDistortion', 'CIPixellate', 'CIPlugInRegistration', 'CIPointillize', 'CIQRCodeGenerator', 'CIRadialGradient', 'CIRandomGenerator', 'CIRippleTransition', 'CIRoundedRectangleGenerator', 'CIRowAverage', 'CISRGBToneCurveToLinear', 'CISaliencyMap', 'CISepiaTone', 'CIShadedMaterial', 'CISharpenLuminance', 'CISixfoldReflectedTile', 'CISixfoldRotatedTile', 'CISmoothLinearGradient', 'CISpotColor', 'CISpotLight', 'CIStarShineGenerator', 'CIStraighten', 'CIStretchCrop', 'CIStripesGenerator', 'CISunbeamsGenerator', 'CISwipeTransition', 'CITemperatureAndTint', 'CITextImageGenerator', 'CIThermal', 'CIToneCurve', 'CITorusLensDistortion', 'CITransitionFilter', 'CITriangleKaleidoscope', 'CITriangleTile', 'CITwelvefoldReflectedTile', 'CITwirlDistortion', 'CIUnsharpMask', 'CIVibrance', 'CIVignette', 'CIVignetteEffect', 'CIVortexDistortion', 'CIWhitePointAdjust', 'CIXRay', 'CIZoomBlur', 'CKRecordKeyValueSetting', 'CKRecordValue', 'CLKComplicationDataSource', 'CLLocationManagerDelegate', 'CLSContextProvider', 'CLSDataStoreDelegate', 'CMFallDetectionDelegate', 'CMHeadphoneMotionManagerDelegate', 'CNChangeHistoryEventVisitor', 'CNContactPickerDelegate', 'CNContactViewControllerDelegate', 'CNKeyDescriptor', 'CPApplicationDelegate', 'CPBarButtonProviding', 'CPInterfaceControllerDelegate', 'CPListTemplateDelegate', 'CPListTemplateItem', 'CPMapTemplateDelegate', 'CPNowPlayingTemplateObserver', 'CPPointOfInterestTemplateDelegate', 'CPSearchTemplateDelegate', 'CPSelectableListItem', 'CPSessionConfigurationDelegate', 'CPTabBarTemplateDelegate', 'CPTemplateApplicationDashboardSceneDelegate', 'CPTemplateApplicationSceneDelegate', 'CSSearchableIndexDelegate', 'CTSubscriberDelegate', 'CTTelephonyNetworkInfoDelegate', 'CXCallDirectoryExtensionContextDelegate', 'CXCallObserverDelegate', 'CXProviderDelegate', 'EAAccessoryDelegate', 'EAGLDrawable', 'EAWiFiUnconfiguredAccessoryBrowserDelegate', 'EKCalendarChooserDelegate', 'EKEventEditViewDelegate', 'EKEventViewDelegate', 'GCDevice', 'GKAchievementViewControllerDelegate', 'GKAgentDelegate', 'GKChallengeEventHandlerDelegate', 'GKChallengeListener', 'GKFriendRequestComposeViewControllerDelegate', 'GKGameCenterControllerDelegate', 'GKGameModel', 'GKGameModelPlayer', 'GKGameModelUpdate', 'GKGameSessionEventListener', 'GKGameSessionSharingViewControllerDelegate', 'GKInviteEventListener', 'GKLeaderboardViewControllerDelegate', 'GKLocalPlayerListener', 'GKMatchDelegate', 'GKMatchmakerViewControllerDelegate', 'GKPeerPickerControllerDelegate', 'GKRandom', 'GKSavedGameListener', 'GKSceneRootNodeType', 'GKSessionDelegate', 'GKStrategist', 'GKTurnBasedEventListener', 'GKTurnBasedMatchmakerViewControllerDelegate', 'GKVoiceChatClient', 'GLKNamedEffect', 'GLKViewControllerDelegate', 'GLKViewDelegate', 'HKLiveWorkoutBuilderDelegate', 'HKWorkoutSessionDelegate', 'HMAccessoryBrowserDelegate', 'HMAccessoryDelegate', 'HMCameraSnapshotControlDelegate', 'HMCameraStreamControlDelegate', 'HMHomeDelegate', 'HMHomeManagerDelegate', 'HMNetworkConfigurationProfileDelegate', 'ICCameraDeviceDelegate', 'ICCameraDeviceDownloadDelegate', 'ICDeviceBrowserDelegate', 'ICDeviceDelegate', 'ICScannerDeviceDelegate', 'ILMessageFilterQueryHandling', 'INActivateCarSignalIntentHandling', 'INAddMediaIntentHandling', 'INAddTasksIntentHandling', 'INAppendToNoteIntentHandling', 'INBookRestaurantReservationIntentHandling', 'INCallsDomainHandling', 'INCancelRideIntentHandling', 'INCancelWorkoutIntentHandling', 'INCarCommandsDomainHandling', 'INCarPlayDomainHandling', 'INCreateNoteIntentHandling', 'INCreateTaskListIntentHandling', 'INDeleteTasksIntentHandling', 'INEndWorkoutIntentHandling', 'INGetAvailableRestaurantReservationBookingDefaultsIntentHandling', 'INGetAvailableRestaurantReservationBookingsIntentHandling', 'INGetCarLockStatusIntentHandling', 'INGetCarPowerLevelStatusIntentHandling', 'INGetCarPowerLevelStatusIntentResponseObserver', 'INGetRestaurantGuestIntentHandling', 'INGetRideStatusIntentHandling', 'INGetRideStatusIntentResponseObserver', 'INGetUserCurrentRestaurantReservationBookingsIntentHandling', 'INGetVisualCodeIntentHandling', 'INIntentHandlerProviding', 'INListCarsIntentHandling', 'INListRideOptionsIntentHandling', 'INMessagesDomainHandling', 'INNotebookDomainHandling', 'INPauseWorkoutIntentHandling', 'INPayBillIntentHandling', 'INPaymentsDomainHandling', 'INPhotosDomainHandling', 'INPlayMediaIntentHandling', 'INRadioDomainHandling', 'INRequestPaymentIntentHandling', 'INRequestRideIntentHandling', 'INResumeWorkoutIntentHandling', 'INRidesharingDomainHandling', 'INSaveProfileInCarIntentHandling', 'INSearchCallHistoryIntentHandling', 'INSearchForAccountsIntentHandling', 'INSearchForBillsIntentHandling', 'INSearchForMediaIntentHandling', 'INSearchForMessagesIntentHandling', 'INSearchForNotebookItemsIntentHandling', 'INSearchForPhotosIntentHandling', 'INSendMessageIntentHandling', 'INSendPaymentIntentHandling', 'INSendRideFeedbackIntentHandling', 'INSetAudioSourceInCarIntentHandling', 'INSetCarLockStatusIntentHandling', 'INSetClimateSettingsInCarIntentHandling', 'INSetDefrosterSettingsInCarIntentHandling', 'INSetMessageAttributeIntentHandling', 'INSetProfileInCarIntentHandling', 'INSetRadioStationIntentHandling', 'INSetSeatSettingsInCarIntentHandling', 'INSetTaskAttributeIntentHandling', 'INSnoozeTasksIntentHandling', 'INSpeakable', 'INStartAudioCallIntentHandling', 'INStartCallIntentHandling', 'INStartPhotoPlaybackIntentHandling', 'INStartVideoCallIntentHandling', 'INStartWorkoutIntentHandling', 'INTransferMoneyIntentHandling', 'INUIAddVoiceShortcutButtonDelegate', 'INUIAddVoiceShortcutViewControllerDelegate', 'INUIEditVoiceShortcutViewControllerDelegate', 'INUIHostedViewControlling', 'INUIHostedViewSiriProviding', 'INUpdateMediaAffinityIntentHandling', 'INVisualCodeDomainHandling', 'INWorkoutsDomainHandling', 'JSExport', 'MCAdvertiserAssistantDelegate', 'MCBrowserViewControllerDelegate', 'MCNearbyServiceAdvertiserDelegate', 'MCNearbyServiceBrowserDelegate', 'MCSessionDelegate', 'MDLAssetResolver', 'MDLComponent', 'MDLJointAnimation', 'MDLLightProbeIrradianceDataSource', 'MDLMeshBuffer', 'MDLMeshBufferAllocator', 'MDLMeshBufferZone', 'MDLNamed', 'MDLObjectContainerComponent', 'MDLTransformComponent', 'MDLTransformOp', 'MFMailComposeViewControllerDelegate', 'MFMessageComposeViewControllerDelegate', 'MIDICIProfileResponderDelegate', 'MKAnnotation', 'MKGeoJSONObject', 'MKLocalSearchCompleterDelegate', 'MKMapViewDelegate', 'MKOverlay', 'MKReverseGeocoderDelegate', 'MLBatchProvider', 'MLCustomLayer', 'MLCustomModel', 'MLFeatureProvider', 'MLWritable', 'MPMediaPickerControllerDelegate', 'MPMediaPlayback', 'MPNowPlayingSessionDelegate', 'MPPlayableContentDataSource', 'MPPlayableContentDelegate', 'MPSystemMusicPlayerController', 'MSAuthenticationPresentationContext', 'MSMessagesAppTranscriptPresentation', 'MSStickerBrowserViewDataSource', 'MTKViewDelegate', 'MTLAccelerationStructure', 'MTLAccelerationStructureCommandEncoder', 'MTLArgumentEncoder', 'MTLBinaryArchive', 'MTLBlitCommandEncoder', 'MTLBuffer', 'MTLCaptureScope', 'MTLCommandBuffer', 'MTLCommandBufferEncoderInfo', 'MTLCommandEncoder', 'MTLCommandQueue', 'MTLComputeCommandEncoder', 'MTLComputePipelineState', 'MTLCounter', 'MTLCounterSampleBuffer', 'MTLCounterSet', 'MTLDepthStencilState', 'MTLDevice', 'MTLDrawable', 'MTLDynamicLibrary', 'MTLEvent', 'MTLFence', 'MTLFunction', 'MTLFunctionHandle', 'MTLFunctionLog', 'MTLFunctionLogDebugLocation', 'MTLHeap', 'MTLIndirectCommandBuffer', 'MTLIndirectComputeCommand', 'MTLIndirectComputeCommandEncoder', 'MTLIndirectRenderCommand', 'MTLIndirectRenderCommandEncoder', 'MTLIntersectionFunctionTable', 'MTLLibrary', 'MTLLogContainer', 'MTLParallelRenderCommandEncoder', 'MTLRasterizationRateMap', 'MTLRenderCommandEncoder', 'MTLRenderPipelineState', 'MTLResource', 'MTLResourceStateCommandEncoder', 'MTLSamplerState', 'MTLSharedEvent', 'MTLTexture', 'MTLVisibleFunctionTable', 'MXMetricManagerSubscriber', 'MyClassJavaScriptMethods', 'NCWidgetProviding', 'NEAppPushDelegate', 'NFCFeliCaTag', 'NFCISO15693Tag', 'NFCISO7816Tag', 'NFCMiFareTag', 'NFCNDEFReaderSessionDelegate', 'NFCNDEFTag', 'NFCReaderSession', 'NFCReaderSessionDelegate', 'NFCTag', 'NFCTagReaderSessionDelegate', 'NFCVASReaderSessionDelegate', 'NISessionDelegate', 'NSCacheDelegate', 'NSCoding', 'NSCollectionLayoutContainer', 'NSCollectionLayoutEnvironment', 'NSCollectionLayoutVisibleItem', 'NSCopying', 'NSDecimalNumberBehaviors', 'NSDiscardableContent', 'NSExtensionRequestHandling', 'NSFastEnumeration', 'NSFetchRequestResult', 'NSFetchedResultsControllerDelegate', 'NSFetchedResultsSectionInfo', 'NSFileManagerDelegate', 'NSFilePresenter', 'NSFileProviderChangeObserver', 'NSFileProviderEnumerationObserver', 'NSFileProviderEnumerator', 'NSFileProviderItem', 'NSFileProviderServiceSource', 'NSItemProviderReading', 'NSItemProviderWriting', 'NSKeyedArchiverDelegate', 'NSKeyedUnarchiverDelegate', 'NSLayoutManagerDelegate', 'NSLocking', 'NSMachPortDelegate', 'NSMetadataQueryDelegate', 'NSMutableCopying', 'NSNetServiceBrowserDelegate', 'NSNetServiceDelegate', 'NSPortDelegate', 'NSProgressReporting', 'NSSecureCoding', 'NSStreamDelegate', 'NSTextAttachmentContainer', 'NSTextLayoutOrientationProvider', 'NSTextStorageDelegate', 'NSURLAuthenticationChallengeSender', 'NSURLConnectionDataDelegate', 'NSURLConnectionDelegate', 'NSURLConnectionDownloadDelegate', 'NSURLProtocolClient', 'NSURLSessionDataDelegate', 'NSURLSessionDelegate', 'NSURLSessionDownloadDelegate', 'NSURLSessionStreamDelegate', 'NSURLSessionTaskDelegate', 'NSURLSessionWebSocketDelegate', 'NSUserActivityDelegate', 'NSXMLParserDelegate', 'NSXPCListenerDelegate', 'NSXPCProxyCreating', 'NWTCPConnectionAuthenticationDelegate', 'OSLogEntryFromProcess', 'OSLogEntryWithPayload', 'PDFDocumentDelegate', 'PDFViewDelegate', 'PHContentEditingController', 'PHLivePhotoFrame', 'PHLivePhotoViewDelegate', 'PHPhotoLibraryAvailabilityObserver', 'PHPhotoLibraryChangeObserver', 'PHPickerViewControllerDelegate', 'PKAddPassesViewControllerDelegate', 'PKAddPaymentPassViewControllerDelegate', 'PKAddSecureElementPassViewControllerDelegate', 'PKCanvasViewDelegate', 'PKDisbursementAuthorizationControllerDelegate', 'PKIssuerProvisioningExtensionAuthorizationProviding', 'PKPaymentAuthorizationControllerDelegate', 'PKPaymentAuthorizationViewControllerDelegate', 'PKPaymentInformationRequestHandling', 'PKPushRegistryDelegate', 'PKToolPickerObserver', 'PreviewDisplaying', 'QLPreviewControllerDataSource', 'QLPreviewControllerDelegate', 'QLPreviewItem', 'QLPreviewingController', 'RPBroadcastActivityControllerDelegate', 'RPBroadcastActivityViewControllerDelegate', 'RPBroadcastControllerDelegate', 'RPPreviewViewControllerDelegate', 'RPScreenRecorderDelegate', 'SCNActionable', 'SCNAnimatable', 'SCNAnimation', 'SCNAvoidOccluderConstraintDelegate', 'SCNBoundingVolume', 'SCNBufferStream', 'SCNCameraControlConfiguration', 'SCNCameraControllerDelegate', 'SCNNodeRendererDelegate', 'SCNPhysicsContactDelegate', 'SCNProgramDelegate', 'SCNSceneExportDelegate', 'SCNSceneRenderer', 'SCNSceneRendererDelegate', 'SCNShadable', 'SCNTechniqueSupport', 'SFSafariViewControllerDelegate', 'SFSpeechRecognitionTaskDelegate', 'SFSpeechRecognizerDelegate', 'SKCloudServiceSetupViewControllerDelegate', 'SKOverlayDelegate', 'SKPaymentQueueDelegate', 'SKPaymentTransactionObserver', 'SKPhysicsContactDelegate', 'SKProductsRequestDelegate', 'SKRequestDelegate', 'SKSceneDelegate', 'SKStoreProductViewControllerDelegate', 'SKViewDelegate', 'SKWarpable', 'SNRequest', 'SNResult', 'SNResultsObserving', 'SRSensorReaderDelegate', 'TKSmartCardTokenDriverDelegate', 'TKSmartCardUserInteractionDelegate', 'TKTokenDelegate', 'TKTokenDriverDelegate', 'TKTokenSessionDelegate', 'UIAccelerometerDelegate', 'UIAccessibilityContainerDataTable', 'UIAccessibilityContainerDataTableCell', 'UIAccessibilityContentSizeCategoryImageAdjusting', 'UIAccessibilityIdentification', 'UIAccessibilityReadingContent', 'UIActionSheetDelegate', 'UIActivityItemSource', 'UIActivityItemsConfigurationReading', 'UIAdaptivePresentationControllerDelegate', 'UIAlertViewDelegate', 'UIAppearance', 'UIAppearanceContainer', 'UIApplicationDelegate', 'UIBarPositioning', 'UIBarPositioningDelegate', 'UICloudSharingControllerDelegate', 'UICollectionViewDataSource', 'UICollectionViewDataSourcePrefetching', 'UICollectionViewDelegate', 'UICollectionViewDelegateFlowLayout', 'UICollectionViewDragDelegate', 'UICollectionViewDropCoordinator', 'UICollectionViewDropDelegate', 'UICollectionViewDropItem', 'UICollectionViewDropPlaceholderContext', 'UICollisionBehaviorDelegate', 'UIColorPickerViewControllerDelegate', 'UIConfigurationState', 'UIContentConfiguration', 'UIContentContainer', 'UIContentSizeCategoryAdjusting', 'UIContentView', 'UIContextMenuInteractionAnimating', 'UIContextMenuInteractionCommitAnimating', 'UIContextMenuInteractionDelegate', 'UICoordinateSpace', 'UIDataSourceModelAssociation', 'UIDataSourceTranslating', 'UIDocumentBrowserViewControllerDelegate', 'UIDocumentInteractionControllerDelegate', 'UIDocumentMenuDelegate', 'UIDocumentPickerDelegate', 'UIDragAnimating', 'UIDragDropSession', 'UIDragInteractionDelegate', 'UIDragSession', 'UIDropInteractionDelegate', 'UIDropSession', 'UIDynamicAnimatorDelegate', 'UIDynamicItem', 'UIFocusAnimationContext', 'UIFocusDebuggerOutput', 'UIFocusEnvironment', 'UIFocusItem', 'UIFocusItemContainer', 'UIFocusItemScrollableContainer', 'UIFontPickerViewControllerDelegate', 'UIGestureRecognizerDelegate', 'UIGuidedAccessRestrictionDelegate', 'UIImageConfiguration', 'UIImagePickerControllerDelegate', 'UIIndirectScribbleInteractionDelegate', 'UIInputViewAudioFeedback', 'UIInteraction', 'UIItemProviderPresentationSizeProviding', 'UIKeyInput', 'UILargeContentViewerInteractionDelegate', 'UILargeContentViewerItem', 'UILayoutSupport', 'UIMenuBuilder', 'UINavigationBarDelegate', 'UINavigationControllerDelegate', 'UIObjectRestoration', 'UIPageViewControllerDataSource', 'UIPageViewControllerDelegate', 'UIPasteConfigurationSupporting', 'UIPencilInteractionDelegate', 'UIPickerViewAccessibilityDelegate', 'UIPickerViewDataSource', 'UIPickerViewDelegate', 'UIPointerInteractionAnimating', 'UIPointerInteractionDelegate', 'UIPopoverBackgroundViewMethods', 'UIPopoverControllerDelegate', 'UIPopoverPresentationControllerDelegate', 'UIPreviewActionItem', 'UIPreviewInteractionDelegate', 'UIPrintInteractionControllerDelegate', 'UIPrinterPickerControllerDelegate', 'UIResponderStandardEditActions', 'UISceneDelegate', 'UIScreenshotServiceDelegate', 'UIScribbleInteractionDelegate', 'UIScrollViewAccessibilityDelegate', 'UIScrollViewDelegate', 'UISearchBarDelegate', 'UISearchControllerDelegate', 'UISearchDisplayDelegate', 'UISearchResultsUpdating', 'UISearchSuggestion', 'UISearchTextFieldDelegate', 'UISearchTextFieldPasteItem', 'UISplitViewControllerDelegate', 'UISpringLoadedInteractionBehavior', 'UISpringLoadedInteractionContext', 'UISpringLoadedInteractionEffect', 'UISpringLoadedInteractionSupporting', 'UIStateRestoring', 'UITabBarControllerDelegate', 'UITabBarDelegate', 'UITableViewDataSource', 'UITableViewDataSourcePrefetching', 'UITableViewDelegate', 'UITableViewDragDelegate', 'UITableViewDropCoordinator', 'UITableViewDropDelegate', 'UITableViewDropItem', 'UITableViewDropPlaceholderContext', 'UITextDocumentProxy', 'UITextDragDelegate', 'UITextDragRequest', 'UITextDraggable', 'UITextDropDelegate', 'UITextDropRequest', 'UITextDroppable', 'UITextFieldDelegate', 'UITextFormattingCoordinatorDelegate', 'UITextInput', 'UITextInputDelegate', 'UITextInputTokenizer', 'UITextInputTraits', 'UITextInteractionDelegate', 'UITextPasteConfigurationSupporting', 'UITextPasteDelegate', 'UITextPasteItem', 'UITextSelecting', 'UITextViewDelegate', 'UITimingCurveProvider', 'UIToolbarDelegate', 'UITraitEnvironment', 'UIUserActivityRestoring', 'UIVideoEditorControllerDelegate', 'UIViewAnimating', 'UIViewControllerAnimatedTransitioning', 'UIViewControllerContextTransitioning', 'UIViewControllerInteractiveTransitioning', 'UIViewControllerPreviewing', 'UIViewControllerPreviewingDelegate', 'UIViewControllerRestoration', 'UIViewControllerTransitionCoordinator', 'UIViewControllerTransitionCoordinatorContext', 'UIViewControllerTransitioningDelegate', 'UIViewImplicitlyAnimating', 'UIWebViewDelegate', 'UIWindowSceneDelegate', 'UNNotificationContentExtension', 'UNUserNotificationCenterDelegate', 'VNDocumentCameraViewControllerDelegate', 'VNFaceObservationAccepting', 'VNRequestProgressProviding', 'VNRequestRevisionProviding', 'VSAccountManagerDelegate', 'WCSessionDelegate', 'WKHTTPCookieStoreObserver', 'WKNavigationDelegate', 'WKPreviewActionItem', 'WKScriptMessageHandler', 'WKScriptMessageHandlerWithReply', 'WKUIDelegate', 'WKURLSchemeHandler', 'WKURLSchemeTask'}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/pygments/lexers/_cocoa_builtins.py:16:COCOA_PRIMITIVES = {'ACErrorCode', 'ALCcontext_struct', 'ALCdevice_struct', 'ALMXGlyphEntry', 'ALMXHeader', 'API_UNAVAILABLE', 'AUChannelInfo', 'AUDependentParameter', 'AUDistanceAttenuationData', 'AUHostIdentifier', 'AUHostVersionIdentifier', 'AUInputSamplesInOutputCallbackStruct', 'AUMIDIEvent', 'AUMIDIOutputCallbackStruct', 'AUNodeInteraction', 'AUNodeRenderCallback', 'AUNumVersion', 'AUParameterAutomationEvent', 'AUParameterEvent', 'AUParameterMIDIMapping', 'AUPreset', 'AUPresetEvent', 'AURecordedParameterEvent', 'AURenderCallbackStruct', 'AURenderEventHeader', 'AUSamplerBankPresetData', 'AUSamplerInstrumentData', 'AnchorPoint', 'AnchorPointTable', 'AnkrTable', 'AudioBalanceFade', 'AudioBuffer', 'AudioBufferList', 'AudioBytePacketTranslation', 'AudioChannelDescription', 'AudioChannelLayout', 'AudioClassDescription', 'AudioCodecMagicCookieInfo', 'AudioCodecPrimeInfo', 'AudioComponentDescription', 'AudioComponentPlugInInterface', 'AudioConverterPrimeInfo', 'AudioFileMarker', 'AudioFileMarkerList', 'AudioFilePacketTableInfo', 'AudioFileRegion', 'AudioFileRegionList', 'AudioFileTypeAndFormatID', 'AudioFile_SMPTE_Time', 'AudioFormatInfo', 'AudioFormatListItem', 'AudioFramePacketTranslation', 'AudioIndependentPacketTranslation', 'AudioOutputUnitMIDICallbacks', 'AudioOutputUnitStartAtTimeParams', 'AudioPacketDependencyInfoTranslation', 'AudioPacketRangeByteCountTranslation', 'AudioPacketRollDistanceTranslation', 'AudioPanningInfo', 'AudioQueueBuffer', 'AudioQueueChannelAssignment', 'AudioQueueLevelMeterState', 'AudioQueueParameterEvent', 'AudioStreamBasicDescription', 'AudioStreamPacketDescription', 'AudioTimeStamp', 'AudioUnitCocoaViewInfo', 'AudioUnitConnection', 'AudioUnitExternalBuffer', 'AudioUnitFrequencyResponseBin', 'AudioUnitMIDIControlMapping', 'AudioUnitMeterClipping', 'AudioUnitNodeConnection', 'AudioUnitOtherPluginDesc', 'AudioUnitParameter', 'AudioUnitParameterEvent', 'AudioUnitParameterHistoryInfo', 'AudioUnitParameterInfo', 'AudioUnitParameterNameInfo', 'AudioUnitParameterStringFromValue', 'AudioUnitParameterValueFromString', 'AudioUnitParameterValueName', 'AudioUnitParameterValueTranslation', 'AudioUnitPresetMAS_SettingData', 'AudioUnitPresetMAS_Settings', 'AudioUnitProperty', 'AudioUnitRenderContext', 'AudioValueRange', 'AudioValueTranslation', 'AuthorizationOpaqueRef', 'BslnFormat0Part', 'BslnFormat1Part', 'BslnFormat2Part', 'BslnFormat3Part', 'BslnTable', 'CABarBeatTime', 'CAFAudioDescription', 'CAFChunkHeader', 'CAFDataChunk', 'CAFFileHeader', 'CAFInfoStrings', 'CAFInstrumentChunk', 'CAFMarker', 'CAFMarkerChunk', 'CAFOverviewChunk', 'CAFOverviewSample', 'CAFPacketTableHeader', 'CAFPeakChunk', 'CAFPositionPeak', 'CAFRegion', 'CAFRegionChunk', 'CAFStringID', 'CAFStrings', 'CAFUMIDChunk', 'CAF_SMPTE_Time', 'CAF_UUID_ChunkHeader', 'CA_BOXABLE', 'CFHostClientContext', 'CFNetServiceClientContext', 'CF_BRIDGED_MUTABLE_TYPE', 'CF_BRIDGED_TYPE', 'CF_RELATED_TYPE', 'CGAffineTransform', 'CGDataConsumerCallbacks', 'CGDataProviderDirectCallbacks', 'CGDataProviderSequentialCallbacks', 'CGFunctionCallbacks', 'CGPDFArray', 'CGPDFContentStream', 'CGPDFDictionary', 'CGPDFObject', 'CGPDFOperatorTable', 'CGPDFScanner', 'CGPDFStream', 'CGPDFString', 'CGPathElement', 'CGPatternCallbacks', 'CGVector', 'CG_BOXABLE', 'CLLocationCoordinate2D', 'CM_BRIDGED_TYPE', 'CTParagraphStyleSetting', 'CVPlanarComponentInfo', 'CVPlanarPixelBufferInfo', 'CVPlanarPixelBufferInfo_YCbCrBiPlanar', 'CVPlanarPixelBufferInfo_YCbCrPlanar', 'CVSMPTETime', 'CV_BRIDGED_TYPE', 'ComponentInstanceRecord', 'ExtendedAudioFormatInfo', 'ExtendedControlEvent', 'ExtendedNoteOnEvent', 'ExtendedTempoEvent', 'FontVariation', 'GCQuaternion', 'GKBox', 'GKQuad', 'GKTriangle', 'GLKEffectPropertyPrv', 'HostCallbackInfo', 'IIO_BRIDGED_TYPE', 'IUnknownVTbl', 'JustDirectionTable', 'JustPCAction', 'JustPCActionSubrecord', 'JustPCConditionalAddAction', 'JustPCDecompositionAction', 'JustPCDuctilityAction', 'JustPCGlyphRepeatAddAction', 'JustPostcompTable', 'JustTable', 'JustWidthDeltaEntry', 'JustWidthDeltaGroup', 'KernIndexArrayHeader', 'KernKerningPair', 'KernOffsetTable', 'KernOrderedListEntry', 'KernOrderedListHeader', 'KernSimpleArrayHeader', 'KernStateEntry', 'KernStateHeader', 'KernSubtableHeader', 'KernTableHeader', 'KernVersion0Header', 'KernVersion0SubtableHeader', 'KerxAnchorPointAction', 'KerxControlPointAction', 'KerxControlPointEntry', 'KerxControlPointHeader', 'KerxCoordinateAction', 'KerxIndexArrayHeader', 'KerxKerningPair', 'KerxOrderedListEntry', 'KerxOrderedListHeader', 'KerxSimpleArrayHeader', 'KerxStateEntry', 'KerxStateHeader', 'KerxSubtableHeader', 'KerxTableHeader', 'LcarCaretClassEntry', 'LcarCaretTable', 'LtagStringRange', 'LtagTable', 'MDL_CLASS_EXPORT', 'MIDICIDeviceIdentification', 'MIDIChannelMessage', 'MIDIControlTransform', 'MIDIDriverInterface', 'MIDIEventList', 'MIDIEventPacket', 'MIDIIOErrorNotification', 'MIDIMessage_128', 'MIDIMessage_64', 'MIDIMessage_96', 'MIDIMetaEvent', 'MIDINoteMessage', 'MIDINotification', 'MIDIObjectAddRemoveNotification', 'MIDIObjectPropertyChangeNotification', 'MIDIPacket', 'MIDIPacketList', 'MIDIRawData', 'MIDISysexSendRequest', 'MIDIThruConnectionEndpoint', 'MIDIThruConnectionParams', 'MIDITransform', 'MIDIValueMap', 'MPSDeviceOptions', 'MixerDistanceParams', 'MortChain', 'MortContextualSubtable', 'MortFeatureEntry', 'MortInsertionSubtable', 'MortLigatureSubtable', 'MortRearrangementSubtable', 'MortSubtable', 'MortSwashSubtable', 'MortTable', 'MorxChain', 'MorxContextualSubtable', 'MorxInsertionSubtable', 'MorxLigatureSubtable', 'MorxRearrangementSubtable', 'MorxSubtable', 'MorxTable', 'MusicDeviceNoteParams', 'MusicDeviceStdNoteParams', 'MusicEventUserData', 'MusicTrackLoopInfo', 'NoteParamsControlValue', 'OpaqueAudioComponent', 'OpaqueAudioComponentInstance', 'OpaqueAudioConverter', 'OpaqueAudioQueue', 'OpaqueAudioQueueProcessingTap', 'OpaqueAudioQueueTimeline', 'OpaqueExtAudioFile', 'OpaqueJSClass', 'OpaqueJSContext', 'OpaqueJSContextGroup', 'OpaqueJSPropertyNameAccumulator', 'OpaqueJSPropertyNameArray', 'OpaqueJSString', 'OpaqueJSValue', 'OpaqueMusicEventIterator', 'OpaqueMusicPlayer', 'OpaqueMusicSequence', 'OpaqueMusicTrack', 'OpbdSideValues', 'OpbdTable', 'ParameterEvent', 'PropLookupSegment', 'PropLookupSingle', 'PropTable', 'ROTAGlyphEntry', 'ROTAHeader', 'SCNMatrix4', 'SCNVector3', 'SCNVector4', 'SFNTLookupArrayHeader', 'SFNTLookupBinarySearchHeader', 'SFNTLookupSegment', 'SFNTLookupSegmentHeader', 'SFNTLookupSingle', 'SFNTLookupSingleHeader', 'SFNTLookupTable', 'SFNTLookupTrimmedArrayHeader', 'SFNTLookupVectorHeader', 'SMPTETime', 'STClassTable', 'STEntryOne', 'STEntryTwo', 'STEntryZero', 'STHeader', 'STXEntryOne', 'STXEntryTwo', 'STXEntryZero', 'STXHeader', 'ScheduledAudioFileRegion', 'ScheduledAudioSlice', 'SecKeychainAttribute', 'SecKeychainAttributeInfo', 'SecKeychainAttributeList', 'TrakTable', 'TrakTableData', 'TrakTableEntry', 'UIAccessibility', 'VTDecompressionOutputCallbackRecord', 'VTInt32Point', 'VTInt32Size', '_CFHTTPAuthentication', '_GLKMatrix2', '_GLKMatrix3', '_GLKMatrix4', '_GLKQuaternion', '_GLKVector2', '_GLKVector3', '_GLKVector4', '_GLKVertexAttributeParameters', '_MTLAxisAlignedBoundingBox', '_MTLPackedFloat3', '_MTLPackedFloat4x3', '_NSRange', '_NSZone', '__CFHTTPMessage', '__CFHost', '__CFNetDiagnostic', '__CFNetService', '__CFNetServiceBrowser', '__CFNetServiceMonitor', '__CFXMLNode', '__CFXMLParser', '__GLsync', '__SecAccess', '__SecCertificate', '__SecIdentity', '__SecKey', '__SecRandom', '__attribute__', 'gss_OID_desc_struct', 'gss_OID_set_desc_struct', 'gss_auth_identity', 'gss_buffer_desc_struct', 'gss_buffer_set_desc_struct', 'gss_channel_bindings_struct', 'gss_cred_id_t_desc_struct', 'gss_ctx_id_t_desc_struct', 'gss_iov_buffer_desc_struct', 'gss_krb5_cfx_keydata', 'gss_krb5_lucid_context_v1', 'gss_krb5_lucid_context_version', 'gss_krb5_lucid_key', 'gss_krb5_rfc1964_keydata', 'gss_name_t_desc_struct', 'opaqueCMBufferQueueTriggerToken', 'sfntCMapEncoding', 'sfntCMapExtendedSubHeader', 'sfntCMapHeader', 'sfntCMapSubHeader', 'sfntDescriptorHeader', 'sfntDirectory', 'sfntDirectoryEntry', 'sfntFeatureHeader', 'sfntFeatureName', 'sfntFontDescriptor', 'sfntFontFeatureSetting', 'sfntFontRunFeature', 'sfntInstance', 'sfntNameHeader', 'sfntNameRecord', 'sfntVariationAxis', 'sfntVariationHeader'}
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/python_dotenv-1.1.1.dist-info/METADATA:501:- Fix escaping of quoted values written by `set_key` (#236 by [@bbc2]).
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi-0.120.0.dist-info/METADATA:184:"_If anyone is looking to build a production Python API, I would highly recommend **FastAPI**. It is **beautifully designed**, **simple to use** and **highly scalable**, it has become a **key component** in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer._"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi-0.120.0.dist-info/RECORD:95:fastapi/security/__pycache__/api_key.cpython-313.pyc,,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/fastapi-0.120.0.dist-info/RECORD:101:fastapi/security/api_key.py,sha256=Bgldi9_cdw6vyoD51dwq_gqJfRG7e1MzIk6nqHaotKc,9041
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/pool/base.py:1184:        return getattr(self.dbapi_connection, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/pool/base.py:1489:        return getattr(self.dbapi_connection, key)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/testing/profiling.py:94:        dbapi_key = config.db.name + "_" + config.db.driver
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/testing/profiling.py:99:            dbapi_key += "_file"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/testing/profiling.py:111:            dbapi_key,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/sqlalchemy/testing/engines.py:230:        return getattr(self.dbapi, key)
/home/zion/ZION/docs/CORE/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:77:    API klíč vyžadován v produkci (X-API-KEY), logging omezen v produkci, přidán varovný výstup, zpřísněny limity.
/home/zion/ZION/docs/CORE/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:85:  - Doplněny nové proměnné: ADAPTER_API_KEY, CORS_ORIGINS, ADAPTER_PORT/BIND, WALLET_RPC, SHIM_RPC, ZION_RPC_CORS_ORIGINS, ZION_RPC_BIND, BITCOIN_RPCUSER, BITCOIN_RPCPASSWORD, BITCOIN_RPCALLOWIP.
/home/zion/ZION/docs/CORE/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:106:1) Spustit wallet-adapter s vypnutým vyžadováním API klíče v dev: `REQUIRE_API_KEY=false`.
/home/zion/ZION/docs/CORE/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:108:3) V produkci znovu zapnout `ADAPTER_API_KEY` a prověřit CORS allowlist přes `CORS_ORIGINS`.
/home/zion/ZION/docs/CORE/README-old.md:409:- Rate-limit a API klíč pro `/wallet/send` nastavíš přes `SEND_RATE_*` a `ADAPTER_API_KEY` na `zion-wallet-adapter`.
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:51:    def __init__(self, lightspark_api_key: str):
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:52:        self.lightspark = LightsparkClient(api_key=lightspark_api_key)
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:151:    def __init__(self, lightspark_api_key: str):
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:152:        self.lightspark = LightsparkConnect(api_key=lightspark_api_key)
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:231:    def __init__(self, spark_api_key: str):
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:232:        self.spark = SparkProtocol(api_key=spark_api_key)
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:343:    def __init__(self, voltage_api_key: str):
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:344:        self.voltage = VoltageClient(api_key=voltage_api_key)
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:429:    voltage = VoltageClient(api_key=VOLTAGE_API_KEY)
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:556:opennode = OpenNode(api_key='88d47ebb-4714-4f18-8e1a-b48ef0bala40')
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:583:    def __init__(self, opennode_api_key: str):
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:584:        self.opennode = OpenNode(api_key=opennode_api_key)
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:656:2. Enter API key
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:773:opennode = OpenNode(api_key=OPENNODE_API_KEY)
/home/zion/ZION/docs/LIGHTNING_INFRASTRUCTURE_PROVIDERS.md:776:zion_store = ZIONCosmicStore(opennode_api_key=OPENNODE_API_KEY)
/home/zion/ZION/docs/runtime/20250921T/DEVOPS_ANALYSIS_LOG.md:59:5. **Security & Configuration** - API keys, firewall, wallet backup
/home/zion/ZION/docs/runtime/20250921T/DEVOPS_ANALYSIS_LOG.md:127:- API key protection for sensitive endpoints
/home/zion/ZION/docs/runtime/20250921T/DAPP_WALLET_UI_FINALIZE.md:5:- Route calls via internal Next.js API with x-api-key when configured
/home/zion/ZION/docs/runtime/20250921T/DAPP_WALLET_UI_FINALIZE.md:10:- frontend/app/api/wallet/{create,save,keys,send}/route.ts: proxy routes with admin gating and x-api-key
/home/zion/ZION/docs/runtime/20250921T/DAPP_WALLET_UI_FINALIZE.md:11:- frontend/README.md: docs for ENABLE_WALLET_ADMIN / NEXT_PUBLIC_ENABLE_WALLET_ADMIN, ADAPTER_API_KEY
/home/zion/ZION/docs/runtime/20250921T/DAPP_WALLET_UI_FINALIZE.md:15:- API key set on server-side only; never exposed in client code
/home/zion/ZION/docs/2.8.1.md:1730:- **Features:** Pull requests to `main` branch    │ Global  │              │ /stats API    │| 💼 **WALLETS** | 60 days | Key management, HD, multi-sig | 13 |
/home/zion/ZION/docs/DEPLOYMENT_2.8.1_ESTRELLA_COMPLETE.md:236:2. **Mock API Clients**: WARP bridge still using mock Ankr/Voltage APIs (real keys needed for production)
/home/zion/ZION/docs/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:77:    API klíč vyžadován v produkci (X-API-KEY), logging omezen v produkci, přidán varovný výstup, zpřísněny limity.
/home/zion/ZION/docs/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:85:  - Doplněny nové proměnné: ADAPTER_API_KEY, CORS_ORIGINS, ADAPTER_PORT/BIND, WALLET_RPC, SHIM_RPC, ZION_RPC_CORS_ORIGINS, ZION_RPC_BIND, BITCOIN_RPCUSER, BITCOIN_RPCPASSWORD, BITCOIN_RPCALLOWIP.
/home/zion/ZION/docs/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:106:1) Spustit wallet-adapter s vypnutým vyžadováním API klíče v dev: `REQUIRE_API_KEY=false`.
/home/zion/ZION/docs/OPTIMIZATION_AUDIT_LOG_2025-09-25.md:108:3) V produkci znovu zapnout `ADAPTER_API_KEY` a prověřit CORS allowlist přes `CORS_ORIGINS`.
/home/zion/ZION/docs/2.8.1_deployment_guide.md:65:  🔄 Mock clients → Real API keys potřeba
/home/zion/ZION/docs/2.8.1_deployment_guide.md:290:# Test WARP transfers (s real API keys)
/home/zion/ZION/docs/2.8.1_deployment_guide.md:294:# Update API keys in warp_bridge_poc.py
/home/zion/ZION/docs/2.8.1_deployment_guide.md:295:# ANKR_API_KEY = "your_real_ankr_key"
/home/zion/ZION/docs/2.8.1_deployment_guide.md:296:# VOLTAGE_API_KEY = "your_real_voltage_key"
/home/zion/ZION/docs/2.8.1_deployment_guide.md:297:# OPENNODE_API_KEY = "your_real_opennode_key"
/home/zion/ZION/docs/2.8.1_deployment_guide.md:426:# Check API keys
/home/zion/ZION/docs/2.8.1_deployment_guide.md:427:grep -r "API_KEY" warp_bridge_poc.py
/home/zion/ZION/docs/ANKR_INTEGRATION_ANALYSIS.md:146:    def __init__(self, rpc_server: ZIONRPCServer, ankr_api_key: str):
/home/zion/ZION/docs/ANKR_INTEGRATION_ANALYSIS.md:149:        self.ankr_client = AnkrRPCClient(api_key=ankr_api_key)
/home/zion/ZION/docs/ANKR_INTEGRATION_ANALYSIS.md:196:    def __init__(self, ankr_api_key: str):
/home/zion/ZION/docs/ANKR_INTEGRATION_ANALYSIS.md:200:        self.ankr_multi_chain = AnkrMultiChain(api_key=ankr_api_key)
/home/zion/ZION/docs/ANKR_INTEGRATION_ANALYSIS.md:238:        self.ankr_staking = AnkrStakingService(api_key=ankr_staking_api)
/home/zion/ZION/docs/ANKR_INTEGRATION_ANALYSIS.md:314:        self.ankr_raas = AnkrRollupService(api_key=ankr_raas_api)
/home/zion/ZION/docs/ANKR_INTEGRATION_ANALYSIS.md:357:SOLANA_RPC = f"https://rpc.ankr.com/solana/{ANKR_API_KEY}"
/home/zion/ZION/docs/runbooks/SECRETS_ROTATION.md:4:- ADAPTER_API_KEY
/home/zion/ZION/docs/runbooks/SECRETS_ROTATION.md:13:## Wallet Adapter API Key
/home/zion/ZION/docs/runbooks/SECRETS_ROTATION.md:14:1) Generate a new value and set `ADAPTER_API_KEY` in `.env`
/home/zion/ZION/docs/runbooks/ADAPTER_SMOKE_TEST.md:6:- `.env` configured with `ADAPTER_API_KEY`
/home/zion/ZION/docs/runbooks/ADAPTER_SMOKE_TEST.md:13:curl -H "X-API-KEY: $ADAPTER_API_KEY" http://localhost:18099/healthz
/home/zion/ZION/docs/runbooks/ADAPTER_SMOKE_TEST.md:20:     -H "X-API-KEY: $ADAPTER_API_KEY" \
/home/zion/ZION/docs/runbooks/ADAPTER_SMOKE_TEST.md:28:curl -H "X-API-KEY: $ADAPTER_API_KEY" http://localhost:18099/wallet/balance
/home/zion/ZION/docs/runbooks/ADAPTER_SMOKE_TEST.md:34:curl -H "X-API-KEY: $ADAPTER_API_KEY" http://localhost:18099/explorer/summary
/home/zion/ZION/docs/runbooks/MIGRACE_UBUNTU_PC.md:59:# vytvořte .env dle .env.example (API key, CORS, …)
/home/zion/ZION/docs/runbooks/REVERSE_PROXY_EXAMPLES.md:22:    # Inject API key header so clients don’t see it
/home/zion/ZION/docs/runbooks/REVERSE_PROXY_EXAMPLES.md:23:    proxy_set_header X-API-KEY $ADAPTER_API_KEY;
/home/zion/ZION/docs/runbooks/REVERSE_PROXY_EXAMPLES.md:41:    header_up X-API-KEY {env.ADAPTER_API_KEY}
/home/zion/ZION/docs/runbooks/REVERSE_PROXY_EXAMPLES.md:47:- Keep API keys in the proxy environment, not in the client/browser
/home/zion/ZION/docs/runbooks/SECURE_DEPLOYMENT_CHECKLIST.md:7:  - [ ] `ADAPTER_API_KEY` (long, random)
/home/zion/ZION/docs/runbooks/SECURE_DEPLOYMENT_CHECKLIST.md:31:- [ ] Require API key in production (default behavior)
/home/zion/ZION/docs/runbooks/SECURE_DEPLOYMENT_CHECKLIST.md:46:- [ ] Establish a rotation process for `ADAPTER_API_KEY`, Bitcoin RPC creds, and any macaroons/tls for LND
/home/zion/ZION/docs/WHITEPAPER_2025/10_SECURITY_COMPLIANCE.md:606:    ☐ No hardcoded secrets (API keys, passwords)
/home/zion/ZION/docs/WHITEPAPER_2025/03_MULTICHAIN_BRIDGE.md:559:  apiKey: 'your-api-key',
/home/zion/ZION/docs/2.7.5/COMPLETE_REAL_SECURITY_AUDIT.md:160:### REAL-CRIT-003: api/wallet_endpoints.py - Plain Text Keys in JSON
/home/zion/ZION/docs/2.7.5/MAINNET_READINESS_REPORT.md:264:- API key authentication
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:90:- ❌ No API key management system
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:98:- API key creation with roles (admin/user/read-only)
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:111:1. ✅ API key manager with secure storage
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:404:- API keys leaked over network
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:44:- [ ] Hardcoded secrets (API keys, passwords)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:177:- [ ] Je authentication implementována? (API keys)
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:427:- [ ] API key authentication implemented
/home/zion/ZION/docs/2.7.5/INTERNAL_SECURITY_AUDIT.md:723:2. ⚠️ **No API Key Authentication** - Anyone can call APIs
/home/zion/ZION/docs/2.7.5/PRODUCTION_DEPLOYMENT_CHECKLIST.md:309:  - [ ] Authentication (API keys)
/home/zion/ZION/docs/2.7.5/WEEK2_DAY1_SECURITY_AUDIT_REPORT.md:75:✅ API key management system
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:187:        ankr_api_key: str,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:188:        voltage_api_key: str,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:189:        opennode_api_key: str,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:190:        lightspark_api_key: Optional[str] = None
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:193:        self.ankr = AnkrRPCClient(api_key=ankr_api_key)
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:194:        self.voltage = VoltageClient(api_key=voltage_api_key)
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:195:        self.opennode = OpenNode(api_key=opennode_api_key)
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:196:        self.lightspark = LightsparkClient(api_key=lightspark_api_key) if lightspark_api_key else None
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:572:        Requires Lightspark API key
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:575:            raise Exception("Lightspark not configured. Set lightspark_api_key.")
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:602:        ankr_api_key='ankr_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:603:        voltage_api_key='voltage_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:604:        opennode_api_key='opennode_xxxxx'
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:630:        ankr_api_key='ankr_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:631:        voltage_api_key='voltage_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:632:        opennode_api_key='opennode_xxxxx'
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:651:        ankr_api_key='ankr_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:652:        voltage_api_key='voltage_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:653:        opennode_api_key='opennode_xxxxx'
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:783:ANKR_API_KEY = os.getenv('ANKR_API_KEY')
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:784:SOLANA_RPC = f"https://rpc.ankr.com/solana/{ANKR_API_KEY}"
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:785:ETHEREUM_RPC = f"https://rpc.ankr.com/eth/{ANKR_API_KEY}"
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:788:POLYGON_RPC = f"https://rpc.ankr.com/polygon/{ANKR_API_KEY}"
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:789:AVALANCHE_RPC = f"https://rpc.ankr.com/avalanche/{ANKR_API_KEY}"
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:898:    def __init__(self, spark_api_key: str):
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:899:        self.spark = SparkProtocol(api_key=spark_api_key)
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:956:        ankr_api_key: str,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:957:        voltage_api_key: str,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:958:        opennode_api_key: str,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:959:        lightspark_api_key: Optional[str] = None
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:963:            ankr_api_key=ankr_api_key,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:964:            voltage_api_key=voltage_api_key,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:965:            opennode_api_key=opennode_api_key,
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:966:            lightspark_api_key=lightspark_api_key
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:1191:        ankr_api_key='ankr_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:1192:        voltage_api_key='voltage_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:1193:        opennode_api_key='opennode_xxxxx',
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:1194:        lightspark_api_key='lightspark_xxxxx'  # Optional
/home/zion/ZION/docs/COMPLETE_WARP_INFRASTRUCTURE.md:1327:   ✅ Ankr.com - Get API key (free tier available)
/home/zion/ZION/docs/PUSH_DEPLOYMENT_GUIDE.md:18:- [ ] No API keys in code (use environment variables)
/home/zion/ZION/docs/PUSH_DEPLOYMENT_GUIDE.md:175:#### 3. API Keys Missing
/home/zion/ZION/docs/PUSH_DEPLOYMENT_GUIDE.md:178:export ANKR_API_KEY="your_key_here"
/home/zion/ZION/docs/PUSH_DEPLOYMENT_GUIDE.md:179:export VOLTAGE_API_KEY="your_key_here"
/home/zion/ZION/docs/PUSH_DEPLOYMENT_GUIDE.md:180:export OPENNODE_API_KEY="your_key_here"
/home/zion/ZION/docs/PUSH_DEPLOYMENT_GUIDE.md:183:echo "ANKR_API_KEY=your_key_here" > .env
/home/zion/ZION/docs/2.8.3/TESTNET_RELEASE_PLAN_v2.8.3.md:110:- ❌ Žádné admin credentials nebo API keys
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:18:✅ **Praktickou implementaci** (dashboard s login, monitoring, API keys)
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:172:  - API key management per user
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:812:        apiKey={user.apiKey}
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:868:        ankr_api_key=ANKR_API_KEY,
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:869:        voltage_api_key=VOLTAGE_API_KEY,
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:870:        opennode_api_key=OPENNODE_API_KEY
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:915:                api_key TEXT,
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:926:        api_key = secrets.token_urlsafe(32)
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:929:            INSERT INTO users (username, email, password_hash, api_key, created_at)
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:931:        ''', (username, email, password_hash, api_key, datetime.now()))
/home/zion/ZION/docs/2.8/ZION_2.8_COMPLETE_ROADMAP.md:934:        return api_key
/home/zion/ZION/docs/2.8/WARP_POC_README.md:16:### Test Mode (No API keys needed)
/home/zion/ZION/docs/2.8/WARP_POC_README.md:28:### Production Mode (Real API keys)
/home/zion/ZION/docs/2.8/WARP_POC_README.md:30:1. **Get API keys:**
/home/zion/ZION/docs/2.8/WARP_POC_README.md:38:       ANKR_API_KEY = "your_ankr_api_key"
/home/zion/ZION/docs/2.8/WARP_POC_README.md:39:       VOLTAGE_API_KEY = "your_voltage_api_key"
/home/zion/ZION/docs/2.8/WARP_POC_README.md:40:       OPENNODE_API_KEY = "your_opennode_api_key"
/home/zion/ZION/docs/2.8/WARP_POC_README.md:261:- No API keys required
/home/zion/ZION/docs/2.8/WARP_POC_README.md:284:### Error: "Ankr API key invalid"
/home/zion/ZION/docs/2.8/WARP_POC_README.md:286:# Update API key in Config class
/home/zion/ZION/docs/2.8/WARP_POC_README.md:287:ANKR_API_KEY = "your_real_api_key"
/home/zion/ZION/docs/2.8/WARP_POC_README.md:292:# Check Voltage API key
/home/zion/ZION/docs/2.8/WARP_POC_README.md:293:VOLTAGE_API_KEY = "your_real_api_key"
/home/zion/ZION/docs/2.8/WARP_POC_README.md:313:3. ✅ Test with real API keys
/home/zion/ZION/docs/2.8/WARP_POC_README.md:332:- [ ] Production API keys configured
/home/zion/ZION/docs/2.8/WARP_POC_TEST_RESULTS.md:5:**Test Mode:** Mock Clients (No API keys required)  
/home/zion/ZION/docs/2.8/WARP_POC_TEST_RESULTS.md:302:1. **Week 1: Get Real API Keys**
/home/zion/ZION/docs/2.8/WARP_POC_TEST_RESULTS.md:311:   ✅ Update API keys in warp_bridge_poc.py
/home/zion/ZION/docs/2.8/WARP_POC_TEST_RESULTS.md:387:**Next step: Get production API keys and GO LIVE!** 🌟
/home/zion/ZION/.env.example:14:# API klíč je povinný v produkci (X-API-KEY header)
/home/zion/ZION/.env.example:15:ADAPTER_API_KEY=
/home/zion/ZION/src/bridges/warp_bridge_production.py:6:- Ankr: Multi-chain RPC access (real API keys required)
/home/zion/ZION/src/bridges/warp_bridge_production.py:7:- Voltage: Lightning Network nodes (real API keys required)
/home/zion/ZION/src/bridges/warp_bridge_production.py:8:- OpenNode: Payment processing (real API keys required)
/home/zion/ZION/src/bridges/warp_bridge_production.py:31:# CONFIGURATION - PRODUCTION API KEYS REQUIRED
/home/zion/ZION/src/bridges/warp_bridge_production.py:35:    """Production configuration with real API keys"""
/home/zion/ZION/src/bridges/warp_bridge_production.py:37:    # Ankr Production API Key (Get from https://www.ankr.com)
/home/zion/ZION/src/bridges/warp_bridge_production.py:38:    ANKR_API_KEY = os.getenv('ANKR_API_KEY', 'YOUR_ANKR_API_KEY')
/home/zion/ZION/src/bridges/warp_bridge_production.py:40:    # Voltage Production API Key (Get from https://www.voltage.cloud)
/home/zion/ZION/src/bridges/warp_bridge_production.py:41:    VOLTAGE_API_KEY = os.getenv('VOLTAGE_API_KEY', 'YOUR_VOLTAGE_API_KEY')
/home/zion/ZION/src/bridges/warp_bridge_production.py:43:    # OpenNode Production API Key (Get from https://opennode.com)
/home/zion/ZION/src/bridges/warp_bridge_production.py:44:    OPENNODE_API_KEY = os.getenv('OPENNODE_API_KEY', 'YOUR_OPENNODE_API_KEY')
/home/zion/ZION/src/bridges/warp_bridge_production.py:122:    """Mock Ankr client for testing without API keys"""
/home/zion/ZION/src/bridges/warp_bridge_production.py:124:    def __init__(self, api_key: str):
/home/zion/ZION/src/bridges/warp_bridge_production.py:125:        self.api_key = api_key
/home/zion/ZION/src/bridges/warp_bridge_production.py:182:    def __init__(self, api_key: str):
/home/zion/ZION/src/bridges/warp_bridge_production.py:183:        self.api_key = api_key
/home/zion/ZION/src/bridges/warp_bridge_production.py:223:    def __init__(self, api_key: str):
/home/zion/ZION/src/bridges/warp_bridge_production.py:224:        self.api_key = api_key
/home/zion/ZION/src/bridges/warp_bridge_production.py:263:    def __init__(self, api_key: str):
/home/zion/ZION/src/bridges/warp_bridge_production.py:264:        self.api_key = api_key
/home/zion/ZION/src/bridges/warp_bridge_production.py:266:        self.multichain_url = f"https://rpc.ankr.com/multichain/{api_key}"
/home/zion/ZION/src/bridges/warp_bridge_production.py:294:            url = f"{self.base_url}/{chain}/{self.api_key}"
/home/zion/ZION/src/bridges/warp_bridge_production.py:306:        # Only add x-api-key header for legacy endpoint
/home/zion/ZION/src/bridges/warp_bridge_production.py:308:            headers["x-api-key"] = self.api_key
/home/zion/ZION/src/bridges/warp_bridge_production.py:387:    def __init__(self, api_key: str):
/home/zion/ZION/src/bridges/warp_bridge_production.py:388:        self.api_key = api_key
/home/zion/ZION/src/bridges/warp_bridge_production.py:406:            "Authorization": f"Bearer {self.api_key}",
/home/zion/ZION/src/bridges/warp_bridge_production.py:493:    def __init__(self, api_key: str):
/home/zion/ZION/src/bridges/warp_bridge_production.py:494:        self.api_key = api_key
/home/zion/ZION/src/bridges/warp_bridge_production.py:512:            "Authorization": self.api_key,
/home/zion/ZION/src/bridges/warp_bridge_production.py:766:        # Check if we have real API keys, otherwise use mocks
/home/zion/ZION/src/bridges/warp_bridge_production.py:767:        ankr_key = ProductionConfig.ANKR_API_KEY
/home/zion/ZION/src/bridges/warp_bridge_production.py:768:        voltage_key = ProductionConfig.VOLTAGE_API_KEY  
/home/zion/ZION/src/bridges/warp_bridge_production.py:769:        opennode_key = ProductionConfig.OPENNODE_API_KEY
/home/zion/ZION/src/bridges/warp_bridge_production.py:777:        use_voltage = bool(voltage_key != 'YOUR_VOLTAGE_API_KEY')
/home/zion/ZION/src/bridges/warp_bridge_production.py:780:            ankr_key == 'YOUR_ANKR_API_KEY' or 
/home/zion/ZION/src/bridges/warp_bridge_production.py:781:            opennode_key == 'YOUR_OPENNODE_API_KEY'
/home/zion/ZION/src/bridges/warp_bridge_production.py:787:            if ankr_key != 'YOUR_ANKR_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:795:            if opennode_key != 'YOUR_OPENNODE_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:803:            if ankr_key != 'YOUR_ANKR_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:811:            if opennode_key != 'YOUR_OPENNODE_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:818:            if ankr_key != 'YOUR_ANKR_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:826:            if opennode_key != 'YOUR_OPENNODE_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:864:            print("   💡 Make sure ANKR_API_KEY environment variable is set")
/home/zion/ZION/src/bridges/warp_bridge_production.py:884:            print("   💡 Make sure VOLTAGE_API_KEY environment variable is set")
/home/zion/ZION/src/bridges/warp_bridge_production.py:900:            print("   💡 Make sure OPENNODE_API_KEY environment variable is set")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1186:    # Check API keys
/home/zion/ZION/src/bridges/warp_bridge_production.py:1187:    if ProductionConfig.ANKR_API_KEY == 'YOUR_ANKR_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:1188:        print("❌ ANKR_API_KEY not set. Please set environment variable or update ProductionConfig.")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1190:    if ProductionConfig.VOLTAGE_API_KEY == 'YOUR_VOLTAGE_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:1191:        print("❌ VOLTAGE_API_KEY not set. Please set environment variable or update ProductionConfig.")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1193:    if ProductionConfig.OPENNODE_API_KEY == 'YOUR_OPENNODE_API_KEY':
/home/zion/ZION/src/bridges/warp_bridge_production.py:1194:        print("❌ OPENNODE_API_KEY not set. Please set environment variable or update ProductionConfig.")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1259:            print("  --test-basic        : Basic WARP transfer (requires API keys)")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1263:        print("\n⚠️  PRODUCTION MODE: Requires real API keys!")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1265:        print("   - ANKR_API_KEY")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1266:        print("   - VOLTAGE_API_KEY")
/home/zion/ZION/src/bridges/warp_bridge_production.py:1267:        print("   - OPENNODE_API_KEY")
/home/zion/ZION/src/bridges/warp_bridge_poc.py:32:    # Ankr Configuration (Replace with your API key)
/home/zion/ZION/src/bridges/warp_bridge_poc.py:33:    ANKR_API_KEY = "YOUR_ANKR_API_KEY"  # Get from https://www.ankr.com
/home/zion/ZION/src/bridges/warp_bridge_poc.py:36:    # Voltage Configuration (Replace with your API key)
/home/zion/ZION/src/bridges/warp_bridge_poc.py:37:    VOLTAGE_API_KEY = "YOUR_VOLTAGE_API_KEY"  # Get from https://www.voltage.cloud
/home/zion/ZION/src/bridges/warp_bridge_poc.py:40:    # OpenNode Configuration (Replace with your API key)
/home/zion/ZION/src/bridges/warp_bridge_poc.py:41:    OPENNODE_API_KEY = "YOUR_OPENNODE_API_KEY"  # Get from https://opennode.com
/home/zion/ZION/src/bridges/warp_bridge_poc.py:45:    LIGHTSPARK_API_KEY = None  # Get from https://www.lightspark.com
/home/zion/ZION/src/bridges/warp_bridge_poc.py:110:# MOCK SERVICES (for testing without real API keys)
/home/zion/ZION/src/bridges/warp_bridge_poc.py:184:    def __init__(self, api_key: str):
/home/zion/ZION/src/bridges/warp_bridge_poc.py:185:        self.api_key = api_key
/home/zion/ZION/src/bridges/warp_bridge_poc.py:253:            self.ankr = AnkrClient(Config.ANKR_API_KEY)
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:196:                    "api_key": os.getenv("STRIPE_API_KEY", "sk_test_mock_key_for_demo"),
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:232:                    "api_key": os.getenv("REVOLUT_API_KEY", "mock_revolut_key"),
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:333:                stripe.api_key = stripe_config.api_config.get("api_key", "")
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:354:                # revolut.api_key = revolut_config.api_config.get("api_key", "")
/home/zion/ZION/src/integrations/fiat_ramp_integration.py:355:                self.revolut_client = {"api_key": revolut_config.api_config.get("api_key", "")}
/home/zion/ZION/.env.production:95:# WARP Bridge Production API Keys (Get from respective services)
/home/zion/ZION/.env.production:97:ANKR_API_KEY=YOUR_ANKR_API_KEY_HERE
/home/zion/ZION/.env.production:100:VOLTAGE_API_KEY=YOUR_VOLTAGE_API_KEY_HERE
/home/zion/ZION/.env.production:103:OPENNODE_API_KEY=YOUR_OPENNODE_API_KEY_HERE
/home/zion/ZION/build_zion/blake3/c/blake3.h:65:BLAKE3_API void blake3_hasher_init_keyed(blake3_hasher *self,
/home/zion/ZION/build_zion/blake3/c/blake3.h:67:BLAKE3_API void blake3_hasher_init_derive_key(blake3_hasher *self, const char *context);
/home/zion/ZION/build_zion/blake3/c/blake3.h:68:BLAKE3_API void blake3_hasher_init_derive_key_raw(blake3_hasher *self, const void *context,
/home/zion/ZION/build_zion/blake3/README.md:166:const API_CONTEXT: &str = "BLAKE3 example 2020-01-07 17:11:21 API key";
/home/zion/ZION/build_zion/blake3/README.md:169:let api_key = blake3::derive_key(API_CONTEXT, input_key_material);
/home/zion/ZION/build_zion/blake3/README.md:170:assert_ne!(email_key, api_key);
/home/zion/ZION/build_zion/include/blake3.h:65:BLAKE3_API void blake3_hasher_init_keyed(blake3_hasher *self,
/home/zion/ZION/build_zion/include/blake3.h:67:BLAKE3_API void blake3_hasher_init_derive_key(blake3_hasher *self, const char *context);
/home/zion/ZION/build_zion/include/blake3.h:68:BLAKE3_API void blake3_hasher_init_derive_key_raw(blake3_hasher *self, const void *context,
/home/zion/ZION/config/zion_global.json:22:    "api_key_required": true,
/home/zion/ZION/scripts/phase1_security_backup.sh:119:    "api_key"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:30:    "api.*key"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:221:- ✅ Scanned for private keys, secrets, API keys
/home/zion/ZION/scripts/validate_api_keys.py:3:🔑 ZION WARP Bridge API Key Validator
/home/zion/ZION/scripts/validate_api_keys.py:4:Validates API keys for production deployment
/home/zion/ZION/scripts/validate_api_keys.py:6:Usage: python3 validate_api_keys.py
/home/zion/ZION/scripts/validate_api_keys.py:19:class APIKeyValidator:
/home/zion/ZION/scripts/validate_api_keys.py:20:    """Validates WARP Bridge API keys"""
/home/zion/ZION/scripts/validate_api_keys.py:25:    async def validate_ankr_key(self, api_key: str) -> Dict:
/home/zion/ZION/scripts/validate_api_keys.py:26:        """Validate Ankr API key"""
/home/zion/ZION/scripts/validate_api_keys.py:27:        print("🔍 Validating Ankr API key...")
/home/zion/ZION/scripts/validate_api_keys.py:33:                headers = {"Content-Type": "application/json", "x-api-key": api_key}
/home/zion/ZION/scripts/validate_api_keys.py:69:    async def validate_voltage_key(self, api_key: str) -> Dict:
/home/zion/ZION/scripts/validate_api_keys.py:70:        """Validate Voltage API key"""
/home/zion/ZION/scripts/validate_api_keys.py:71:        print("🔍 Validating Voltage API key...")
/home/zion/ZION/scripts/validate_api_keys.py:77:                headers = {"Authorization": f"Bearer {api_key}"}
/home/zion/ZION/scripts/validate_api_keys.py:95:                            'error': "Invalid API key (401 Unauthorized)"
/home/zion/ZION/scripts/validate_api_keys.py:112:    async def validate_opennode_key(self, api_key: str) -> Dict:
/home/zion/ZION/scripts/validate_api_keys.py:113:        """Validate OpenNode API key"""
/home/zion/ZION/scripts/validate_api_keys.py:114:        print("🔍 Validating OpenNode API key...")
/home/zion/ZION/scripts/validate_api_keys.py:120:                headers = {"Authorization": api_key}
/home/zion/ZION/scripts/validate_api_keys.py:138:                            'error': "Invalid API key (401 Unauthorized)"
/home/zion/ZION/scripts/validate_api_keys.py:156:        """Validate all API keys"""
/home/zion/ZION/scripts/validate_api_keys.py:157:        print("\n🔑 ZION WARP Bridge API Key Validation")
/home/zion/ZION/scripts/validate_api_keys.py:160:        # Get API keys from environment
/home/zion/ZION/scripts/validate_api_keys.py:161:        ankr_key = os.getenv('ANKR_API_KEY', 'YOUR_ANKR_API_KEY')
/home/zion/ZION/scripts/validate_api_keys.py:162:        voltage_key = os.getenv('VOLTAGE_API_KEY', 'YOUR_VOLTAGE_API_KEY')
/home/zion/ZION/scripts/validate_api_keys.py:163:        opennode_key = os.getenv('OPENNODE_API_KEY', 'YOUR_OPENNODE_API_KEY')
/home/zion/ZION/scripts/validate_api_keys.py:187:            print("🎉 ALL API KEYS VALID! Ready for production deployment.")
/home/zion/ZION/scripts/validate_api_keys.py:191:            print("⚠️  SOME API KEYS INVALID. Please check and update:")
/home/zion/ZION/scripts/validate_api_keys.py:193:            print("   2. Update .env.production with real API keys")
/home/zion/ZION/scripts/validate_api_keys.py:204:    validator = APIKeyValidator()
/home/zion/ZION/frontend/app/components/MonitoringDashboard.tsx:225:                      <div className="text-sm text-gray-400 capitalize">{key.replace('_', ' ')}</div>
/home/zion/ZION/frontend/app/round-table/page.tsx:549:                      <span className="capitalize">{key}:</span>
/home/zion/ZION/frontend/app/wallet/page.tsx:720:          response = await fetch('/api/wallet/view-keys', {
/home/zion/ZION/frontend/app/wallet/page.tsx:977:          response = await fetch('/api/wallet/export-keys', {
/home/zion/ZION/frontend/app/api/auth/login/route.ts:22:  apiKey: string;
/home/zion/ZION/frontend/app/api/auth/register/route.ts:28:  apiKey: string;
/home/zion/ZION/frontend/app/api/auth/register/route.ts:42:// Generate API key
/home/zion/ZION/frontend/app/api/auth/register/route.ts:43:function generateApiKey(): string {
/home/zion/ZION/frontend/app/api/auth/register/route.ts:71:      apiKey: generateApiKey(),
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:22:  apiKey: string;
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:35:// Generate API key
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:36:function generateApiKey(): string {
/home/zion/ZION/frontend/app/api/auth/wallet/route.ts:101:        apiKey: generateApiKey(),
/home/zion/ZION/frontend/app/api/wallet/send/route.ts:6:  const adapterKey = process.env.ADAPTER_API_KEY || '';
/home/zion/ZION/frontend/app/api/wallet/send/route.ts:14:        ...(adapterKey ? { 'x-api-key': adapterKey } : {}),
/home/zion/ZION/frontend/app/api/wallet/save/route.ts:6:  const adapterKey = process.env.ADAPTER_API_KEY || '';
/home/zion/ZION/frontend/app/api/wallet/save/route.ts:18:        ...(adapterKey ? { 'x-api-key': adapterKey } : {}),
/home/zion/ZION/frontend/app/api/wallet/keys/route.ts:8:  const adapterKey = process.env.ADAPTER_API_KEY || '';
/home/zion/ZION/frontend/app/api/wallet/keys/route.ts:18:        ...(adapterKey ? { 'x-api-key': adapterKey } : {}),
/home/zion/ZION/frontend/app/api/wallet/create/route.ts:6:  const adapterKey = process.env.ADAPTER_API_KEY || '';
/home/zion/ZION/frontend/app/api/wallet/create/route.ts:26:        ...(adapterKey ? { 'x-api-key': adapterKey } : {}),
/home/zion/ZION/zion/ai/ai_documentation.py:559:            authentication="api_key"
/home/zion/ZION/zion/ai/ai_config.py:258:                        'api_key_required': True,
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa-0.19.1.dist-info/METADATA:371:`"-----BEGIN EC PRIVATE KEY-----"` base64-encoded format, and the DER format
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/ECC.py:1279:    if encoded.startswith(b'-----BEGIN OPENSSH PRIVATE KEY'):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/PublicKey/RSA.py:828:    if extern_key.startswith(b'-----BEGIN OPENSSH PRIVATE KEY'):
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:81:    rsaKeyPEM = u'''-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:92:    rsaKeyPEM8 = u'''-----BEGIN PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:108:        ('test', u'''-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:122:        ('winter', u'''-----BEGIN ENCRYPTED PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:368:        self.assertTrue(tostr(outkey).find('BEGIN RSA PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:380:        self.assertTrue(tostr(outkey).find('BEGIN RSA PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:392:        self.assertTrue(tostr(outkey).find('BEGIN PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:405:        self.assertTrue(tostr(outkey).find('BEGIN ENCRYPTED PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_RSA.py:436:        self.assertTrue(tostr(outkey).find('BEGIN ENCRYPTED PRIVATE KEY')!=-1)
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:146:-----BEGIN DSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:208:-----BEGIN PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:256:-----BEGIN DSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_DSA.py:296:-----BEGIN ENCRYPTED PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:190:        mismatch = """-----BEGIN PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1123:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1130:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1378:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1385:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1668:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1674:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1957:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:1965:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2256:        pem1 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/PublicKey/test_import_ECC.py:2265:        pem2 = """-----BEGIN EC PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pss.py:65:    rsa_key = b'-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAsvI34FgiTK8+txBvmooNGpNwk23YTU51dwNZi5yha3W4lA/Q\nvcZrDalkmD7ekWQwnduxVKa6pRSI13KBgeUOIqJoGXSWhntEtY3FEwvWOHW5AE7Q\njUzTzCiYT6TVaCcpa/7YLai+p6ai2g5f5Zfh4jSawa9uYeuggFygQq4IVW796MgV\nyqxYMM/arEj+/sKz3Viua9Rp9fFosertCYCX4DUTgW0mX9bwEnEOgjSI3pLOPXz1\n8vx+DRZS5wMCmwCUa0sKonLn3cAUPq+sGix7+eo7T0Z12MU8ud7IYVX/75r3cXiF\nPaYE2q8Le0kgOApIXbb+x74x0rNgyIh1yGygkwIDAQABAoIBABz4t1A0pLT6qHI2\nEIOaNz3mwhK0dZEqkz0GB1Dhtoax5ATgvKCFB98J3lYB08IBURe1snOsnMpOVUtg\naBRSM+QqnCUG6bnzKjAkuFP5liDE+oNQv1YpKp9CsUovuzdmI8Au3ewihl+ZTIN2\nUVNYMEOR1b5m+z2SSwWNOYsiJwpBrT7zkpdlDyjat7FiiPhMMIMXjhQFVxURMIcB\njUBtPzGvV/PG90cVDWi1wRGeeP1dDqti/jsnvykQ15KW1MqGrpeNKRmDdTy/Ucl1\nWIoYklKw3U456lgZ/rDTDB818+Tlnk35z4yF7d5ANPM8CKfqOPcnO1BCKVFzf4eq\n54wvUtkCgYEA1Zv2lp06l7rXMsvNtyYQjbFChezRDRnPwZmN4NCdRtTgGG1G0Ryd\nYz6WWoPGqZp0b4LAaaHd3W2GTcpXF8WXMKfMX1W+tMAxMozfsXRKMcHoypwuS5wT\nfJRXJCG4pvd57AB0iVUEJW2we+uGKU5Zxcx//id2nXGCpoRyViIplQsCgYEA1nVC\neHupHChht0Fh4N09cGqZHZzuwXjOUMzR3Vsfz+4WzVS3NvIgN4g5YgmQFOeKwo5y\niRq5yvubcNdFvf85eHWClg0zPAyxJCVUWigCrrOanGEhJo6re4idJvNVzu4Ucg0v\n6B3SJ1HsCda+ZSNz24bSyqRep8A+RoAaoVSFx5kCgYEAn3RvXPs9s+obnqWYiPF3\nRe5etE6Vt2vfNKwFxx6zaR6bsmBQjuUHcABWiHb6I71S0bMPI0tbrWGG8ibrYKl1\nNTLtUvVVCOS3VP7oNTWT9RTFTAnOXU7DFSo+6o/poWn3r36ff6zhDXeWWMr2OXtt\ndEQ1/2lCGEGVv+v61eVmmQUCgYABFHITPTwqwiFL1O5zPWnzyPWgaovhOYSAb6eW\n38CXQXGn8wdBJZL39J2lWrr4//l45VK6UgIhfYbY2JynSkO10ZGow8RARygVMILu\nOUlaK9lZdDvAf/NpGdUAvzTtZ9F+iYZ2OsA2JnlzyzsGM1l//3vMPWukmJk3ral0\nqoJJ8QKBgGRG3eVHnIegBbFVuMDp2NTcfuSuDVUQ1fGAwtPiFa8u81IodJnMk2pq\niXu2+0ytNA/M+SVrAnE2AgIzcaJbtr0p2srkuVM7KMWnG1vWFNjtXN8fAhf/joOv\nD+NmPL/N4uE57e40tbiU/H7KdyZaDt+5QiTmdhuyAe6CBjKsF2jy\n-----END RSA PRIVATE KEY-----'
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Signature/test_pkcs1_15.py:152:    rsakey = """-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Cipher/test_pkcs1_15.py:71:                '''-----BEGIN RSA PRIVATE KEY-----
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:154:    static_priv = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg9VHFVKh2a1aVFifH\n+BiyNaRa2kttEg3165Ye/dJxJ7KhRANCAARImIEXro5ZOcyWU2mq/+d79FEZXtTA\nbKkz1aICQXihQdCMzRNbeNtC9LFLzhu1slRKJ2xsDAlw9r6w6vwtkRzr\n-----END PRIVATE KEY-----')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:155:    static_pub = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgHhmv8zmZ+Nw8fsZd\ns8tlZflyfw2NE1CRS9DWr3Y3O46hRANCAAS3hZVUCbk+uk3w4S/YOraEVGG+WYpk\nNO/vrwzufUUks2GV2OnBQESe0EBk4Jq8gn4ij8Lvs3rZX2yT+XfeATYd\n-----END PRIVATE KEY-----').public_key()
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:157:    eph_priv = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgGPdJmFFFKzLPspIr\nE1T2cEjeIf4ajS9CpneP0e2b3AyhRANCAAQBexAA5BYDcXHs2KOksTYUsst4HhPt\nkp0zkgI2virc3OGJFNGPaCCPfFCQJHwLRaEpiq3SoQlgoBwSc8ZPsl3y\n-----END PRIVATE KEY-----')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/Crypto/SelfTest/Protocol/test_ecdh.py:159:    eph_pub = ECC.import_key('-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQghaVZXElSEGEojFKF\nOU0JCpxWUWHvWQUR81gwWrOp76ShRANCAATi1Ib2K+YR3AckD8wxypWef7pw5PRw\ntBaB3RDPyE7IjHZC6yu1DbcXoCdtaw+F5DM+4zpl59n5ZaIy/Yl1BdIy\n-----END PRIVATE KEY-----')
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:940:        ``BEGIN EC PRIVATE KEY``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:941:        PKCS#8 files have the header ``BEGIN PRIVATE KEY``.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:972:        private_key_index = string.find(b"-----BEGIN EC PRIVATE KEY-----")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:974:            private_key_index = string.index(b"-----BEGIN PRIVATE KEY-----")
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1187:        The PEM header will specify ``BEGIN EC PRIVATE KEY`` or
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/keys.py:1188:        ``BEGIN PRIVATE KEY``, depending on the desired format.
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:245:        self.assertTrue(s1.startswith(b"-----BEGIN EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:258:        self.assertTrue(s1.startswith(b"-----BEGIN EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_pyecdsa.py:272:        self.assertTrue(s1.startswith(b"-----BEGIN EC PRIVATE KEY-----"))
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_ecdh.py:305:    "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:144:            "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:527:            "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:536:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:545:            "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:566:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:591:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:658:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:754:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:774:            b"-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:789:            b"-----BEGIN OPENSSH PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:820:            "-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:846:            b"-----BEGIN PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:919:    "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1031:    "-----BEGIN EC PRIVATE KEY-----\n"
/home/zion/ZION/.venv_local/lib/python3.13/site-packages/ecdsa/test_keys.py:1132:    pem = """-----BEGIN PRIVATE KEY-----
/home/zion/ZION/docs/2.7.5/SECURITY_FINDINGS_WEEK2.md:546:2. Begin fixing CRIT-001 (private key encryption)
/home/zion/ZION/config/ssh_config.json:7:  "key_content": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAgEAu395fuIKFgIu1pmZ15dHqMHH7dvr2uZSgFChm0Aeimw4e/ptV868\nK4/syiX5RS9GZ9gcZdcsdnPXzHLD90oyE0nMqolGsQEUzJwy57odzsbw24Oh/bk2+7Q7DG\nDH/OFWWEn0P89MGKMAdn1cs/a8gGjjVnJbSxj+R22PrrNvhlqfd5YD0zqIrdXy7TnfqZ1p\nzwUtUH5Ex6bN5nggBteZB60s5XJ31cJm/VB3pK2Irvx9nbTU7/G0yXXWAUKH72XqgGbUG0\nZ1tgbSWUE8bOPxX3UcqRWvRAYS/FNCgLa19B0Oz7fuTPln+3X/0/KRdh8/OczP9GDwlHL+\nzdeKODEmShx6eGswjK0ZE5F9h280b6nNGJioxZrVdtjRlK4xanpC1r6oMRwseQONP7XFUh\nrie7x7DfSnLxPDE2EbUfDRG22duMbfkaEHH6XYdFpMwXtC0C++r5kRxCoo/mz1iCh6JUnZ\ncvkGYX2UZhMsLwwBjkfSHXDuR4AphxNAZsKnGV3aCKzuhEo0Lb+tEp92AKMbnn9bJB0uOr\ne0WdAz2DMd+49cmFTdkAIhUx0ItJRRzXOFDtY0fMQNoOd3WQRo/M4iWe8jQ7j8aYz7r6Be\nmgMj2LDglm7XNWa5Szf+E9CSaoM3bKfSStQMCdbc4peOSlnd5VPG6xzZ8UXGa07ZeDEENr\nEAAAdQqhCXRaoQl0UAAAAHc3NoLXJzYQAAAgEAu395fuIKFgIu1pmZ15dHqMHH7dvr2uZS\ngFChm0Aeimw4e/ptV868K4/syiX5RS9GZ9gcZdcsdnPXzHLD90oyE0nMqolGsQEUzJwy57\nodzsbw24Oh/bk2+7Q7DGDH/OFWWEn0P89MGKMAdn1cs/a8gGjjVnJbSxj+R22PrrNvhlqf\nd5YD0zqIrdXy7TnfqZ1pzwUtUH5Ex6bN5nggBteZB60s5XJ31cJm/VB3pK2Irvx9nbTU7/\nG0yXXWAUKH72XqgGbUG0Z1tgbSWUE8bOPxX3UcqRWvRAYS/FNCgLa19B0Oz7fuTPln+3X/\n0/KRdh8/OczP9GDwlHL+zdeKODEmShx6eGswjK0ZE5F9h280b6nNGJioxZrVdtjRlK4xan\npC1r6oMRwseQONP7XFUhrie7x7DfSnLxPDE2EbUfDRG22duMbfkaEHH6XYdFpMwXtC0C++\nr5kRxCoo/mz1iCh6JUnZcvkGYX2UZhMsLwwBjkfSHXDuR4AphxNAZsKnGV3aCKzuhEo0Lb\n+tEp92AKMbnn9bJB0uOre0WdAz2DMd+49cmFTdkAIhUx0ItJRRzXOFDtY0fMQNoOd3WQRo\n/M4iWe8jQ7j8aYz7r6BemgMj2LDglm7XNWa5Szf+E9CSaoM3bKfSStQMCdbc4peOSlnd5V\nPG6xzZ8UXGa07ZeDEENrEAAAADAQABAAACAAEpWwFUOSfFv7CIpxFU2JbNDIYGtMFYZ+5v\nkXC6xvWokfkCpibDGxtR+u+NqKurDU6bYiGnYZkiQpX7qAciKIlCDciIrS1vikdyOEaDOq\ngLR3a0rA48VYDdrvf2qYaBht1pJ+A1Uo1chSY2xJpAzw4kmDPy5Wnjr7+ViCxW5Dv6174P\n6donJK2fA7BAiYgtd3hW2d8DyT1LZT8mQ1yHfWU0x3Bscx2Z5LVxCCy2/n/HBKgzdJY/8x\nTEbBz54omzIe7FtE6u8w+7nxX6d3tdNiOXQCQ0BC/xsbBqe6D8gMgQXgUfaJSFfwVpx7ny\naMBIlUWwZSFocFUbGUUBLtQGSexs5MnNjEZg86Mun1zubQuQWYfEiNsItnd0kOwCqB+dN9\nTL/9grO7cSv2ncMWYssprFfPhmS8NfF0+caR3U7XdJMFBLyzBfNYNkwH/WRhpu17J4tBI6\ntYzZyGopYqOGV5xTNz2j0d/IX+yJoJckXGX0j/0fjJAYi0Pezdfvst7IW0KcNrCDfK29er\nCfQHHd54211kmQSJhs7Ms2RHhzwIhTHNtO8/mjdYQ0TtmTAeM9eNRgj4MsvgPy/qUxtY/3\nTPYl8u7Y0RlXRgvGpbNdhOTZQ72qkeNl8ysrJLemim8Mactj5+CdlBvf6UHYqHBAXNX/CD\nuCasH2FL70J5HXGauhAAABADdGl8evIEpz+NbKi45UNRkr8Ex/U1Q6J6ocnFT6vXycvCuU\n0IOOgIVzKYh6sWeyQhWhmAMZzpofimd+uLzXeUvpPor+eRFdxQ/HLdSME4TZgTleN+0By7\nP5/Uy0K674e5dlinu7pjY6jM8z3EZhhjYgKa1tZKFZnmasEOuaHPgzCv0HyPcN6SH75S5c\nJ2AYJP87H0HEmWqyw1BE+V8A+79K6kDhIugx/dyVwecQvcLoEtfKIHYZuFwKr9Le42o8Hr\nRUzZ7F9d3quqRA8PuwuMhrAA4F5P82TzakDPYDmxkyVJIKPxAJgJxPs70PuSdf0A/1JfqF\n+Bi6I4LyQwG2wwsAAAEBAOdbvH/zV/BiwvPE1s/EpIZSPBMpbrheihYqk78bHCQkyo5ZTW\nti3c5sQShDLO9+elcCIV2Bbcne/pOxrscT8GIX0F4peatiTd2liW6oP+9rT+LekbdlSI6D\nxNcfn+dQx9aJ3B55UnDp6fg1yG226GEhuApjfuAxYJRj4Ok/BacTMbiec0xdf+FTrY9+EM\niPSPYc09Moz37vQwNdvAC4hgg7ABTj95VGZa3GbRS5kVSowwq1itTs8TLHcjeLVaKQQ+OT\nJZC9H89sIRRaHPyoatCcISBD+a/JAWDGVk5UCr4GjnrpIcp1KuH+Bsw3THHWi1GK3dnpGU\ni7YUGWJVPiwC0AAAEBAM931O22UPf5EWXj2RxMfVU7u7E+CPg3w8EnRUxSqs+H+B4/pnqi\nUcXYurPO1uvYXCLMOfqro769zlt01ZQc4DpviH+8S2m8Zmw1EYbLJ2m14mmJxl/r0IVoul\neJqxqc9sgTx14Clxbwh7zuWWha170byVFNNub+Mc06oySQIM/4rGjGJlGUVDtl8RRXEvGc\n+JmjlAcVXab5991uP13p0xJd3HfqFuPuDlVfW8QIULOf2/Fl4+bPin9YxIcHeToeafa0L/\nhcMYuBBemq8Yl4rNSLwMaosRjyGvvccQzo4SC37X9XzpUc4/z8BDPUhtv+TDhRJhLZ59qM\nR0bxW0TZHxUAAAAYemlvbi1kZXBsb3ltZW50LTIwMjUxMDA3AQID\n-----END OPENSSH PRIVATE KEY-----"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:32:    "BEGIN.*PRIVATE.*KEY"
/home/zion/ZION/scripts/phase3.1_security_cleanup.sh:33:    "aws.*access"
